"use strict";(self.webpackChunkweb3auth_docs=self.webpackChunkweb3auth_docs||[]).push([[48859],{73499:(e,n,t)=>{t.r(n),t.d(n,{assets:()=>b,contentTitle:()=>m,default:()=>w,frontMatter:()=>g,metadata:()=>j,toc:()=>f});var s=t(85893),i=t(11151),r=t(68020),a=t(46657),o=t(35110),c=t(69565),l=t(51626),h=t(43513),d=t(52229),u=t(51636),p=t(14546),x=t(30831);const g={title:"Using Auth0 with Web3Auth SFA React Native SDK",image:"content-hub/guides/banners/auth0.png",description:"Learn how to use Web3Auth Single Factor Auth React Native SDK with Auth0",type:"guide",tags:["web","@web3auth/single-factor-auth-react-native","auth0","custom authentication","react native","ethereum","sms","email","sms passwordless","email passwordless","passwordless","sms otp"],date:"14 November, 2023",author:"Web3Auth Team",order:3,communityPortalTopicId:32},m=void 0,j={type:"mdx",permalink:"/docs/content-hub/guides/sfa-rn-expo-auth0",source:"@site/src/pages/content-hub/guides/sfa-rn-expo-auth0.mdx",title:"Using Auth0 with Web3Auth SFA React Native SDK",description:"Learn how to use Web3Auth Single Factor Auth React Native SDK with Auth0",frontMatter:{title:"Using Auth0 with Web3Auth SFA React Native SDK",image:"content-hub/guides/banners/auth0.png",description:"Learn how to use Web3Auth Single Factor Auth React Native SDK with Auth0",type:"guide",tags:["web","@web3auth/single-factor-auth-react-native","auth0","custom authentication","react native","ethereum","sms","email","sms passwordless","email passwordless","passwordless","sms otp"],date:"14 November, 2023",author:"Web3Auth Team",order:3,communityPortalTopicId:32},unlisted:!1},b={},f=[{value:"Quick Start",id:"quick-start",level:2},{value:"How it works?",id:"how-it-works",level:2},{value:"Prerequisites",id:"prerequisites",level:2},{value:"Setup your Auth0 Tenant",id:"setup-your-auth0-tenant",level:2},{value:"Setup your Web3Auth Dashboard",id:"setup-your-web3auth-dashboard",level:2},{value:"Create Auth0 Verifiers",id:"create-auth0-verifiers",level:3},{value:"Using the Web3Auth SFA Web SDK",id:"using-the-web3auth-sfa-web-sdk",level:2},{value:"Installation",id:"installation",level:3},{value:"Understanding the Dependencies",id:"understanding-the-dependencies",level:4},{value:"<code>@web3auth/base</code>",id:"web3authbase",level:5},{value:"<code>@web3auth/ethereum-provider</code>",id:"web3authethereum-provider",level:5},{value:"<code>@web3auth/single-factor-auth-react-native</code>",id:"web3authsingle-factor-auth-react-native",level:5},{value:"<code>react-native-auth0</code>",id:"react-native-auth0",level:5},{value:"<code>ethers</code>",id:"ethers",level:5},{value:"<code>expo-secure-store</code>",id:"expo-secure-store",level:4},{value:"Configure Auth0 for React Native",id:"configure-auth0-for-react-native",level:4},{value:"Initialization",id:"initialization",level:3},{value:"Importing the packages",id:"importing-the-packages",level:5},{value:"Instantiate the Web3Auth SFA React Native SDK",id:"instantiate-the-web3auth-sfa-react-native-sdk",level:5},{value:"Initializing the Web3Auth SDK",id:"initializing-the-web3auth-sdk",level:4},{value:"Authentication",id:"authentication",level:3},{value:"Getting the <code>idToken</code> from Auth0 upon login",id:"getting-the-idtoken-from-auth0-upon-login",level:4},{value:"Initializing the Web3Auth SDK",id:"initializing-the-web3auth-sdk-1",level:4},{value:"Logout",id:"logout",level:3},{value:"Interacting with the Blockchain",id:"interacting-with-the-blockchain",level:2},{value:"Example Code",id:"example-code",level:2},{value:"Troubleshooting",id:"troubleshooting",level:2},{value:"Questions?",id:"questions",level:2}];function v(e){const n={a:"a",admonition:"admonition",code:"code",h2:"h2",h3:"h3",h4:"h4",h5:"h5",li:"li",p:"p",pre:"pre",strong:"strong",ul:"ul",...(0,i.a)(),...e.components};return(0,s.jsxs)(s.Fragment,{children:[(0,s.jsx)(x.Z,{title:"Using Auth0 with Web3Auth SFA React Native SDK",description:"Learn how to use Web3Auth Single Factor Auth React Native SDK with Auth0 in your React Native Expo Application.",image:"https://web3auth.io/docs/content-hub/guides/banners/auth0.png",slug:"/content-hub/guides/sfa-rn-expo-auth0"}),"\n",(0,s.jsx)(n.p,{children:"This guide will cover the basics of how to set up your Web3Auth SDK and Auth0 account for the integration and provide you with the links on how to\ndevelop a basic React Native Expo application on the blockchain of your choice."}),"\n",(0,s.jsx)(n.h2,{id:"quick-start",children:"Quick Start"}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-bash",children:"npx degit Web3Auth/web3auth-core-kit-examples/single-factor-auth-react-native/sfa-rn-expo-auth0-example sfa-rn-auth0-demo && cd sfa-rn-auth0-demo && npm install && npm run start\n"})}),"\n",(0,s.jsx)(n.h2,{id:"how-it-works",children:"How it works?"}),"\n",(0,s.jsx)(n.p,{children:"Single Factor Auth SDKs allow for the integration of a single factor of authentication, such as social login, into your dApp. They are designed to be\nsimple to use and can be integrated into your dApp with minimal effort, allowing you to directly use the Web3Auth Network for Wallet Management. This\nis one of the most common use cases of Web3Auth, however, it is semi-custodial in nature, since the key is custodial to the Auth Provider and the\nWeb3Auth Network."}),"\n",(0,s.jsx)("img",{style:{display:"block",maxHeight:"600px",margin:"20px auto"},src:p.Z,alt:"Single Factor Auth SDK Infrastructure"}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsxs)(n.li,{children:["The first step for the application is to get the user authenticated by a login provider(here, Google) and get the user's ",(0,s.jsx)(n.code,{children:"idToken"}),"."]}),"\n",(0,s.jsxs)(n.li,{children:["Once the social login is successful, depending on whether the user has enabled ",(0,s.jsx)(n.strong,{children:"Multi-Factor Authentication(MFA)"})," or not, the key is generated."]}),"\n",(0,s.jsxs)(n.li,{children:["If the user has not enabled MFA, we use the ",(0,s.jsx)(n.code,{children:"@web3auth/single-factor-auth"})," SDK to retrieve the private key shares from the Web3Auth auth network\nnodes and reconstruct the private key."]}),"\n",(0,s.jsx)(n.li,{children:"If the user has enabled MFA, an error message is shown that the user has enabled MFA and in this case, they should be using the Web3Auth Plug and\nPlay Web SDKs."}),"\n"]}),"\n",(0,s.jsx)(n.h2,{id:"prerequisites",children:"Prerequisites"}),"\n",(0,s.jsx)(u.ZP,{}),"\n",(0,s.jsx)(r.ZP,{}),"\n",(0,s.jsx)(n.h2,{id:"setup-your-auth0-tenant",children:"Setup your Auth0 Tenant"}),"\n",(0,s.jsx)(a.ZP,{}),"\n",(0,s.jsx)(n.h2,{id:"setup-your-web3auth-dashboard",children:"Setup your Web3Auth Dashboard"}),"\n",(0,s.jsx)(h.ZP,{}),"\n",(0,s.jsx)(n.h3,{id:"create-auth0-verifiers",children:"Create Auth0 Verifiers"}),"\n",(0,s.jsx)(o.ZP,{}),"\n",(0,s.jsx)(n.h2,{id:"using-the-web3auth-sfa-web-sdk",children:"Using the Web3Auth SFA Web SDK"}),"\n",(0,s.jsxs)(n.p,{children:["To use the Web3Auth SFA Web SDK, you need to add ",(0,s.jsx)(n.code,{children:"@web3auth/single-factor-auth"})," to your project."]}),"\n",(0,s.jsx)(n.h3,{id:"installation",children:"Installation"}),"\n",(0,s.jsx)(n.p,{children:"For this project, you need to add the following Web3Auth dependencies to your package.json"}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-shell",children:"npm install --save @web3auth/single-factor-auth-react-native @web3auth/base @web3auth/ethereum-provider ethers react-native-auth0 expo-secure-store\n"})}),"\n",(0,s.jsx)(n.h4,{id:"understanding-the-dependencies",children:"Understanding the Dependencies"}),"\n",(0,s.jsx)(n.h5,{id:"web3authbase",children:(0,s.jsx)(n.code,{children:"@web3auth/base"})}),"\n",(0,s.jsxs)(n.p,{children:["Since we're using typescript, we need the ",(0,s.jsx)(n.strong,{children:(0,s.jsx)(n.code,{children:"@web3auth/base"})})," package to provide the types of the different variables we'll be using throughout the\napp-building process. This reduces errors to a very large extent."]}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-shell",children:"npm install --save @web3auth/base\n"})}),"\n",(0,s.jsx)(n.h5,{id:"web3authethereum-provider",children:(0,s.jsx)(n.code,{children:"@web3auth/ethereum-provider"})}),"\n",(0,s.jsx)(n.p,{children:"This package is used to provide the Ethereum provider to the Web3Auth SDK. This is required to interact with the blockchain."}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-shell",children:"npm install --save @web3auth/ethereum-provider\n"})}),"\n",(0,s.jsx)(n.h5,{id:"web3authsingle-factor-auth-react-native",children:(0,s.jsx)(n.code,{children:"@web3auth/single-factor-auth-react-native"})}),"\n",(0,s.jsx)(n.p,{children:"This package is the core package for Single Factor Auth React Native SDK."}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-shell",children:"npm install --save @web3auth/single-factor-auth-react-native\n"})}),"\n",(0,s.jsx)(n.h5,{id:"react-native-auth0",children:(0,s.jsx)(n.code,{children:"react-native-auth0"})}),"\n",(0,s.jsxs)(n.p,{children:["This package is used to provide the Auth0 SDK to the app. This is required to retrieve the ",(0,s.jsx)(n.code,{children:"idToken"})," from Auth0 as the login provider."]}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-shell",children:"npm install --save @auth0/auth0-react\n"})}),"\n",(0,s.jsx)(n.h5,{id:"ethers",children:(0,s.jsx)(n.code,{children:"ethers"})}),"\n",(0,s.jsx)(n.p,{children:"This package is used to interact with the blockchain."}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-shell",children:"npm install --save web3\n"})}),"\n",(0,s.jsx)(n.h4,{id:"expo-secure-store",children:(0,s.jsx)(n.code,{children:"expo-secure-store"})}),"\n",(0,s.jsx)(n.p,{children:"This package is used to store the private key shares in the device's secure storage."}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-shell",children:"npm install --save expo-secure-store\n"})}),"\n",(0,s.jsx)(n.h4,{id:"configure-auth0-for-react-native",children:"Configure Auth0 for React Native"}),"\n",(0,s.jsxs)(n.p,{children:["Please follow the guide here to ",(0,s.jsx)(n.a,{href:"https://auth0.com/docs/quickstart/native/react-native/00-login",children:"configure Auth0 for React Native"}),"."]}),"\n",(0,s.jsx)(n.h3,{id:"initialization",children:"Initialization"}),"\n",(0,s.jsx)(n.p,{children:"Once installed, your Web3Auth application needs to be initialized. Initialization is a multi-step process where we add all the config details for\nWeb3Auth SDK:"}),"\n",(0,s.jsx)(n.h5,{id:"importing-the-packages",children:"Importing the packages"}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-tsx",children:'import { IProvider } from "@web3auth/base";\nimport { EthereumPrivateKeyProvider } from "@web3auth/ethereum-provider";\nimport Web3Auth from "@web3auth/single-factor-auth-react-native";\nimport { decode as atob } from "base-64";\nimport { ethers } from "ethers";\nimport * as SecureStore from "expo-secure-store";\nimport { Auth0Provider, useAuth0 } from "react-native-auth0";\n'})}),"\n",(0,s.jsx)(n.h5,{id:"instantiate-the-web3auth-sfa-react-native-sdk",children:"Instantiate the Web3Auth SFA React Native SDK"}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-tsx",children:'import { IProvider } from "@web3auth/base";\nimport { EthereumPrivateKeyProvider } from "@web3auth/ethereum-provider";\nimport Web3Auth from "@web3auth/single-factor-auth-react-native";\nimport { decode as atob } from "base-64";\nimport { ethers } from "ethers";\nimport * as SecureStore from "expo-secure-store";\nimport { Auth0Provider, useAuth0 } from "react-native-auth0";\n\nconst clientId = "BPi5PB_UiIZ-cPz1GtV5i1I2iOSOHuimiXBI0e-Oe_u6X3oVAbCiAZOTEBtTXw4tsluTITPqA8zMsfxIKMjiqNQ"; // get from https://dashboard.web3auth.io\n\nconst chainConfig = {\n  chainId: "0x1",\n  displayName: "Ethereum Mainnet",\n  chainNamespace: CHAIN_NAMESPACES.EIP155,\n  tickerName: "Ethereum",\n  ticker: "ETH",\n  decimals: 18,\n  rpcTarget: "https://rpc.ankr.com/eth",\n  blockExplorer: "https://etherscan.io",\n};\n\n// Initialising Web3Auth Single Factor Auth SDK\nconst web3auth = new Web3Auth(SecureStore, {\n  clientId,\n  web3AuthNetwork: "sapphire_mainnet",\n  usePnPKey: false, // By default, this sdk returns CoreKitKey\n});\n\nconst privateKeyProvider = new EthereumPrivateKeyProvider({\n  config: { chainConfig },\n});\n'})}),"\n",(0,s.jsxs)(n.p,{children:["Here, we're using the ",(0,s.jsx)(n.code,{children:"chainConfig"})," property to set the ",(0,s.jsx)(n.code,{children:"chainId"})," and ",(0,s.jsx)(n.code,{children:"chainNamespace"})," among other parameters. The ",(0,s.jsx)(n.code,{children:"chainId"})," and ",(0,s.jsx)(n.code,{children:"chainNamespace"})," are\nthe id and the namespace respectively of the chain you're connecting to. We've initialized them for EVM for this guide. You can find the list of\navailable providers ",(0,s.jsx)(n.a,{href:"/sdk/helper-sdks/providers/",children:"here"})," to select from."]}),"\n",(0,s.jsxs)(n.p,{children:["Additionally, sometimes you might face clogging in the network because the test network is a bit clogged at that point. To avoid this, we can use the\nproperty ",(0,s.jsx)(n.code,{children:"rpcTarget"})," and pass over the URL of the node you want to connect to."]}),"\n",(0,s.jsx)(n.h4,{id:"initializing-the-web3auth-sdk",children:"Initializing the Web3Auth SDK"}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-tsx",children:"web3authSfa.init(privateKeyProvider);\n"})}),"\n",(0,s.jsx)(n.h3,{id:"authentication",children:"Authentication"}),"\n",(0,s.jsxs)(n.h4,{id:"getting-the-idtoken-from-auth0-upon-login",children:["Getting the ",(0,s.jsx)(n.code,{children:"idToken"})," from Auth0 upon login"]}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-tsx",children:'const { authorize, clearSession, getCredentials } = useAuth0();\n\nconst signInWithAuth0 = async () => {\n  try {\n    // @ts-ignore\n    await authorize({ scope: "openid profile email" }, { customScheme: "auth0.com.web3authsfaauth0" }, { responseType: "token id_token" });\n    const credentials = await getCredentials();\n\n    return credentials.idToken;\n  } catch (error) {\n    console.error(error);\n  }\n};\n'})}),"\n",(0,s.jsx)(l.ZP,{}),"\n",(0,s.jsx)(n.h4,{id:"initializing-the-web3auth-sdk-1",children:"Initializing the Web3Auth SDK"}),"\n",(0,s.jsxs)(n.p,{children:["The next step is to initialize the Web3Auth SDK. We now have all the parameters that are needed to call the ",(0,s.jsx)(n.code,{children:"connect"})," method of the Web3Auth SDK."]}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-tsx",children:'const idToken = await signInWithAuth0();\n\nconst parsedToken = parseToken(idToken);\nsetUserInfo(parsedToken);\n\nconst verifierId = sub;\nawait web3auth.connect({\n  verifier: "w3a-auth0-demo", // e.g. `web3auth-sfa-verifier` replace with your verifier name, and it has to be on the same network passed in init().\n  verifierId, // e.g. `Yux1873xnibdui` or `name@email.com` replace with your verifier id(sub or email)\'s value.\n  idToken,\n});\n'})}),"\n",(0,s.jsx)(n.admonition,{type:"info",children:(0,s.jsxs)(n.p,{children:["Since we are directly using Single Factor Auth SDK to log in, the Web3Auth ",(0,s.jsx)(n.code,{children:"getUserInfo"})," function won't work. We need to get the user details directly\nfrom the ",(0,s.jsx)(n.code,{children:"idToken"}),"."]})}),"\n",(0,s.jsx)(d.ZP,{}),"\n",(0,s.jsx)(n.h3,{id:"logout",children:"Logout"}),"\n",(0,s.jsxs)(n.p,{children:["Logging out your user is as simple as calling the ",(0,s.jsx)(n.code,{children:"logout"})," function on the Web3Auth SDK."]}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-tsx",children:"await clearSession();\nawait web3authSfa.logout();\n"})}),"\n",(0,s.jsx)(n.h2,{id:"interacting-with-the-blockchain",children:"Interacting with the Blockchain"}),"\n",(0,s.jsx)(c.ZP,{}),"\n",(0,s.jsx)(n.h2,{id:"example-code",children:"Example Code"}),"\n",(0,s.jsxs)(n.p,{children:["The code for the example can be found\n",(0,s.jsx)(n.a,{href:"https://github.com/Web3Auth/web3auth-core-kit-examples/tree/main/single-factor-auth-react-native/sfa-rn-expo-auth0-example",children:"here"}),"."]}),"\n",(0,s.jsx)(n.h2,{id:"troubleshooting",children:"Troubleshooting"}),"\n",(0,s.jsxs)(n.p,{children:["Please refer to the ",(0,s.jsx)(n.strong,{children:(0,s.jsx)(n.a,{href:"/troubleshooting/metro-issues",children:"React Native Troubleshooting Guide"})})," if you face any hurdles."]}),"\n",(0,s.jsx)(n.h2,{id:"questions",children:"Questions?"}),"\n",(0,s.jsxs)(n.p,{children:["Ask us on ",(0,s.jsx)(n.a,{href:"https://web3auth.io/community/c/help-core-kit/sfa-react-native-sdk/32",children:"Web3Auth Community Portal"}),"."]})]})}function w(e={}){const{wrapper:n}={...(0,i.a)(),...e.components};return n?(0,s.jsx)(n,{...e,children:(0,s.jsx)(v,{...e})}):v(e)}},68020:(e,n,t)=>{t.d(n,{ZP:()=>a});var s=t(85893),i=t(11151);function r(e){const n={a:"a",li:"li",p:"p",ul:"ul",...(0,i.a)(),...e.components};return(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsxs)(n.li,{children:["\n",(0,s.jsxs)(n.p,{children:["Create an Auth0 tenant and configure a Single Page Web Application (SPA for Web) or Native (for Mobile) from\n",(0,s.jsx)(n.a,{href:"https://manage.auth0.com/",children:"Auth0 Console"}),"."]}),"\n"]}),"\n",(0,s.jsxs)(n.li,{children:["\n",(0,s.jsx)(n.p,{children:"Please note that Regular Web Applications are also supported as mentioned in the flows above. However, for this guide, we prefer SPA since its\nimplicit flow doesn\u2019t require an application to host a backend server."}),"\n"]}),"\n"]})}function a(e={}){const{wrapper:n}={...(0,i.a)(),...e.components};return n?(0,s.jsx)(n,{...e,children:(0,s.jsx)(r,{...e})}):r(e)}},46657:(e,n,t)=>{t.d(n,{ZP:()=>a});var s=t(85893),i=t(11151);function r(e){const n={a:"a",admonition:"admonition",code:"code",h3:"h3",h5:"h5",img:"img",li:"li",p:"p",strong:"strong",ul:"ul",...(0,i.a)(),...e.components};return(0,s.jsxs)(s.Fragment,{children:[(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsxs)(n.li,{children:["\n",(0,s.jsx)(n.p,{children:"Add the following URLs for your app to the Allowed Web Origins field when configuring your Auth0 Application."}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsxs)(n.li,{children:["Additional to your URLs for the application, please add","\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsx)(n.li,{children:(0,s.jsx)(n.a,{href:"https://auth.web3auth.io/auth",children:"https://auth.web3auth.io/auth"})}),"\n"]}),"\n"]}),"\n"]}),"\n",(0,s.jsx)(n.p,{children:(0,s.jsx)(n.img,{alt:"Add Callback URL to Auth0 Dashboard",src:t(36282).Z+"",width:"1590",height:"746"})}),"\n"]}),"\n",(0,s.jsxs)(n.li,{children:["\n",(0,s.jsxs)(n.p,{children:["You will require the ",(0,s.jsx)(n.code,{children:"domain"})," and ",(0,s.jsx)(n.code,{children:"clientId"})," of the newly created application which you can copy from ",(0,s.jsx)(n.a,{href:"https://manage.auth0.com/",children:"Auth0 Console"}),".\n",(0,s.jsx)(n.img,{alt:"Domain and Client ID from Auth0 Dashboard",src:t(33172).Z+"",width:"4188",height:"1956"})]}),"\n"]}),"\n"]}),"\n",(0,s.jsx)(n.h3,{id:"enable-social-login",children:"Enable Social Login"}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsxs)(n.li,{children:["Enable ",(0,s.jsx)(n.code,{children:"Google"})," or other social provider on the ",(0,s.jsx)(n.code,{children:"Authentication > Social"})," page of your Auth0 Dashboard.\n",(0,s.jsx)(n.img,{alt:"Auth0 Dashboard to enable Social logins",src:t(9333).Z+"",width:"1552",height:"987"})]}),"\n",(0,s.jsxs)(n.li,{children:["Visit ",(0,s.jsx)(n.a,{href:"https://auth0.com/learn/social-login",children:"https://auth0.com/learn/social-login"})," to learn more."]}),"\n"]}),"\n",(0,s.jsx)(n.h3,{id:"enable-sms-passwordless",children:"Enable SMS Passwordless"}),"\n",(0,s.jsx)(n.admonition,{title:"Optional",type:"note",children:(0,s.jsx)(n.p,{children:"If you want to implement SMS Passwordless, then this section is for you. Otherwise, you can skip this."})}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsxs)(n.li,{children:["Enable ",(0,s.jsx)(n.code,{children:"SMS"})," on the ",(0,s.jsx)(n.code,{children:"Authentication > Passwordless"})," page of your Auth0 Dashboard.\n",(0,s.jsx)(n.img,{alt:"Auth0 Dashboard to enable SMS Passwordless Option",src:t(77811).Z+"",width:"1552",height:"987"})]}),"\n",(0,s.jsxs)(n.li,{children:["Under the ",(0,s.jsx)(n.code,{children:"Settings"})," tab, add your ",(0,s.jsx)(n.code,{children:"Twilio SID"})," and ",(0,s.jsx)(n.code,{children:"Twilio AuthToken"}),".\n",(0,s.jsx)(n.img,{alt:"Auth0 Dashboard to enable SMS Passwordless | Setup",src:t(99753).Z+"",width:"1552",height:"931"})]}),"\n",(0,s.jsxs)(n.li,{children:["Also, update the ",(0,s.jsx)(n.code,{children:"From"})," number on the same page, and click on the ",(0,s.jsx)(n.code,{children:"Save"})," button."]}),"\n",(0,s.jsxs)(n.li,{children:["Next, enable your application under the ",(0,s.jsx)(n.code,{children:"Applications"})," tab, and click on the ",(0,s.jsx)(n.code,{children:"Save"})," button.\n",(0,s.jsx)(n.img,{alt:"Auth0 Dashboard to enable SMS Passwordless | Enable App",src:t(71486).Z+"",width:"1552",height:"611"})]}),"\n",(0,s.jsxs)(n.li,{children:["You can test sending an SMS from the ",(0,s.jsx)(n.code,{children:"Try"})," tab. Once, an SMS comes with OTP, it means it has been successfully configured."]}),"\n"]}),"\n",(0,s.jsx)(n.h5,{id:"update-lockscreen-for-sms-passwordless",children:"Update Lockscreen for SMS Passwordless"}),"\n",(0,s.jsx)(n.admonition,{title:"update-lock-screen",type:"info",children:(0,s.jsxs)(n.p,{children:["If you're to use SMS Passwordless, please\n",(0,s.jsx)(n.strong,{children:(0,s.jsx)(n.a,{href:"https://auth0.com/docs/authenticate/passwordless/implement-login/universal-login",children:"visit here to set up the Lock Screen of Auth0"})})," from your Auth0\nDashboard."]})}),"\n",(0,s.jsx)(n.h3,{id:"enable-email-passwordless",children:"Enable Email Passwordless"}),"\n",(0,s.jsx)(n.admonition,{title:"Optional",type:"note",children:(0,s.jsx)(n.p,{children:"If you want to implement Email Passwordless, then this section is for you. Otherwise, you can skip this."})}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsxs)(n.li,{children:["Enable ",(0,s.jsx)(n.code,{children:"Email"})," on the ",(0,s.jsx)(n.code,{children:"Authentication > Passwordless"})," page of your Auth0 Dashboard.\n",(0,s.jsx)(n.img,{alt:"Auth0 Dashboard to enable Email Passwordless Option",src:t(77811).Z+"",width:"1552",height:"987"})]}),"\n",(0,s.jsxs)(n.li,{children:["Under the ",(0,s.jsx)(n.code,{children:"Settings"})," tab, update ",(0,s.jsx)(n.code,{children:"From"})," and ",(0,s.jsx)(n.code,{children:"Subject"})," based on your need and click on the ",(0,s.jsx)(n.code,{children:"Save"})," button.\n",(0,s.jsx)(n.img,{alt:"Auth0 Dashboard to enable Email Passwordless | Setup",src:t(94238).Z+"",width:"659",height:"751"})]}),"\n",(0,s.jsxs)(n.li,{children:["Next, enable your application under the ",(0,s.jsx)(n.code,{children:"Applications"})," tab, and click on the ",(0,s.jsx)(n.code,{children:"Save"})," button.\n",(0,s.jsx)(n.img,{alt:"Auth0 Dashboard to enable Email Passwordless | Enable App",src:t(1692).Z+"",width:"662",height:"517"})]}),"\n",(0,s.jsxs)(n.li,{children:["You can test sending an Email from the ",(0,s.jsx)(n.code,{children:"Try"})," tab. Once, an Email comes with OTP/Link, it means it has been successfully configured."]}),"\n"]}),"\n",(0,s.jsx)(n.h5,{id:"update-lockscreen-for-email-passwordless",children:"Update Lockscreen for Email Passwordless"}),"\n",(0,s.jsx)(n.admonition,{title:"update-lock-screen",type:"info",children:(0,s.jsxs)(n.p,{children:["If you're to use Email Passwordless, please\n",(0,s.jsx)(n.strong,{children:(0,s.jsx)(n.a,{href:"https://auth0.com/docs/authenticate/passwordless/implement-login/universal-login",children:"visit here to set up the Lock Screen of Auth0"})})," from your Auth0\nDashboard."]})})]})}function a(e={}){const{wrapper:n}={...(0,i.a)(),...e.components};return n?(0,s.jsx)(n,{...e,children:(0,s.jsx)(r,{...e})}):r(e)}},35110:(e,n,t)=>{t.d(n,{ZP:()=>l});var s=t(85893),i=t(11151),r=t(75315),a=t(69487);const o=t.p+"assets/images/create-verifier-google-148f3865b67c367b130d345a89b74fc7.png";function c(e){const n={a:"a",admonition:"admonition",blockquote:"blockquote",code:"code",em:"em",h3:"h3",li:"li",p:"p",strong:"strong",ul:"ul",...(0,i.a)(),...e.components};return(0,s.jsxs)(s.Fragment,{children:[(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsxs)(n.li,{children:["\n",(0,s.jsxs)(n.p,{children:["Create a Verifier from the ",(0,s.jsx)(n.strong,{children:"Custom Auth"})," Section of the ",(0,s.jsx)(n.a,{href:"https://dashboard.web3auth.io/",children:"Developer Dashboard"})," with the following configuration:"]}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsxs)(n.li,{children:["\n",(0,s.jsxs)(n.p,{children:["Pick a name of your choice for the verifier identifier. ",(0,s.jsx)(n.code,{children:"eg. auth0-project"})]}),"\n"]}),"\n",(0,s.jsxs)(n.li,{children:["\n",(0,s.jsxs)(n.p,{children:["Choose ",(0,s.jsx)(n.code,{children:"Social Login Providers"})," and select ",(0,s.jsx)(n.code,{children:"Auth0"})," from the ",(0,s.jsx)(n.strong,{children:"Login Provider"})," dropdown."]}),"\n"]}),"\n",(0,s.jsxs)(n.li,{children:["\n",(0,s.jsxs)(n.p,{children:["Next, Choose your Authentication Type from ",(0,s.jsx)(n.code,{children:"eg. Google, Twitter, GitHub etc.."})," to be the Auth provider."]}),"\n"]}),"\n",(0,s.jsxs)(n.li,{children:["\n",(0,s.jsxs)(n.p,{children:["Paste the ",(0,s.jsx)(n.code,{children:"Client ID"})," and ",(0,s.jsx)(n.code,{children:"Auth0 Domain"})," from the Auth0 SPA you created in the above steps. This will be used to validate the JWT token issued by\nAuth0. And, select ",(0,s.jsx)(n.code,{children:"Sub"})," or ",(0,s.jsx)(n.code,{children:"Email"})," as the JWT Verifier ID."]}),"\n"]}),"\n",(0,s.jsxs)(n.li,{children:["\n",(0,s.jsxs)(n.p,{children:["Click on the ",(0,s.jsx)(n.code,{children:"Create Verifier"})," button to create your verifier. It may take up to 10-20 minutes to deploy the verifier on ",(0,s.jsx)(n.em,{children:"Sapphire Devnet"}),". You'll\nreceive an email once it's complete."]}),"\n",(0,s.jsx)("img",{style:{display:"block",maxHeight:"500px",margin:"20px auto"},src:o,alt:"Create Verifier"}),"\n"]}),"\n"]}),"\n",(0,s.jsxs)(n.blockquote,{children:["\n",(0,s.jsxs)(n.p,{children:["You will require the ",(0,s.jsx)(n.code,{children:"verifierName"})," of the newly created verifier and ",(0,s.jsx)(n.code,{children:"clientId"})," of the Plug and Play Project."]}),"\n"]}),"\n"]}),"\n"]}),"\n",(0,s.jsx)(n.h3,{id:"create-sms-passwordless-verifier",children:"Create SMS Passwordless Verifier"}),"\n",(0,s.jsx)(n.admonition,{title:"Optional",type:"note",children:(0,s.jsx)(n.p,{children:"If you want to implement SMS Passwordless, then this section is for you. Otherwise, you can skip this."})}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsxs)(n.li,{children:["\n",(0,s.jsxs)(n.p,{children:["Create a Verifier from the ",(0,s.jsx)(n.strong,{children:"Custom Auth"})," Section of the ",(0,s.jsx)(n.a,{href:"https://dashboard.web3auth.io/",children:"Developer Dashboard"})," with the following configuration:"]}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsxs)(n.li,{children:["\n",(0,s.jsxs)(n.p,{children:["Choose a name of your choice for the verifier identifier. ",(0,s.jsx)(n.code,{children:"eg. auth0-sms-passwordless"})]}),"\n"]}),"\n",(0,s.jsxs)(n.li,{children:["\n",(0,s.jsxs)(n.p,{children:["Select ",(0,s.jsx)(n.code,{children:"Custom Providers"})," from the ",(0,s.jsx)(n.strong,{children:"Login Provider"}),"."]}),"\n"]}),"\n",(0,s.jsxs)(n.li,{children:["\n",(0,s.jsxs)(n.p,{children:["Choose ",(0,s.jsx)(n.code,{children:"Custom"})," for the ",(0,s.jsx)(n.code,{children:"JWT Verifier ID"})," and type ",(0,s.jsx)(n.code,{children:"name"}),"."]}),"\n"]}),"\n",(0,s.jsxs)(n.li,{children:["\n",(0,s.jsxs)(n.p,{children:["Enter ",(0,s.jsx)(n.code,{children:"https://{YOUR-DOMAIN}/.well-known/jwks.json"})," as your ",(0,s.jsx)(n.code,{children:"JWKS Endpoint"}),". This will be used to validate the JWT token issued by Auth0. eg.\n",(0,s.jsx)(n.code,{children:"https://web3auth.eu.auth0.com/.well-known/jwks.json"})]}),"\n"]}),"\n",(0,s.jsxs)(n.li,{children:["\n",(0,s.jsx)(n.p,{children:"JWT validation fields:"}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsxs)(n.li,{children:["iss: ",(0,s.jsx)(n.code,{children:"https://{YOUR-DOMAIN}"})]}),"\n",(0,s.jsxs)(n.li,{children:["aud: ",(0,s.jsx)(n.code,{children:"{AUTH0-CLIENT-ID}"})]}),"\n"]}),"\n"]}),"\n",(0,s.jsxs)(n.li,{children:["\n",(0,s.jsxs)(n.p,{children:["Click on the ",(0,s.jsx)(n.code,{children:"Create"})," button to create your verifier. It may take up to 10-20 minutes to deploy the verifier on ",(0,s.jsx)(n.em,{children:"Sapphire Devnet"}),". You'll receive\nan email once it's complete."]}),"\n",(0,s.jsx)("img",{style:{display:"block",maxHeight:"500px",margin:"20px auto"},src:a.Z,alt:"Create SMS Verifier"}),"\n"]}),"\n"]}),"\n",(0,s.jsxs)(n.blockquote,{children:["\n",(0,s.jsxs)(n.p,{children:["You will require the ",(0,s.jsx)(n.code,{children:"verifierName"})," of the newly created verifier and ",(0,s.jsx)(n.code,{children:"clientId"})," of the Plug and Play Project."]}),"\n"]}),"\n"]}),"\n"]}),"\n",(0,s.jsx)(n.h3,{id:"create-email-passwordless-verifier",children:"Create Email Passwordless Verifier"}),"\n",(0,s.jsx)(n.admonition,{title:"Optional",type:"note",children:(0,s.jsx)(n.p,{children:"If you want to implement Email Passwordless, then this section is for you. Otherwise, you can skip this."})}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsxs)(n.li,{children:["\n",(0,s.jsxs)(n.p,{children:["Create a Verifier from the ",(0,s.jsx)(n.strong,{children:"Custom Auth"})," Section of the ",(0,s.jsx)(n.a,{href:"https://dashboard.web3auth.io/",children:"Developer Dashboard"})," with the following configuration:"]}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsxs)(n.li,{children:["\n",(0,s.jsxs)(n.p,{children:["Choose a name of your choice for the verifier identifier. ",(0,s.jsx)(n.code,{children:"eg. auth0-email-passwordless"})]}),"\n"]}),"\n",(0,s.jsxs)(n.li,{children:["\n",(0,s.jsxs)(n.p,{children:["Choose ",(0,s.jsx)(n.code,{children:"Social Login Providers"})," and select ",(0,s.jsx)(n.code,{children:"Auth0"})," from the ",(0,s.jsx)(n.strong,{children:"Login Provider"})," dropdown."]}),"\n"]}),"\n",(0,s.jsxs)(n.li,{children:["\n",(0,s.jsxs)(n.p,{children:["Choose your Authentication Type as ",(0,s.jsx)(n.code,{children:"Email Passwordless"})," to use Auth0's Email Passwordless."]}),"\n"]}),"\n",(0,s.jsxs)(n.li,{children:["\n",(0,s.jsxs)(n.p,{children:["Paste the ",(0,s.jsx)(n.code,{children:"Client ID"})," and ",(0,s.jsx)(n.code,{children:"Auth0 Domain"})," from the Auth0 SPA you created in the above steps. This will be used to validate the JWT token issued by\nAuth0."]}),"\n"]}),"\n",(0,s.jsxs)(n.li,{children:["\n",(0,s.jsxs)(n.p,{children:["Click on the ",(0,s.jsx)(n.code,{children:"Create"})," button to create your verifier. It may take up to 10-20 minutes to deploy the verifier on ",(0,s.jsx)(n.em,{children:"Sapphire Devnet"}),". You'll receive\nan email once it's complete."]}),"\n",(0,s.jsx)("img",{style:{display:"block",maxHeight:"500px",margin:"20px auto"},src:r.Z,alt:"Create Email Verifier"}),"\n"]}),"\n"]}),"\n",(0,s.jsxs)(n.blockquote,{children:["\n",(0,s.jsxs)(n.p,{children:["You will require the ",(0,s.jsx)(n.code,{children:"verifierName"})," of the newly created verifier and ",(0,s.jsx)(n.code,{children:"clientId"})," of the Plug and Play Project."]}),"\n"]}),"\n"]}),"\n"]})]})}function l(e={}){const{wrapper:n}={...(0,i.a)(),...e.components};return n?(0,s.jsx)(n,{...e,children:(0,s.jsx)(c,{...e})}):c(e)}},69565:(e,n,t)=>{t.d(n,{ZP:()=>c});var s=t(85893),i=t(11151),r=t(74866),a=t(85162);function o(e){const n={a:"a",code:"code",h3:"h3",li:"li",p:"p",pre:"pre",ul:"ul",...(0,i.a)(),...e.components};return(0,s.jsxs)(s.Fragment,{children:[(0,s.jsxs)(n.p,{children:["So if you have completed this far, it means that you have successfully authenticated your user. Now, you can use the provider returned by Web3Auth as\n",(0,s.jsx)(n.code,{children:"web3auth.provider"})," to interact with your blockchain. You can use the ",(0,s.jsx)(n.a,{href:"/sdk/helper-sdks/providers/",children:"Provider SDKs"})," to perform RPC Calls to your\nblockchain."]}),"\n",(0,s.jsxs)(n.p,{children:["Web3Auth is chain agnostic, ie. depending on whatever blockchain or layer-2 you use, Web3Auth can easily support that. Web3Auth has native providers\nfor EVM and Solana blockchains and for others, you can get the private key in the user scope and make RPC calls. For standardising the type of\nprovider, Web3Auth Base provides a ",(0,s.jsx)(n.code,{children:"IProvider"})," from which you can create your own provider."]}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.a,{href:"/sdk/helper-sdks/providers/evm",children:"Ethereum Provider"})," gives you the capability of making RPC calls to the EVM compatible blockchains."]}),"\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.a,{href:"/sdk/helper-sdks/providers/solana",children:"Solana Provider"})," gives you the capability of making RPC calls to the Solana blockchain."]}),"\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.a,{href:"/sdk/helper-sdks/providers/xrpl",children:"XRPL Provider"})," gives you the capability of making RPC calls to the XRPL blockchain."]}),"\n",(0,s.jsxs)(n.li,{children:["If you want to use any other chain except Solana or EVM chains, for ex: Starknet, you can specify the value of ",(0,s.jsx)(n.code,{children:"chainNamespace"})," field as other in\nthe Web3Auth SDK Constructor. Refer to: ",(0,s.jsx)(n.a,{href:"/sdk/helper-sdks/providers/common",children:"Using other blockchains"})]}),"\n"]}),"\n",(0,s.jsx)(n.h3,{id:"get-user-accounts",children:"Get User Accounts"}),"\n",(0,s.jsxs)(r.Z,{defaultValue:"web3",values:[{label:"Web3",value:"web3"},{label:"Ethers.js",value:"ethers.js"}],children:[(0,s.jsx)(a.Z,{value:"web3",children:(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-tsx",children:'const getAccounts = async () => {\n  if (!provider) {\n    console.log("provider not initialized yet");\n    return;\n  }\n  const web3 = new Web3(provider as any);\n  const userAccounts = await web3.eth.getAccounts();\n  console.log(userAccounts);\n};\n'})})}),(0,s.jsx)(a.Z,{value:"ethers.js",children:(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-tsx",children:'const getAccounts = async () => {\n  if (!provider) {\n    console.log("provider not initialized yet");\n    return;\n  }\n  // For ethers v5\n  // const ethersProvider = new ethers.providers.Web3Provider(this.provider);\n  const ethersProvider = new ethers.BrowserProvider(this.provider);\n\n  // For ethers v5\n  // const signer = ethersProvider.getSigner();\n  const signer = await ethersProvider.getSigner();\n\n  // Get the user\'s Ethereum public address\n  const address = signer.getAddress();\n  console.log(address);\n};\n'})})})]}),"\n",(0,s.jsx)(n.h3,{id:"view-user-balance",children:"View User Balance"}),"\n",(0,s.jsxs)(r.Z,{defaultValue:"web3",values:[{label:"Web3",value:"web3"},{label:"Ethers.js",value:"ethers.js"}],children:[(0,s.jsx)(a.Z,{value:"web3",children:(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-tsx",children:'const getBalance = async () => {\n  if (!provider) {\n    console.log("provider not initialized yet");\n    return;\n  }\n  const web3 = new Web3(provider as any);\n  const accounts = await web3.eth.getAccounts();\n  const balance = await web3.eth.getBalance(accounts[0]);\n  console.log(web3.utils.fromWei(balance));\n};\n'})})}),(0,s.jsx)(a.Z,{value:"ethers.js",children:(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-tsx",children:"const getBalance = async () => {\n  if (!provider) {\n    console.log(\"provider not initialized yet\");\n    return;\n  }\n  // For ethers v5\n  // const ethersProvider = new ethers.providers.Web3Provider(this.provider);\n  const ethersProvider = new ethers.BrowserProvider(this.provider);\n\n  // For ethers v5\n  // const signer = ethersProvider.getSigner();\n  const signer = await ethersProvider.getSigner();\n\n  // Get the user's Ethereum public address\n  const address = signer.getAddress();\n\n  // Get the user's balance in ether\n  // For ethers v5\n  // const balance = ethers.utils.formatEther(\n  // await ethersProvider.getBalance(address) // Balance is in wei\n  // );\n  const balance = ethers.formatEther(\n    await ethersProvider.getBalance(address) // Balance is in wei\n  );\n  console.log(balance);\n};\n"})})})]}),"\n",(0,s.jsx)(n.h3,{id:"sign-message",children:"Sign Message"}),"\n",(0,s.jsxs)(r.Z,{defaultValue:"web3",values:[{label:"Web3",value:"web3"},{label:"Ethers.js",value:"ethers.js"}],children:[(0,s.jsx)(a.Z,{value:"web3",children:(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-tsx",children:'const signMessage = async () => {\n  if (!provider) {\n    console.log("provider not initialized yet");\n    return;\n  }\n  const web3 = new Web3(provider as any);\n  // Get user\'s Ethereum public address\n  const account = (await web3.eth.getAccounts())[0];\n\n  // Message\n  const message = "Hello MPC, Bye Bye SeedPhrase";\n\n  const typedMessage = [\n    {\n      type: "string",\n      name: "message",\n      value: message,\n    },\n  ];\n  const params = [JSON.stringify(typedMessage), account];\n  const method = "eth_signTypedData";\n\n  const signedMessage = await this.provider.request({\n    method,\n    params,\n  });\n  console.log(signedMessage);\n};\n'})})}),(0,s.jsx)(a.Z,{value:"ethers.js",children:(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-tsx",children:'const signMessage = async () => {\n  if (!provider) {\n    console.log("provider not initialized yet");\n    return;\n  }\n  // For ethers v5\n  // const ethersProvider = new ethers.providers.Web3Provider(this.provider);\n  const ethersProvider = new ethers.BrowserProvider(this.provider);\n\n  // For ethers v5\n  // const signer = ethersProvider.getSigner();\n  const signer = await ethersProvider.getSigner();\n  const originalMessage = "YOUR_MESSAGE";\n\n  // Sign the message\n  const signedMessage = await signer.signMessage(originalMessage);\n\n  console.log(signedMessage);\n};\n'})})})]}),"\n",(0,s.jsx)(n.h3,{id:"sign-transaction",children:"Sign Transaction"}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-tsx",children:'const signTransaction = async () => {\n  if (!provider) {\n    console.log("provider not initialized yet");\n    return;\n  }\n  const web3 = new Web3(provider as any);\n  const accounts = await web3.eth.getAccounts();\n\n  const txRes = await web3.eth.signTransaction({\n    from: accounts[0],\n    to: accounts[0],\n    value: web3.utils.toWei("0.0001"),\n    chainId: 1, // change it to your specific chain id.\n  });\n  console.log(txRes.transactionHash);\n};\n'})}),"\n",(0,s.jsx)(n.h3,{id:"send-transaction",children:"Send Transaction"}),"\n",(0,s.jsxs)(r.Z,{defaultValue:"web3",values:[{label:"Web3",value:"web3"},{label:"Ethers.js",value:"ethers.js"}],children:[(0,s.jsx)(a.Z,{value:"web3",children:(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-tsx",children:'const sendTransaction = async () => {\n  if (!provider) {\n    console.log("provider not initialized yet");\n    return;\n  }\n  const web3 = new Web3(provider as any);\n  const accounts = await web3.eth.getAccounts();\n\n  const txRes = await web3.eth.sendTransaction({\n    from: accounts[0],\n    to: accounts[0],\n    value: web3.utils.toWei("0.0001"),\n    chainId: 1, // change it to your specific chain id.\n  });\n  console.log(txRes.transactionHash);\n};\n'})})}),(0,s.jsx)(a.Z,{value:"ethers.js",children:(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-tsx",children:'const sendTransaction = async () => {\n  if (!provider) {\n    console.log("provider not initialized yet");\n    return;\n  }\n  // For ethers v5\n  // const ethersProvider = new ethers.providers.Web3Provider(this.provider);\n  const ethersProvider = new ethers.BrowserProvider(this.provider);\n\n  // For ethers v5\n  // const signer = ethersProvider.getSigner();\n  const signer = await ethersProvider.getSigner();\n\n  const destination = "0x40e1c367Eca34250cAF1bc8330E9EddfD403fC56";\n\n  // Convert 1 ether to wei\n  // For ethers v5\n  // const amount = ethers.utils.parseEther("0.001");\n  const amount = ethers.parseEther("0.001");\n\n  // Submit transaction to the blockchain\n  const tx = await signer.sendTransaction({\n    to: destination,\n    value: amount,\n    maxPriorityFeePerGas: "5000000000", // Max priority fee per gas\n    maxFeePerGas: "6000000000000", // Max fee per gas\n  });\n\n  // Wait for the transaction to be mined\n  const receipt = await tx.wait();\n\n  console.log(receipt.transactionHash);\n};\n'})})})]})]})}function c(e={}){const{wrapper:n}={...(0,i.a)(),...e.components};return n?(0,s.jsx)(n,{...e,children:(0,s.jsx)(o,{...e})}):o(e)}},51626:(e,n,t)=>{t.d(n,{ZP:()=>a});var s=t(85893),i=t(11151);function r(e){const n={code:"code",h4:"h4",p:"p",pre:"pre",...(0,i.a)(),...e.components};return(0,s.jsxs)(s.Fragment,{children:[(0,s.jsx)(n.h4,{id:"parsing-the-token",children:"Parsing the token"}),"\n",(0,s.jsxs)(n.p,{children:["We need to parse the token to get the ",(0,s.jsx)(n.code,{children:"sub"})," field from the token. This is the unique identifier for the user. This is dependent on the ",(0,s.jsx)(n.code,{children:"verifierId"}),"\nfield you've set on the dashboard. In our case, it's ",(0,s.jsx)(n.code,{children:"sub"}),". The code for parsing the ",(0,s.jsx)(n.code,{children:"idToken"})," is as follows:"]}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-tsx",children:'const parseToken = (token: any) => {\n  try {\n    const base64Url = token.split(".")[1];\n    const base64 = base64Url.replace("-", "+").replace("_", "/");\n    return JSON.parse(window.atob(base64 || ""));\n  } catch (err) {\n    console.error(err);\n    return null;\n  }\n};\n\nconst { sub } = parseToken(idToken);\n'})})]})}function a(e={}){const{wrapper:n}={...(0,i.a)(),...e.components};return n?(0,s.jsx)(n,{...e,children:(0,s.jsx)(r,{...e})}):r(e)}},43513:(e,n,t)=>{t.d(n,{ZP:()=>a});var s=t(85893),i=t(11151);function r(e){const n={a:"a",code:"code",img:"img",li:"li",p:"p",strong:"strong",ul:"ul",...(0,i.a)(),...e.components};return(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsxs)(n.li,{children:["\n",(0,s.jsxs)(n.p,{children:["Create a Project from the ",(0,s.jsx)(n.strong,{children:"Project"})," Section of the ",(0,s.jsx)(n.a,{href:"https://dashboard.web3auth.io/",children:"Web3Auth Developer Dashboard"}),"."]}),"\n",(0,s.jsx)(n.p,{children:(0,s.jsx)(n.img,{alt:"Plug n Play Project Creation on Web3Auth Dashboard",src:t(53558).Z+"",width:"1840",height:"1191"})}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsxs)(n.li,{children:["\n",(0,s.jsxs)(n.p,{children:["Enter your desired ",(0,s.jsx)(n.strong,{children:"Project name"}),"."]}),"\n"]}),"\n",(0,s.jsxs)(n.li,{children:["\n",(0,s.jsxs)(n.p,{children:["Select the ",(0,s.jsx)(n.strong,{children:"Product"})," you want to use. For this guide, we'll be using the ",(0,s.jsx)(n.strong,{children:"Plug n Play"})," product."]}),"\n"]}),"\n",(0,s.jsxs)(n.li,{children:["\n",(0,s.jsxs)(n.p,{children:["Select the ",(0,s.jsx)(n.strong,{children:"Platform type"})," you want to use. For this guide, we'll be using the ",(0,s.jsx)(n.strong,{children:"Web Application"})," as the platform."]}),"\n"]}),"\n",(0,s.jsxs)(n.li,{children:["\n",(0,s.jsxs)(n.p,{children:["Select the Web3Auth Network as ",(0,s.jsx)(n.code,{children:"Sapphire Devnet"}),". We recommend creating a project in the ",(0,s.jsx)(n.code,{children:"sapphire_devnet"})," network during development. While\nmoving to a production environment, make sure to convert your project to ",(0,s.jsx)(n.code,{children:"sapphire_mainnet"})," or any of the legacy mainnet network ",(0,s.jsx)(n.code,{children:"mainnet"}),",\n",(0,s.jsx)(n.code,{children:"aqua"}),", or ",(0,s.jsx)(n.code,{children:"cyan"})," network. Otherwise, you'll end up losing users and keys."]}),"\n"]}),"\n",(0,s.jsxs)(n.li,{children:["\n",(0,s.jsxs)(n.p,{children:["Select the blockchain(s) you'll be building this project on. For interoperability with Torus Wallets, you have the option of allowing the user's\nprivate key to be used in other applications using Torus Wallets (",(0,s.jsx)(n.a,{href:"https://app.tor.us",children:"EVM"}),", ",(0,s.jsx)(n.a,{href:"https://solana.tor.us",children:"Solana"}),",\n",(0,s.jsx)(n.a,{href:"https://xrpl.tor.us",children:"XRPL"})," & ",(0,s.jsx)(n.a,{href:"https://casper.tor.us",children:"Casper"}),")."]}),"\n"]}),"\n",(0,s.jsxs)(n.li,{children:["\n",(0,s.jsxs)(n.p,{children:["Finally, once you create the project, you have the option to whitelist your URLs for the project. ",(0,s.jsx)(n.strong,{children:"Please whitelist the domains where your\nproject will be hosted."})]}),"\n",(0,s.jsx)(n.p,{children:(0,s.jsx)(n.img,{alt:"Plug n Play Project - Whitelist",src:t(41991).Z+"",width:"1840",height:"1191"})}),"\n"]}),"\n"]}),"\n"]}),"\n"]})}function a(e={}){const{wrapper:n}={...(0,i.a)(),...e.components};return n?(0,s.jsx)(n,{...e,children:(0,s.jsx)(r,{...e})}):r(e)}},52229:(e,n,t)=>{t.d(n,{ZP:()=>a});var s=t(85893),i=t(11151);function r(e){const n={code:"code",h3:"h3",pre:"pre",...(0,i.a)(),...e.components};return(0,s.jsxs)(s.Fragment,{children:[(0,s.jsx)(n.h3,{id:"get-the-user-profile",children:"Get the User Profile"}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-tsx",children:'const parseToken = (token: any) => {\n  try {\n    const base64Url = token.split(".")[1];\n    const base64 = base64Url.replace("-", "+").replace("_", "/");\n    return JSON.parse(window.atob(base64 || ""));\n  } catch (err) {\n    console.error(err);\n    return null;\n  }\n};\n\nconst userProfile = parseToken(idToken);\n'})})]})}function a(e={}){const{wrapper:n}={...(0,i.a)(),...e.components};return n?(0,s.jsx)(n,{...e,children:(0,s.jsx)(r,{...e})}):r(e)}},51636:(e,n,t)=>{t.d(n,{ZP:()=>a});var s=t(85893),i=t(11151);function r(e){const n={a:"a",li:"li",p:"p",ul:"ul",...(0,i.a)(),...e.components};return(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsxs)(n.li,{children:["\n",(0,s.jsx)(n.p,{children:"For Web Apps: A basic knowledge of JavaScript is required to use Web3Auth SDK."}),"\n"]}),"\n",(0,s.jsxs)(n.li,{children:["\n",(0,s.jsxs)(n.p,{children:["For Mobile Apps: For the Web3Auth Mobile SDKs, you have a choice between iOS, Android, React Native & Flutter. Please refer to the\n",(0,s.jsx)(n.a,{href:"/sdk",children:"Web3Auth SDK Reference"})," for more information."]}),"\n"]}),"\n",(0,s.jsxs)(n.li,{children:["\n",(0,s.jsxs)(n.p,{children:["Create a Web3Auth account on the ",(0,s.jsx)(n.a,{href:"https://dashboard.web3auth.io",children:"Web3Auth Dashboard"})]}),"\n"]}),"\n"]})}function a(e={}){const{wrapper:n}={...(0,i.a)(),...e.components};return n?(0,s.jsx)(n,{...e,children:(0,s.jsx)(r,{...e})}):r(e)}},85162:(e,n,t)=>{t.d(n,{Z:()=>a});t(67294);var s=t(36905);const i={tabItem:"tabItem_Ymn6"};var r=t(85893);function a(e){let{children:n,hidden:t,className:a}=e;return(0,r.jsx)("div",{role:"tabpanel",className:(0,s.Z)(i.tabItem,a),hidden:t,children:n})}},74866:(e,n,t)=>{t.d(n,{Z:()=>y});var s=t(67294),i=t(36905),r=t(12466),a=t(16550),o=t(20469),c=t(91980),l=t(67392),h=t(50012);function d(e){return s.Children.toArray(e).filter((e=>"\n"!==e)).map((e=>{if(!e||(0,s.isValidElement)(e)&&function(e){const{props:n}=e;return!!n&&"object"==typeof n&&"value"in n}(e))return e;throw new Error(`Docusaurus error: Bad <Tabs> child <${"string"==typeof e.type?e.type:e.type.name}>: all children of the <Tabs> component should be <TabItem>, and every <TabItem> should have a unique "value" prop.`)}))?.filter(Boolean)??[]}function u(e){const{values:n,children:t}=e;return(0,s.useMemo)((()=>{const e=n??function(e){return d(e).map((e=>{let{props:{value:n,label:t,attributes:s,default:i}}=e;return{value:n,label:t,attributes:s,default:i}}))}(t);return function(e){const n=(0,l.l)(e,((e,n)=>e.value===n.value));if(n.length>0)throw new Error(`Docusaurus error: Duplicate values "${n.map((e=>e.value)).join(", ")}" found in <Tabs>. Every value needs to be unique.`)}(e),e}),[n,t])}function p(e){let{value:n,tabValues:t}=e;return t.some((e=>e.value===n))}function x(e){let{queryString:n=!1,groupId:t}=e;const i=(0,a.k6)(),r=function(e){let{queryString:n=!1,groupId:t}=e;if("string"==typeof n)return n;if(!1===n)return null;if(!0===n&&!t)throw new Error('Docusaurus error: The <Tabs> component groupId prop is required if queryString=true, because this value is used as the search param name. You can also provide an explicit value such as queryString="my-search-param".');return t??null}({queryString:n,groupId:t});return[(0,c._X)(r),(0,s.useCallback)((e=>{if(!r)return;const n=new URLSearchParams(i.location.search);n.set(r,e),i.replace({...i.location,search:n.toString()})}),[r,i])]}function g(e){const{defaultValue:n,queryString:t=!1,groupId:i}=e,r=u(e),[a,c]=(0,s.useState)((()=>function(e){let{defaultValue:n,tabValues:t}=e;if(0===t.length)throw new Error("Docusaurus error: the <Tabs> component requires at least one <TabItem> children component");if(n){if(!p({value:n,tabValues:t}))throw new Error(`Docusaurus error: The <Tabs> has a defaultValue "${n}" but none of its children has the corresponding value. Available values are: ${t.map((e=>e.value)).join(", ")}. If you intend to show no default tab, use defaultValue={null} instead.`);return n}const s=t.find((e=>e.default))??t[0];if(!s)throw new Error("Unexpected error: 0 tabValues");return s.value}({defaultValue:n,tabValues:r}))),[l,d]=x({queryString:t,groupId:i}),[g,m]=function(e){let{groupId:n}=e;const t=function(e){return e?`docusaurus.tab.${e}`:null}(n),[i,r]=(0,h.Nk)(t);return[i,(0,s.useCallback)((e=>{t&&r.set(e)}),[t,r])]}({groupId:i}),j=(()=>{const e=l??g;return p({value:e,tabValues:r})?e:null})();(0,o.Z)((()=>{j&&c(j)}),[j]);return{selectedValue:a,selectValue:(0,s.useCallback)((e=>{if(!p({value:e,tabValues:r}))throw new Error(`Can't select invalid tab value=${e}`);c(e),d(e),m(e)}),[d,m,r]),tabValues:r}}var m=t(72389);const j={tabList:"tabList__CuJ",tabItem:"tabItem_LNqP"};var b=t(85893);function f(e){let{className:n,block:t,selectedValue:s,selectValue:a,tabValues:o}=e;const c=[],{blockElementScrollPositionUntilNextRender:l}=(0,r.o5)(),h=e=>{const n=e.currentTarget,t=c.indexOf(n),i=o[t].value;i!==s&&(l(n),a(i))},d=e=>{let n=null;switch(e.key){case"Enter":h(e);break;case"ArrowRight":{const t=c.indexOf(e.currentTarget)+1;n=c[t]??c[0];break}case"ArrowLeft":{const t=c.indexOf(e.currentTarget)-1;n=c[t]??c[c.length-1];break}}n?.focus()};return(0,b.jsx)("ul",{role:"tablist","aria-orientation":"horizontal",className:(0,i.Z)("tabs",{"tabs--block":t},n),children:o.map((e=>{let{value:n,label:t,attributes:r}=e;return(0,b.jsx)("li",{role:"tab",tabIndex:s===n?0:-1,"aria-selected":s===n,ref:e=>c.push(e),onKeyDown:d,onClick:h,...r,className:(0,i.Z)("tabs__item",j.tabItem,r?.className,{"tabs__item--active":s===n}),children:t??n},n)}))})}function v(e){let{lazy:n,children:t,selectedValue:i}=e;const r=(Array.isArray(t)?t:[t]).filter(Boolean);if(n){const e=r.find((e=>e.props.value===i));return e?(0,s.cloneElement)(e,{className:"margin-top--md"}):null}return(0,b.jsx)("div",{className:"margin-top--md",children:r.map(((e,n)=>(0,s.cloneElement)(e,{key:n,hidden:e.props.value!==i})))})}function w(e){const n=g(e);return(0,b.jsxs)("div",{className:(0,i.Z)("tabs-container",j.tabList),children:[(0,b.jsx)(f,{...e,...n}),(0,b.jsx)(v,{...e,...n})]})}function y(e){const n=(0,m.Z)();return(0,b.jsx)(w,{...e,children:d(e.children)},String(n))}},30831:(e,n,t)=>{t.d(n,{Z:()=>r});var s=t(35742),i=t(85893);function r(e){const{title:n,description:t,image:r,slug:a,keywords:o}=e;return(0,i.jsxs)(s.Z,{children:[n?(0,i.jsxs)("title",{children:[n," | Web3Auth "]}):(0,i.jsx)("title",{children:"Documentation | Web3Auth"}),t?(0,i.jsx)("meta",{name:"description",content:t}):(0,i.jsx)("meta",{name:"description",content:"Web3Auth is simple, non-custodial auth infrastructure that enables Web3 wallets and applications to provide seamless user logins for both mainstream and native Web3 users."}),o?o.length>0&&(0,i.jsx)("meta",{name:"keywords",content:`web3auth, blockchain, solana, ethereum, multi party computation, ${o.join(", ")}`}):(0,i.jsx)("meta",{name:"keywords",content:"web3auth, blockchain, web3, web3.js, ethers.js, solana, ethereum, passwordless, passwordless magic link, multi party computation, tkey, torus, web3 auth, auth"}),(0,i.jsx)("meta",{property:"og:site_name",content:"Web3Auth"}),(0,i.jsx)("meta",{property:"og:type",content:"website"}),n?(0,i.jsx)("meta",{property:"og:title",content:n}):(0,i.jsx)("meta",{property:"og:title",content:"Documentation | Web3Auth"}),t?(0,i.jsx)("meta",{property:"og:description",content:t}):(0,i.jsx)("meta",{property:"og:description",content:"Web3Auth is simple, non-custodial auth infrastructure that enables Web3 wallets and applications to provide seamless user logins for both mainstream and native Web3 users."}),a?(0,i.jsx)("meta",{property:"og:url",content:`https://web3auth.io/docs${a}`}):(0,i.jsx)("meta",{property:"og:url",content:"https://web3auth.io/docs"}),r?(0,i.jsx)("meta",{property:"og:image",content:r}):(0,i.jsx)("meta",{property:"og:image",content:"http://web3auth.io/docs/images/docs-meta-cards/documentation-card.png"}),(0,i.jsx)("meta",{name:"twitter:card",content:"summary_large_image"}),(0,i.jsx)("meta",{name:"twitter:site",content:"@Web3Auth"}),(0,i.jsx)("meta",{name:"twitter:creator",content:"@Web3Auth"}),r?(0,i.jsx)("meta",{name:"twitter:image",content:r}):(0,i.jsx)("meta",{name:"twitter:image",content:"http://web3auth.io/docs/images/docs-meta-cards/documentation-card.png"}),n?(0,i.jsx)("meta",{itemProp:"name",content:n}):(0,i.jsx)("meta",{itemProp:"name",content:"Documentation | Web3Auth"}),t?(0,i.jsx)("meta",{itemProp:"description",content:t}):(0,i.jsx)("meta",{itemProp:"description",content:"Web3Auth is simple, non-custodial auth infrastructure that enables Web3 wallets and applications to provide seamless user logins for both mainstream and native Web3 users."}),r?(0,i.jsx)("meta",{itemProp:"image",content:r}):(0,i.jsx)("meta",{itemProp:"image",content:"http://web3auth.io/docs/images/docs-meta-cards/documentation-card.png"}),(0,i.jsx)("meta",{name:"author",content:"Web3Auth"})]})}},75315:(e,n,t)=>{t.d(n,{Z:()=>s});const s=t.p+"assets/images/auth0-email-verifier-a04b3194866799e8a16969d6870ad43e.png"},69487:(e,n,t)=>{t.d(n,{Z:()=>s});const s=t.p+"assets/images/auth0-sms-verifier-37864ab36f01b858ff30680a0a9ec96e.png"},14546:(e,n,t)=>{t.d(n,{Z:()=>s});const s=t.p+"assets/images/sfa-infra-934fc8f4badf51a92fd6bf822836a422.png"},36282:(e,n,t)=>{t.d(n,{Z:()=>s});const s=t.p+"assets/images/auth0-callback-url-3a8d962ed5bddba152ad4dc23e223b88.png"},94238:(e,n,t)=>{t.d(n,{Z:()=>s});const s=t.p+"assets/images/auth0-email-passwordless-1-ac98f2bb5a15400b672540efe9906032.png"},1692:(e,n,t)=>{t.d(n,{Z:()=>s});const s=t.p+"assets/images/auth0-email-passwordless-2-547d47ac01bbc5942e05eee6c174232d.png"},33172:(e,n,t)=>{t.d(n,{Z:()=>s});const s=t.p+"assets/images/auth0-guide-clientid-52c5765a8de7924ff24b52f6e677b17d.png"},77811:(e,n,t)=>{t.d(n,{Z:()=>s});const s=t.p+"assets/images/auth0-passwordless-886e6b7b27875b43478d5ecede54d119.png"},99753:(e,n,t)=>{t.d(n,{Z:()=>s});const s=t.p+"assets/images/auth0-sms-passwordless-1-28fcc58359055eec4afd5de1647a3df4.png"},71486:(e,n,t)=>{t.d(n,{Z:()=>s});const s=t.p+"assets/images/auth0-sms-passwordless-2-58b299ceb1b7ba6c97fa997bc12e25ed.png"},9333:(e,n,t)=>{t.d(n,{Z:()=>s});const s=t.p+"assets/images/auth0-social-logins-3aa70b456ffceffc42614b16c7b1e81e.png"},53558:(e,n,t)=>{t.d(n,{Z:()=>s});const s=t.p+"assets/images/create-project-name-c9005c16b664f81f25e56e63c9cc503a.png"},41991:(e,n,t)=>{t.d(n,{Z:()=>s});const s=t.p+"assets/images/project-whitelist-ec0210471c902c254ff14a90813adfd3.png"},11151:(e,n,t)=>{t.d(n,{Z:()=>o,a:()=>a});var s=t(67294);const i={},r=s.createContext(i);function a(e){const n=s.useContext(r);return s.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function o(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(i):e.components||i:a(e.components),s.createElement(r.Provider,{value:n},e.children)}}}]);