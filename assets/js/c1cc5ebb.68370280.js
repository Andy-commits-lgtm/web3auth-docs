"use strict";(self.webpackChunkweb3auth_docs=self.webpackChunkweb3auth_docs||[]).push([[24898],{73811:(e,n,t)=>{t.d(n,{ZP:()=>s});var r=t(85893),i=t(11151);function l(e){const n={code:"code",pre:"pre",...(0,i.a)(),...e.components};return(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-json",children:'{\n  "userInfo": {\n    "email": "w3a-heroes@web3auth.com",\n    "name": "Web3Auth Heroes",\n    "profileImage": "https://lh3.googleusercontent.com/a/Ajjjsdsmdjmnm...",\n    "verifier": "torus",\n    "verifierId": "w3a-heroes@web3auth.com",\n    "typeOfLogin": "google",\n    "aggregateVerifier": "w3a-google-sapphire",\n    "dappShare": "", // 24 words of seed phrase will be sent only incase of custom verifiers\n    "idToken": "<jwtToken issued by Web3Auth>",\n    "oAuthIdToken": "<jwtToken issued by OAuth Provider>", // will be sent only incase of custom verifiers\n    "oAuthAccessToken": "<accessToken issued by OAuth Provider>", // will be sent only incase of custom verifiers\n    "isMfaEnabled": false // Returns whether the user has enabled MFA or not\n  }\n}\n'})})}function s(e={}){const{wrapper:n}={...(0,i.a)(),...e.components};return n?(0,r.jsx)(n,{...e,children:(0,r.jsx)(l,{...e})}):l(e)}},20444:(e,n,t)=>{t.r(n),t.d(n,{assets:()=>h,contentTitle:()=>a,default:()=>x,frontMatter:()=>o,metadata:()=>c,toc:()=>u});var r=t(85893),i=t(11151),l=t(85162),s=t(74866),d=t(73811);const o={title:"Usage of PnP Android SDK",sidebar_label:"Usage",displayed_sidebar:"sdk",description:"Web3Auth PnP Android SDK - Usage | Documentation - Web3Auth"},a=void 0,c={id:"sdk/pnp/android/usage",title:"Usage of PnP Android SDK",description:"Web3Auth PnP Android SDK - Usage | Documentation - Web3Auth",source:"@site/docs/sdk/pnp/android/usage.mdx",sourceDirName:"sdk/pnp/android",slug:"/sdk/pnp/android/usage",permalink:"/docs/sdk/pnp/android/usage",draft:!1,unlisted:!1,editUrl:"https://github.com/web3auth/web3auth-docs/edit/master/docs/sdk/pnp/android/usage.mdx",tags:[],version:"current",frontMatter:{title:"Usage of PnP Android SDK",sidebar_label:"Usage",displayed_sidebar:"sdk",description:"Web3Auth PnP Android SDK - Usage | Documentation - Web3Auth"},sidebar:"sdk",previous:{title:"Initialize",permalink:"/docs/sdk/pnp/android/initialize"},next:{title:"Whitelabel",permalink:"/docs/sdk/pnp/android/whitelabel"}},h={},u=[{value:"Logging in a User",id:"logging-in-a-user",level:2},{value:"<code>web3Auth.login(LoginParams)</code>",id:"web3authloginloginparams",level:3},{value:"Arguments",id:"arguments",level:4},{value:"<code>web3Auth.getPrivkey()</code>",id:"web3authgetprivkey",level:3},{value:"<code>web3Auth.getEd25519PrivKey()</code>",id:"web3authgeted25519privkey",level:3},{value:"<code>web3Auth.getUserInfo()</code>",id:"web3authgetuserinfo",level:3},{value:"UserInfo Response",id:"userinfo-response",level:4},{value:"ExtraLoginOptions",id:"extraloginoptions",level:2},{value:"Arguments",id:"arguments-1",level:3},{value:"Selecting Curve",id:"selecting-curve",level:2},{value:"Logging out a user",id:"logging-out-a-user",level:2},{value:"<code>web3Auth.logout()</code>",id:"web3authlogout",level:3},{value:"Enable MFA for a user",id:"enable-mfa-for-a-user",level:3},{value:"Launch Wallet Services",id:"launch-wallet-services",level:2},{value:"Arguments",id:"arguments-2",level:3}];function g(e){const n={a:"a",admonition:"admonition",code:"code",h2:"h2",h3:"h3",h4:"h4",p:"p",pre:"pre",strong:"strong",table:"table",tbody:"tbody",td:"td",th:"th",thead:"thead",tr:"tr",...(0,i.a)(),...e.components};return(0,r.jsxs)(r.Fragment,{children:[(0,r.jsx)(n.p,{children:"Web3Auth's Android SDK is a set of libraries and tools that allow you to easily integrate Web3 with Android applications."}),"\n",(0,r.jsx)(n.h2,{id:"logging-in-a-user",children:"Logging in a User"}),"\n",(0,r.jsx)(n.h3,{id:"web3authloginloginparams",children:(0,r.jsx)(n.code,{children:"web3Auth.login(LoginParams)"})}),"\n",(0,r.jsxs)(n.p,{children:["Trigger login flow will navigate the user to a browser model allowing the user to login into the service. You can pass in the supported providers to\nthe login method for specific social logins such as GOOGLE, APPLE, FACEBOOK, etc., and do whitelabel login. The ",(0,r.jsx)(n.code,{children:"login"})," function takes in\n",(0,r.jsx)(n.code,{children:"LoginParams"})," as a required input."]}),"\n",(0,r.jsx)(n.h4,{id:"arguments",children:"Arguments"}),"\n",(0,r.jsx)(n.p,{children:(0,r.jsx)(n.code,{children:"LoginParams"})}),"\n",(0,r.jsxs)(s.Z,{defaultValue:"table",values:[{label:"Table",value:"table"},{label:"Class",value:"class"}],children:[(0,r.jsx)(l.Z,{value:"table",children:(0,r.jsxs)(n.table,{children:[(0,r.jsx)(n.thead,{children:(0,r.jsxs)(n.tr,{children:[(0,r.jsx)(n.th,{children:"Parameter"}),(0,r.jsx)(n.th,{children:"Type"}),(0,r.jsx)(n.th,{children:"Mandatory"}),(0,r.jsx)(n.th,{children:"Description"})]})}),(0,r.jsxs)(n.tbody,{children:[(0,r.jsxs)(n.tr,{children:[(0,r.jsx)(n.td,{children:(0,r.jsx)(n.code,{children:"loginProvider"})}),(0,r.jsx)(n.td,{children:(0,r.jsx)(n.code,{children:"Provider"})}),(0,r.jsx)(n.td,{children:"Yes"}),(0,r.jsxs)(n.td,{children:["Login provider, supported values are ",(0,r.jsx)(n.code,{children:"GOOGLE"}),", ",(0,r.jsx)(n.code,{children:"FACEBOOK"}),", ",(0,r.jsx)(n.code,{children:"REDDIT"}),", ",(0,r.jsx)(n.code,{children:"DISCORD"}),", ",(0,r.jsx)(n.code,{children:"TWITCH"}),", ",(0,r.jsx)(n.code,{children:"APPLE"}),", ",(0,r.jsx)(n.code,{children:"LINE"}),", ",(0,r.jsx)(n.code,{children:"GITHUB"}),", ",(0,r.jsx)(n.code,{children:"KAKAO"}),", ",(0,r.jsx)(n.code,{children:"LINKEDIN"}),", ",(0,r.jsx)(n.code,{children:"TWITTER"}),", ",(0,r.jsx)(n.code,{children:"WEIBO"}),", ",(0,r.jsx)(n.code,{children:"WECHAT"}),", ",(0,r.jsx)(n.code,{children:"EMAIL_PASSWORDLESS"}),", ",(0,r.jsx)(n.code,{children:"JWT"})]})]}),(0,r.jsxs)(n.tr,{children:[(0,r.jsx)(n.td,{children:(0,r.jsx)(n.code,{children:"dappShare"})}),(0,r.jsx)(n.td,{children:(0,r.jsx)(n.code,{children:"String"})}),(0,r.jsx)(n.td,{children:"No"}),(0,r.jsxs)(n.td,{children:["Dapp share can be used to pass dapp share url, default is ",(0,r.jsx)(n.code,{children:"null"})]})]}),(0,r.jsxs)(n.tr,{children:[(0,r.jsx)(n.td,{children:(0,r.jsx)(n.code,{children:"extraLoginOptions"})}),(0,r.jsx)(n.td,{children:(0,r.jsx)(n.code,{children:"ExtraLoginOptions"})}),(0,r.jsx)(n.td,{children:"No"}),(0,r.jsxs)(n.td,{children:["You can pass various oauth supported options, default is ",(0,r.jsx)(n.code,{children:"null"})]})]}),(0,r.jsxs)(n.tr,{children:[(0,r.jsx)(n.td,{children:(0,r.jsx)(n.code,{children:"redirectUrl"})}),(0,r.jsx)(n.td,{children:(0,r.jsx)(n.code,{children:"Uri"})}),(0,r.jsx)(n.td,{children:"No"}),(0,r.jsxs)(n.td,{children:["Uri where user will be redirected after successfull login. By default user will be redirected to same page where login will be initiated, default is ",(0,r.jsx)(n.code,{children:"null"})]})]}),(0,r.jsxs)(n.tr,{children:[(0,r.jsx)(n.td,{children:(0,r.jsx)(n.code,{children:"appState"})}),(0,r.jsx)(n.td,{children:(0,r.jsx)(n.code,{children:"String"})}),(0,r.jsx)(n.td,{children:"No"}),(0,r.jsxs)(n.td,{children:["appState can be used to keep track of the app state when user will be redirected to app after login, default is ",(0,r.jsx)(n.code,{children:"null"})]})]}),(0,r.jsxs)(n.tr,{children:[(0,r.jsx)(n.td,{children:(0,r.jsx)(n.code,{children:"mfaLevel"})}),(0,r.jsx)(n.td,{children:(0,r.jsx)(n.code,{children:"MFALevel"})}),(0,r.jsx)(n.td,{children:"No"}),(0,r.jsxs)(n.td,{children:["MFA level can be used to pass 2FA screen shown during login, default is ",(0,r.jsx)(n.code,{children:"mfaLevel.DEFAULT"}),", shown every 3rd login."]})]}),(0,r.jsxs)(n.tr,{children:[(0,r.jsx)(n.td,{children:(0,r.jsx)(n.code,{children:"curve"})}),(0,r.jsx)(n.td,{children:(0,r.jsx)(n.code,{children:"Curve"})}),(0,r.jsx)(n.td,{children:"No"}),(0,r.jsxs)(n.td,{children:["Curve can be used to pass curve options, ",(0,r.jsx)(n.code,{children:"ED25519"})," for Solana and ",(0,r.jsx)(n.code,{children:"SECP256K1"})," for Ethereum"]})]})]})]})}),(0,r.jsx)(l.Z,{value:"class",children:(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-kotlin",children:"data class LoginParams(\n    val loginProvider: Provider,\n    var dappShare: String? = null,\n    val extraLoginOptions: ExtraLoginOptions? = null,\n    @Transient var redirectUrl: Uri? = null,\n    val appState: String? = null,\n    val mfaLevel: MFALevel? = null,\n    val curve: Curve? = Curve.SECP256K1\n)\n"})})})]}),"\n",(0,r.jsx)(n.h3,{id:"web3authgetprivkey",children:(0,r.jsx)(n.code,{children:"web3Auth.getPrivkey()"})}),"\n",(0,r.jsx)(n.p,{children:"Use getPrivkey() to get the private key of the user. The method returns an EVM compatible private key which can be used to sign transactions on EVM\ncompatible chains."}),"\n",(0,r.jsx)(n.h3,{id:"web3authgeted25519privkey",children:(0,r.jsx)(n.code,{children:"web3Auth.getEd25519PrivKey()"})}),"\n",(0,r.jsx)(n.p,{children:"Use getEd25519PrivKey() to get the Ed25519 private key of the user. This private key can be used to sign transactions on Solana."}),"\n",(0,r.jsx)(n.h3,{id:"web3authgetuserinfo",children:(0,r.jsx)(n.code,{children:"web3Auth.getUserInfo()"})}),"\n",(0,r.jsx)(n.p,{children:"Use getUserInfo() to get the user info of the user."}),"\n",(0,r.jsx)(n.h4,{id:"userinfo-response",children:"UserInfo Response"}),"\n",(0,r.jsx)(d.ZP,{}),"\n",(0,r.jsxs)(s.Z,{defaultValue:"google",values:[{label:"Google",value:"google"},{label:"Facebook",value:"facebook"},{label:"Discord",value:"discord"},{label:"Twitch",value:"twitch"},{label:"Email Passwordless",value:"email_passwordless"},{label:"JWT",value:"jwt"}],children:[(0,r.jsx)(l.Z,{value:"google",children:(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-kotlin",metastring:'title="Usage"',children:'import android.widget.Button\nimport com.web3auth.core.Web3Auth\nimport android.os.Bundle\n\nclass MainActivity : AppCompatActivity() {\n    private lateinit var web3Auth: Web3Auth\n\n    private fun signIn() {\n        // highlight-next-line\n        val selectedLoginProvider = Provider.GOOGLE\n        // Can be REDDIT, TWITTER, GITHUB etc.\n        val loginCompletableFuture: CompletableFuture<Web3AuthResponse> =\n            // highlight-next-line\n            web3Auth.login(LoginParams(selectedLoginProvider))\n\n        loginCompletableFuture.whenComplete { loginResponse, error ->\n            if (error == null) {\n                // render logged in UI\n                println("PrivKey: " + web3Auth.getPrivkey())\n                println("ed25519PrivKey: " + web3Auth.getEd25519PrivKey())\n            } else {\n                // render error UI\n            }\n\n        }\n    }\n\n    override fun onCreate(savedInstanceState: Bundle?) {\n        ...\n        // Setup UI and event handlers\n        val signInButton = findViewById<Button>(R.id.signInButton)\n        signInButton.setOnClickListener { signIn() }\n        ...\n    }\n    ...\n}\n'})})}),(0,r.jsx)(l.Z,{value:"facebook",children:(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-kotlin",metastring:'title="Usage"',children:'import android.widget.Button\nimport com.web3auth.core.Web3Auth\nimport android.os.Bundle\n\nclass MainActivity : AppCompatActivity() {\n    private lateinit var web3Auth: Web3Auth\n\n    private fun signIn() {\n        // highlight-next-line\n        val selectedLoginProvider = Provider.FACEBOOK\n        // Can be APPLE, LINE, KAKAO, LINKEDIN etc.\n        val loginCompletableFuture: CompletableFuture<Web3AuthResponse> =\n            // highlight-next-line\n            web3Auth.login(LoginParams(selectedLoginProvider))\n\n        loginCompletableFuture.whenComplete { loginResponse, error ->\n            if (error == null) {\n                // render logged in UI\n                println("PrivKey: " + web3Auth.getPrivkey())\n                println("ed25519PrivKey: " + web3Auth.getEd25519PrivKey())\n            } else {\n                // render error UI\n            }\n\n        }\n    }\n\n    override fun onCreate(savedInstanceState: Bundle?) {\n        ...\n        // Setup UI and event handlers\n        val signInButton = findViewById<Button>(R.id.signInButton)\n        signInButton.setOnClickListener { signIn() }\n        ...\n    }\n    ...\n}\n'})})}),(0,r.jsx)(l.Z,{value:"discord",children:(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-kotlin",metastring:'title="Usage"',children:'import android.widget.Button\nimport com.web3auth.core.Web3Auth\nimport android.os.Bundle\n\nclass MainActivity : AppCompatActivity() {\n    private lateinit var web3Auth: Web3Auth\n\n    private fun signIn() {\n        // highlight-next-line\n        val selectedLoginProvider = Provider.DISCORD\n        // Can be WECHAT, WEIBO, LINE etc.\n        val loginCompletableFuture: CompletableFuture<Web3AuthResponse> =\n            // highlight-next-line\n            web3Auth.login(LoginParams(selectedLoginProvider))\n\n        loginCompletableFuture.whenComplete { loginResponse, error ->\n            if (error == null) {\n                // render logged in UI\n                println("PrivKey: " + web3Auth.getPrivkey())\n                println("ed25519PrivKey: " + web3Auth.getEd25519PrivKey())\n            } else {\n                // render error UI\n            }\n\n        }\n    }\n\n    override fun onCreate(savedInstanceState: Bundle?) {\n        ...\n        // Setup UI and event handlers\n        val signInButton = findViewById<Button>(R.id.signInButton)\n        signInButton.setOnClickListener { signIn() }\n        ...\n    }\n    ...\n}\n'})})}),(0,r.jsx)(l.Z,{value:"twitch",children:(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-kotlin",metastring:'title="Usage"',children:'import android.widget.Button\nimport com.web3auth.core.Web3Auth\nimport android.os.Bundle\n\nclass MainActivity : AppCompatActivity() {\n    private lateinit var web3Auth: Web3Auth\n\n    private fun signIn() {\n        // highlight-next-line\n        val selectedLoginProvider = Provider.TWITCH\n        // Can be GOOGLE, FACEBOOK, TWITCH etc.\n        val loginCompletableFuture: CompletableFuture<Web3AuthResponse> =\n            // highlight-next-line\n            web3Auth.login(LoginParams(selectedLoginProvider))\n\n        loginCompletableFuture.whenComplete { loginResponse, error ->\n            if (error == null) {\n                // render logged in UI\n                println("PrivKey: " + web3Auth.getPrivkey())\n                println("ed25519PrivKey: " + web3Auth.getEd25519PrivKey())\n            } else {\n                // render error UI\n            }\n\n        }\n    }\n\n    override fun onCreate(savedInstanceState: Bundle?) {\n        ...\n        // Setup UI and event handlers\n        val signInButton = findViewById<Button>(R.id.signInButton)\n        signInButton.setOnClickListener { signIn() }\n        ...\n    }\n    ...\n}\n'})})}),(0,r.jsx)(l.Z,{value:"email_passwordless",children:(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-kotlin",metastring:'title="Usage"',children:'import android.widget.Button\nimport com.web3auth.core.Web3Auth\nimport android.os.Bundle\n\nclass MainActivity : AppCompatActivity() {\n    private lateinit var web3Auth: Web3Auth\n\n    private fun signIn() {\n        // highlight-next-line\n        val selectedLoginProvider = Provider.EMAIL_PASSWORDLESS\n        // extraLoginOptions = ExtraLoginOptions(login_hint = "email address")\n        val loginCompletableFuture: CompletableFuture<Web3AuthResponse> =\n            // highlight-start\n            web3Auth.login(\n                LoginParams(\n                    selectedLoginProvider,\n                    extraLoginOptions = ExtraLoginOptions(login_hint = "hello@web3auth.io")\n                )\n            )\n            // highlight-end\n\n        loginCompletableFuture.whenComplete { loginResponse, error ->\n            if (error == null) {\n                // render logged in UI\n                println("PrivKey: " + web3Auth.getPrivkey())\n                println("ed25519PrivKey: " + web3Auth.getEd25519PrivKey())\n            } else {\n                // render error UI\n            }\n\n        }\n    }\n\n    override fun onCreate(savedInstanceState: Bundle?) {\n        ...\n        // Setup UI and event handlers\n        val signInButton = findViewById<Button>(R.id.signInButton)\n        signInButton.setOnClickListener { signIn() }\n        ...\n    }\n    ...\n}\n'})})}),(0,r.jsx)(l.Z,{value:"jwt",children:(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-kotlin",metastring:'title="Usage"',children:'import android.widget.Button\nimport com.web3auth.core.Web3Auth\nimport android.os.Bundle\n\nclass MainActivity : AppCompatActivity() {\n    private lateinit var web3Auth: Web3Auth\n\n    private fun signIn() {\n        // highlight-next-line\n        val selectedLoginProvider = Provider.JWT\n        // extraLoginOptions = ExtraLoginOptions(id_token = "jwt_token")\n        val loginCompletableFuture: CompletableFuture<Web3AuthResponse> =\n            // highlight-start\n            web3Auth.login(\n                LoginParams(\n                    selectedLoginProvider,\n                    extraLoginOptions = ExtraLoginOptions(id_token = "your_jwt_token")\n                )\n            )\n            // highlight-end\n        // Use this for login with your generated JWT token,\n        // please refer to https://web3auth.io/docs/auth-provider-setup/byo-jwt-providers to learn more\n\n        loginCompletableFuture.whenComplete { loginResponse, error ->\n            if (error == null) {\n                // render logged in UI\n                println("PrivKey: " + web3Auth.getPrivkey())\n                println("ed25519PrivKey: " + web3Auth.getEd25519PrivKey())\n            } else {\n                // render error UI\n            }\n\n        }\n    }\n\n    override fun onCreate(savedInstanceState: Bundle?) {\n        ...\n        // Setup UI and event handlers\n        val signInButton = findViewById<Button>(R.id.signInButton)\n        signInButton.setOnClickListener { signIn() }\n        ...\n    }\n    ...\n}\n'})})})]}),"\n",(0,r.jsx)(n.h2,{id:"extraloginoptions",children:"ExtraLoginOptions"}),"\n",(0,r.jsx)(n.h3,{id:"arguments-1",children:"Arguments"}),"\n",(0,r.jsx)(n.p,{children:(0,r.jsx)(n.code,{children:"ExtraLoginOptions"})}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-kotlin",children:'web3Auth.login(\n    LoginParams(\n        selectedLoginProvider,\n        extraLoginOptions = ExtraLoginOptions(login_hint = "hello@web3auth.io")\n    )\n)\n'})}),"\n",(0,r.jsxs)(s.Z,{defaultValue:"table",values:[{label:"Table",value:"table"},{label:"Class",value:"class"}],children:[(0,r.jsx)(l.Z,{value:"table",children:(0,r.jsxs)(n.table,{children:[(0,r.jsx)(n.thead,{children:(0,r.jsxs)(n.tr,{children:[(0,r.jsx)(n.th,{children:"Parameter"}),(0,r.jsx)(n.th,{children:"Type"}),(0,r.jsx)(n.th,{children:"Mandatory"}),(0,r.jsx)(n.th,{children:"Description"})]})}),(0,r.jsxs)(n.tbody,{children:[(0,r.jsxs)(n.tr,{children:[(0,r.jsx)(n.td,{children:(0,r.jsx)(n.code,{children:"additionalParams"})}),(0,r.jsx)(n.td,{children:(0,r.jsx)(n.code,{children:"HashMap\\<String, String>"})}),(0,r.jsx)(n.td,{children:"No"}),(0,r.jsx)(n.td,{children:"additionalParams, use id_token(JWT) to authenticate with web3auth"})]}),(0,r.jsxs)(n.tr,{children:[(0,r.jsx)(n.td,{children:(0,r.jsx)(n.code,{children:"domain"})}),(0,r.jsx)(n.td,{children:(0,r.jsx)(n.code,{children:"String"})}),(0,r.jsx)(n.td,{children:"No"}),(0,r.jsx)(n.td,{children:"Domain of the app"})]}),(0,r.jsxs)(n.tr,{children:[(0,r.jsx)(n.td,{children:(0,r.jsx)(n.code,{children:"client_id"})}),(0,r.jsx)(n.td,{children:(0,r.jsx)(n.code,{children:"String"})}),(0,r.jsx)(n.td,{children:"No"}),(0,r.jsx)(n.td,{children:"client_id from Web3Auth Dashboard"})]}),(0,r.jsxs)(n.tr,{children:[(0,r.jsx)(n.td,{children:(0,r.jsx)(n.code,{children:"leeway"})}),(0,r.jsx)(n.td,{children:(0,r.jsx)(n.code,{children:"String"})}),(0,r.jsx)(n.td,{children:"No"}),(0,r.jsx)(n.td,{children:"leeway"})]}),(0,r.jsxs)(n.tr,{children:[(0,r.jsx)(n.td,{children:(0,r.jsx)(n.code,{children:"verifierIdField"})}),(0,r.jsx)(n.td,{children:(0,r.jsx)(n.code,{children:"String"})}),(0,r.jsx)(n.td,{children:"No"}),(0,r.jsx)(n.td,{children:"verifierIdField"})]}),(0,r.jsxs)(n.tr,{children:[(0,r.jsx)(n.td,{children:(0,r.jsx)(n.code,{children:"isVerifierIdCaseSensitive"})}),(0,r.jsx)(n.td,{children:(0,r.jsx)(n.code,{children:"Boolean"})}),(0,r.jsx)(n.td,{children:"No"}),(0,r.jsx)(n.td,{children:"Boolean to confirm the case sensitivity of VerifierId"})]}),(0,r.jsxs)(n.tr,{children:[(0,r.jsx)(n.td,{children:(0,r.jsx)(n.code,{children:"display"})}),(0,r.jsx)(n.td,{children:(0,r.jsx)(n.code,{children:"Display"})}),(0,r.jsx)(n.td,{children:"No"}),(0,r.jsx)(n.td,{children:"Display"})]}),(0,r.jsxs)(n.tr,{children:[(0,r.jsx)(n.td,{children:(0,r.jsx)(n.code,{children:"prompt"})}),(0,r.jsx)(n.td,{children:(0,r.jsx)(n.code,{children:"Prompt"})}),(0,r.jsx)(n.td,{children:"No"}),(0,r.jsx)(n.td,{children:"Prompt"})]}),(0,r.jsxs)(n.tr,{children:[(0,r.jsx)(n.td,{children:(0,r.jsx)(n.code,{children:"max_age"})}),(0,r.jsx)(n.td,{children:(0,r.jsx)(n.code,{children:"String"})}),(0,r.jsx)(n.td,{children:"No"}),(0,r.jsx)(n.td,{children:"max_age"})]}),(0,r.jsxs)(n.tr,{children:[(0,r.jsx)(n.td,{children:(0,r.jsx)(n.code,{children:"ui_locales"})}),(0,r.jsx)(n.td,{children:(0,r.jsx)(n.code,{children:"String"})}),(0,r.jsx)(n.td,{children:"No"}),(0,r.jsx)(n.td,{children:"ui_locales to be shown on the modal"})]}),(0,r.jsxs)(n.tr,{children:[(0,r.jsx)(n.td,{children:(0,r.jsx)(n.code,{children:"id_token"})}),(0,r.jsx)(n.td,{children:(0,r.jsx)(n.code,{children:"String"})}),(0,r.jsx)(n.td,{children:"No"}),(0,r.jsx)(n.td,{children:"JWT (ID Token) to be passed for Login."})]}),(0,r.jsxs)(n.tr,{children:[(0,r.jsx)(n.td,{children:(0,r.jsx)(n.code,{children:"id_token_hint"})}),(0,r.jsx)(n.td,{children:(0,r.jsx)(n.code,{children:"String"})}),(0,r.jsx)(n.td,{children:"No"}),(0,r.jsx)(n.td,{children:"Previously issued ID Token."})]}),(0,r.jsxs)(n.tr,{children:[(0,r.jsx)(n.td,{children:(0,r.jsx)(n.code,{children:"login_hint"})}),(0,r.jsx)(n.td,{children:(0,r.jsx)(n.code,{children:"String"})}),(0,r.jsx)(n.td,{children:"No"}),(0,r.jsx)(n.td,{children:"Email used for EMAIL_PASSWORDLESS"})]}),(0,r.jsxs)(n.tr,{children:[(0,r.jsx)(n.td,{children:(0,r.jsx)(n.code,{children:"acr_values"})}),(0,r.jsx)(n.td,{children:(0,r.jsx)(n.code,{children:"String"})}),(0,r.jsx)(n.td,{children:"No"}),(0,r.jsx)(n.td,{children:"acc_values"})]}),(0,r.jsxs)(n.tr,{children:[(0,r.jsx)(n.td,{children:(0,r.jsx)(n.code,{children:"scope"})}),(0,r.jsx)(n.td,{children:(0,r.jsx)(n.code,{children:"String"})}),(0,r.jsx)(n.td,{children:"No"}),(0,r.jsx)(n.td,{children:"scope"})]}),(0,r.jsxs)(n.tr,{children:[(0,r.jsx)(n.td,{children:(0,r.jsx)(n.code,{children:"audience"})}),(0,r.jsx)(n.td,{children:(0,r.jsx)(n.code,{children:"String"})}),(0,r.jsx)(n.td,{children:"No"}),(0,r.jsx)(n.td,{children:"audience"})]}),(0,r.jsxs)(n.tr,{children:[(0,r.jsx)(n.td,{children:(0,r.jsx)(n.code,{children:"connection"})}),(0,r.jsx)(n.td,{children:(0,r.jsx)(n.code,{children:"String"})}),(0,r.jsx)(n.td,{children:"No"}),(0,r.jsx)(n.td,{children:"connection"})]}),(0,r.jsxs)(n.tr,{children:[(0,r.jsx)(n.td,{children:(0,r.jsx)(n.code,{children:"state"})}),(0,r.jsx)(n.td,{children:(0,r.jsx)(n.code,{children:"String"})}),(0,r.jsx)(n.td,{children:"No"}),(0,r.jsx)(n.td,{children:"state"})]}),(0,r.jsxs)(n.tr,{children:[(0,r.jsx)(n.td,{children:(0,r.jsx)(n.code,{children:"response_type"})}),(0,r.jsx)(n.td,{children:(0,r.jsx)(n.code,{children:"String"})}),(0,r.jsx)(n.td,{children:"No"}),(0,r.jsx)(n.td,{children:"response_type"})]}),(0,r.jsxs)(n.tr,{children:[(0,r.jsx)(n.td,{children:(0,r.jsx)(n.code,{children:"nonce"})}),(0,r.jsx)(n.td,{children:(0,r.jsx)(n.code,{children:"String"})}),(0,r.jsx)(n.td,{children:"No"}),(0,r.jsx)(n.td,{children:"nonce"})]}),(0,r.jsxs)(n.tr,{children:[(0,r.jsx)(n.td,{children:(0,r.jsx)(n.code,{children:"redirect_uri"})}),(0,r.jsx)(n.td,{children:(0,r.jsx)(n.code,{children:"String"})}),(0,r.jsx)(n.td,{children:"No"}),(0,r.jsx)(n.td,{children:"redirect_uri"})]})]})]})}),(0,r.jsx)(l.Z,{value:"class",children:(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-kotlin",children:"data class ExtraLoginOptions(\n    private var additionalParams : HashMap<String, String>? = null,\n    private var domain : String? = null,\n    private var client_id : String? = null,\n    private var leeway : String? = null,\n    private var verifierIdField : String? =null,\n    private var isVerifierIdCaseSensitive : Boolean? = null,\n    private var display : Display? = null,\n    private var prompt : Prompt? = null,\n    private var max_age : String? = null,\n    private var ui_locales : String? = null,\n    private var id_token : String? = null,\n    private var id_token_hint : String? = null,\n    private var login_hint : String? = null,\n    private var acr_values : String? = null,\n    private var scope : String? = null,\n    private var audience : String? = null,\n    private var connection : String? = null,\n    private var state : String? = null,\n    private var response_type : String? = null,\n    private var nonce : String? = null,\n    private var redirect_uri : String? = null\n)\n\n"})})})]}),"\n",(0,r.jsx)(n.h2,{id:"selecting-curve",children:"Selecting Curve"}),"\n",(0,r.jsxs)(n.p,{children:["The ",(0,r.jsx)(n.code,{children:"web3Auth.login()"})," method accepts a ",(0,r.jsx)(n.code,{children:"curve"})," parameter. This parameter can be used to select the elliptic curve to use for the signature."]}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-kotlin",children:"web3Auth.login(LoginParams(selectedLoginProvider, curve = Curve.SECP256K1)) // Can be ED25519, SECP256K1\n"})}),"\n",(0,r.jsxs)(s.Z,{defaultValue:"secp256k1",values:[{label:"SECP256K1",value:"secp256k1"},{label:"ED25519",value:"ed25519"}],children:[(0,r.jsx)(l.Z,{value:"secp256k1",children:(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-kotlin",metastring:'title="Usage"',children:"import android.widget.Button\nimport com.web3auth.core.Web3Auth\nimport android.os.Bundle\n\nclass MainActivity : AppCompatActivity() {\n    private lateinit var web3Auth: Web3Auth\n\n    private fun signIn() {\n\n        val selectedLoginProvider = Provider.GOOGLE\n        // Can be GOOGLE, FACEBOOK, TWITCH etc.\n        val loginCompletableFuture: CompletableFuture<Web3AuthResponse> =\n            web3Auth.login(LoginParams(selectedLoginProvider,\n                // highlight-next-line\n                curve = Curve.SECP256K1))\n\n        loginCompletableFuture.whenComplete { loginResponse, error ->\n            if (error == null) {\n                // render logged in UI\n            } else {\n                // render error UI\n            }\n\n        }\n    }\n\n    override fun onCreate(savedInstanceState: Bundle?) {\n        ...\n        // Setup UI and event handlers\n        val signInButton = findViewById<Button>(R.id.signInButton)\n        signInButton.setOnClickListener { signIn() }\n        ...\n    }\n    ...\n}\n"})})}),(0,r.jsx)(l.Z,{value:"ed25519",children:(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-kotlin",metastring:'title="Usage"',children:"import android.widget.Button\nimport com.web3auth.core.Web3Auth\nimport android.os.Bundle\n\nclass MainActivity : AppCompatActivity() {\n    private lateinit var web3Auth: Web3Auth\n\n    private fun signIn() {\n\n        val selectedLoginProvider = Provider.GOOGLE\n        // Can be GOOGLE, FACEBOOK, TWITCH etc.\n        val loginCompletableFuture: CompletableFuture<Web3AuthResponse> =\n            web3Auth.login(\n                LoginParams(\n                    selectedLoginProvider,\n                // highlight-next-line\n                    curve = Curve.ED25519\n                )\n            )\n\n        loginCompletableFuture.whenComplete { loginResponse, error ->\n            if (error == null) {\n                // render logged in UI\n            } else {\n                // render error UI\n            }\n\n        }\n    }\n\n    override fun onCreate(savedInstanceState: Bundle?) {\n        ...\n        // Setup UI and event handlers\n        val signInButton = findViewById<Button>(R.id.signInButton)\n        signInButton.setOnClickListener { signIn() }\n        ...\n    }\n    ...\n\n}\n\n"})})})]}),"\n",(0,r.jsx)(n.h2,{id:"logging-out-a-user",children:"Logging out a user"}),"\n",(0,r.jsx)(n.h3,{id:"web3authlogout",children:(0,r.jsx)(n.code,{children:"web3Auth.logout()"})}),"\n",(0,r.jsxs)(n.p,{children:["The ",(0,r.jsx)(n.code,{children:"logout()"})," method is used to log out a user from Web3Auth. This method will clear the session data and the user will be logged out from Web3Auth."]}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-kotlin",metastring:'title="Usage"',children:"import android.widget.Button\nimport com.web3auth.core.Web3Auth\nimport android.os.Bundle\n\nclass MainActivity : AppCompatActivity() {\n    private lateinit var web3Auth: Web3Auth\n\n    private fun signOut() {\n        // highlight-next-line\n        val logoutCompletableFuture =  web3Auth.logout()\n        logoutCompletableFuture.whenComplete { _, error ->\n            if (error == null) {\n                // render logout UI\n            } else {\n                // render error UI\n            }\n        }\n    }\n\n    override fun onCreate(savedInstanceState: Bundle?) {\n        ...\n        // Setup UI and event handlers\n        val signOutButton = findViewById<Button>(R.id.signOutButton)\n        signOutButton.setOnClickListener { signOut() }\n        ...\n    }\n    ...\n}\n"})}),"\n",(0,r.jsx)(n.h3,{id:"enable-mfa-for-a-user",children:"Enable MFA for a user"}),"\n",(0,r.jsxs)(n.p,{children:["The ",(0,r.jsx)(n.code,{children:"enableMFA"})," method is used to trigger MFA setup flow for users. The method takes ",(0,r.jsx)(n.code,{children:"LoginParams"})," which will used during custom verifiers. If you are\nusing default login providers, you don't need to pass ",(0,r.jsx)(n.code,{children:"LoginParams"}),". If you are using custom jwt verifiers, you need to pass the JWT token in\n",(0,r.jsx)(n.code,{children:"loginParams"})," as well."]}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-kotlin",metastring:'title="Usage"',children:'import android.widget.Button\nimport com.web3auth.core.Web3Auth\nimport android.os.Bundle\n\nclass MainActivity : AppCompatActivity() {\n    private lateinit var web3Auth: Web3Auth\n\n     private fun enableMFA() {\n       // highlight-next-line\n       val completableFuture = web3Auth.enableMFA()\n\n        completableFuture.whenComplete{_, error ->\n            if (error == null) {\n                Log.d("MainActivity_Web3Auth", "Launched successfully")\n                // Add your logic\n            } else {\n                // Add your logic on error\n                Log.d("MainActivity_Web3Auth", error.message ?: "Something went wrong")\n            }\n        }\n    }\n\n    override fun onCreate(savedInstanceState: Bundle?) {\n        ...\n        // Setup UI and event handlers\n        val enableMFAButton = findViewById<Button>(R.id.enableMFAButton)\n        enableMFAButton.setOnClickListener { enableMFA() }\n        ...\n    }\n    ...\n}\n'})}),"\n",(0,r.jsx)(n.h2,{id:"launch-wallet-services",children:"Launch Wallet Services"}),"\n",(0,r.jsxs)(n.p,{children:["The ",(0,r.jsx)(n.code,{children:"launchWalletServices"})," method launches a WebView which allows you to use the templated wallet UI services. The method takes ",(0,r.jsx)(n.code,{children:"LoginParams"})," and\n",(0,r.jsx)(n.code,{children:"ChainConfig"})," as the required input.Wallet Services is currently only available for EVM chains."]}),"\n",(0,r.jsx)(n.h3,{id:"arguments-2",children:"Arguments"}),"\n",(0,r.jsx)(n.p,{children:(0,r.jsx)(n.code,{children:"ChainConfig"})}),"\n",(0,r.jsxs)(s.Z,{defaultValue:"table",values:[{label:"Table",value:"table"},{label:"Class",value:"class"}],children:[(0,r.jsx)(l.Z,{value:"table",children:(0,r.jsxs)(n.table,{children:[(0,r.jsx)(n.thead,{children:(0,r.jsxs)(n.tr,{children:[(0,r.jsx)(n.th,{children:"Parameter"}),(0,r.jsx)(n.th,{children:"Type"}),(0,r.jsx)(n.th,{children:"Mandatory"}),(0,r.jsx)(n.th,{children:"Description"})]})}),(0,r.jsxs)(n.tbody,{children:[(0,r.jsxs)(n.tr,{children:[(0,r.jsx)(n.td,{children:(0,r.jsx)(n.code,{children:"chainNamespace"})}),(0,r.jsx)(n.td,{children:(0,r.jsx)(n.code,{children:"ChainNamespace"})}),(0,r.jsx)(n.td,{children:"No"}),(0,r.jsxs)(n.td,{children:["Custom configuration for your preferred blockchain. As of now only EVM supported. Default value is ",(0,r.jsx)(n.code,{children:"ChainNamespace.EIP155"}),"."]})]}),(0,r.jsxs)(n.tr,{children:[(0,r.jsx)(n.td,{children:(0,r.jsx)(n.code,{children:"decimals"})}),(0,r.jsx)(n.td,{children:(0,r.jsx)(n.code,{children:"Int"})}),(0,r.jsx)(n.td,{children:"No"}),(0,r.jsx)(n.td,{children:"Number of decimals for the currency ticker. Default value is 18"})]}),(0,r.jsxs)(n.tr,{children:[(0,r.jsx)(n.td,{children:(0,r.jsx)(n.code,{children:"blockExplorerUrl"})}),(0,r.jsx)(n.td,{children:(0,r.jsx)(n.code,{children:"String"})}),(0,r.jsx)(n.td,{children:"No"}),(0,r.jsxs)(n.td,{children:["Blockchain's explorer URL. (eg: ",(0,r.jsx)(n.code,{children:"https://etherscan.io"}),")"]})]}),(0,r.jsxs)(n.tr,{children:[(0,r.jsx)(n.td,{children:(0,r.jsx)(n.code,{children:"chainId"})}),(0,r.jsx)(n.td,{children:(0,r.jsx)(n.code,{children:"String"})}),(0,r.jsx)(n.td,{children:"Yes"}),(0,r.jsxs)(n.td,{children:["The chain id of the selected blockchain in ",(0,r.jsx)(n.code,{children:"hex"}),"."]})]}),(0,r.jsxs)(n.tr,{children:[(0,r.jsx)(n.td,{children:(0,r.jsx)(n.code,{children:"displayName"})}),(0,r.jsx)(n.td,{children:(0,r.jsx)(n.code,{children:"String"})}),(0,r.jsx)(n.td,{children:"No"}),(0,r.jsx)(n.td,{children:"Display Name for the chain."})]}),(0,r.jsxs)(n.tr,{children:[(0,r.jsx)(n.td,{children:(0,r.jsx)(n.code,{children:"logo"})}),(0,r.jsx)(n.td,{children:(0,r.jsx)(n.code,{children:"String"})}),(0,r.jsx)(n.td,{children:"No"}),(0,r.jsxs)(n.td,{children:["Logo for the selected ",(0,r.jsx)(n.code,{children:"chainNamespace"})," & ",(0,r.jsx)(n.code,{children:"chainId"}),"."]})]}),(0,r.jsxs)(n.tr,{children:[(0,r.jsx)(n.td,{children:(0,r.jsx)(n.code,{children:"rpcTarget"})}),(0,r.jsx)(n.td,{children:(0,r.jsx)(n.code,{children:"String"})}),(0,r.jsx)(n.td,{children:"Yes"}),(0,r.jsxs)(n.td,{children:["RPC Target URL for the selected ",(0,r.jsx)(n.code,{children:"chainNamespace"})," & ",(0,r.jsx)(n.code,{children:"chainId"}),"."]})]}),(0,r.jsxs)(n.tr,{children:[(0,r.jsx)(n.td,{children:(0,r.jsx)(n.code,{children:"ticker"})}),(0,r.jsx)(n.td,{children:(0,r.jsx)(n.code,{children:"String"})}),(0,r.jsx)(n.td,{children:"Yes"}),(0,r.jsxs)(n.td,{children:["Default currency ticker of the network (e.g: ",(0,r.jsx)(n.code,{children:"ETH"}),")"]})]}),(0,r.jsxs)(n.tr,{children:[(0,r.jsx)(n.td,{children:(0,r.jsx)(n.code,{children:"tickerName"})}),(0,r.jsx)(n.td,{children:(0,r.jsx)(n.code,{children:"String"})}),(0,r.jsx)(n.td,{children:"No"}),(0,r.jsxs)(n.td,{children:["Name for currency ticker (e.g: ",(0,r.jsx)(n.code,{children:"Ethereum"}),")"]})]})]})]})}),(0,r.jsx)(l.Z,{value:"class",children:(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-kotlin",children:"data class ChainConfig(\n    val chainNamespace: ChainNamespace = ChainNamespace.EIP155,\n    val decimals: Int = 18,\n    val blockExplorerUrl: String? = null,\n    val chainId: String,\n    val displayName: String? = null,\n    val logo: String? = null,\n    val rpcTarget: String,\n    val ticker: String,\n    val tickerName: String? = null,\n)\n"})})})]}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-kotlin",metastring:'title="Usage"',children:'val loginParams = LoginParams(Provider.GOOGLE)\n\n// highlight-start\nval chainConfig = ChainConfig(\n    chainId = "0x1",\n    rpcTarget = "https://rpc.ankr.com/eth",\n    ticker = "ETH",\n    chainNamespace = ChainNamespace.EIP155\n)\n// highlight-end\n\nval completableFuture = web3Auth.launchWalletServices(\n    loginParams, chainConfig\n)\n\ncompletableFuture.whenComplete{_, error ->\n    if(error == null) {\n        // Add your logic\n        Log.d("MainActivity_Web3Auth", "Wallet services launched successfully")\n    } else {\n        // Add your logic for error\n        Log.d("MainActivity_Web3Auth", error.message ?: "Something went wrong")\n    }\n}\n'})}),"\n",(0,r.jsx)(n.admonition,{title:"Access to Wallet Services is gated. You can use this feature in the development environment for free. The minimum",type:"note",children:(0,r.jsxs)(n.p,{children:[(0,r.jsx)(n.a,{href:"https://web3auth.io/pricing.html",children:"pricing plan"})," to use this feature in a production environment is the ",(0,r.jsx)(n.strong,{children:"Scale Plan"}),". :::"]})})]})}function x(e={}){const{wrapper:n}={...(0,i.a)(),...e.components};return n?(0,r.jsx)(n,{...e,children:(0,r.jsx)(g,{...e})}):g(e)}},85162:(e,n,t)=>{t.d(n,{Z:()=>s});t(67294);var r=t(36905);const i={tabItem:"tabItem_Ymn6"};var l=t(85893);function s(e){let{children:n,hidden:t,className:s}=e;return(0,l.jsx)("div",{role:"tabpanel",className:(0,r.Z)(i.tabItem,s),hidden:t,children:n})}},74866:(e,n,t)=>{t.d(n,{Z:()=>A});var r=t(67294),i=t(36905),l=t(12466),s=t(16550),d=t(20469),o=t(91980),a=t(67392),c=t(50012);function h(e){return r.Children.toArray(e).filter((e=>"\n"!==e)).map((e=>{if(!e||(0,r.isValidElement)(e)&&function(e){const{props:n}=e;return!!n&&"object"==typeof n&&"value"in n}(e))return e;throw new Error(`Docusaurus error: Bad <Tabs> child <${"string"==typeof e.type?e.type:e.type.name}>: all children of the <Tabs> component should be <TabItem>, and every <TabItem> should have a unique "value" prop.`)}))?.filter(Boolean)??[]}function u(e){const{values:n,children:t}=e;return(0,r.useMemo)((()=>{const e=n??function(e){return h(e).map((e=>{let{props:{value:n,label:t,attributes:r,default:i}}=e;return{value:n,label:t,attributes:r,default:i}}))}(t);return function(e){const n=(0,a.l)(e,((e,n)=>e.value===n.value));if(n.length>0)throw new Error(`Docusaurus error: Duplicate values "${n.map((e=>e.value)).join(", ")}" found in <Tabs>. Every value needs to be unique.`)}(e),e}),[n,t])}function g(e){let{value:n,tabValues:t}=e;return t.some((e=>e.value===n))}function x(e){let{queryString:n=!1,groupId:t}=e;const i=(0,s.k6)(),l=function(e){let{queryString:n=!1,groupId:t}=e;if("string"==typeof n)return n;if(!1===n)return null;if(!0===n&&!t)throw new Error('Docusaurus error: The <Tabs> component groupId prop is required if queryString=true, because this value is used as the search param name. You can also provide an explicit value such as queryString="my-search-param".');return t??null}({queryString:n,groupId:t});return[(0,o._X)(l),(0,r.useCallback)((e=>{if(!l)return;const n=new URLSearchParams(i.location.search);n.set(l,e),i.replace({...i.location,search:n.toString()})}),[l,i])]}function p(e){const{defaultValue:n,queryString:t=!1,groupId:i}=e,l=u(e),[s,o]=(0,r.useState)((()=>function(e){let{defaultValue:n,tabValues:t}=e;if(0===t.length)throw new Error("Docusaurus error: the <Tabs> component requires at least one <TabItem> children component");if(n){if(!g({value:n,tabValues:t}))throw new Error(`Docusaurus error: The <Tabs> has a defaultValue "${n}" but none of its children has the corresponding value. Available values are: ${t.map((e=>e.value)).join(", ")}. If you intend to show no default tab, use defaultValue={null} instead.`);return n}const r=t.find((e=>e.default))??t[0];if(!r)throw new Error("Unexpected error: 0 tabValues");return r.value}({defaultValue:n,tabValues:l}))),[a,h]=x({queryString:t,groupId:i}),[p,j]=function(e){let{groupId:n}=e;const t=function(e){return e?`docusaurus.tab.${e}`:null}(n),[i,l]=(0,c.Nk)(t);return[i,(0,r.useCallback)((e=>{t&&l.set(e)}),[t,l])]}({groupId:i}),v=(()=>{const e=a??p;return g({value:e,tabValues:l})?e:null})();(0,d.Z)((()=>{v&&o(v)}),[v]);return{selectedValue:s,selectValue:(0,r.useCallback)((e=>{if(!g({value:e,tabValues:l}))throw new Error(`Can't select invalid tab value=${e}`);o(e),h(e),j(e)}),[h,j,l]),tabValues:l}}var j=t(72389);const v={tabList:"tabList__CuJ",tabItem:"tabItem_LNqP"};var m=t(85893);function b(e){let{className:n,block:t,selectedValue:r,selectValue:s,tabValues:d}=e;const o=[],{blockElementScrollPositionUntilNextRender:a}=(0,l.o5)(),c=e=>{const n=e.currentTarget,t=o.indexOf(n),i=d[t].value;i!==r&&(a(n),s(i))},h=e=>{let n=null;switch(e.key){case"Enter":c(e);break;case"ArrowRight":{const t=o.indexOf(e.currentTarget)+1;n=o[t]??o[0];break}case"ArrowLeft":{const t=o.indexOf(e.currentTarget)-1;n=o[t]??o[o.length-1];break}}n?.focus()};return(0,m.jsx)("ul",{role:"tablist","aria-orientation":"horizontal",className:(0,i.Z)("tabs",{"tabs--block":t},n),children:d.map((e=>{let{value:n,label:t,attributes:l}=e;return(0,m.jsx)("li",{role:"tab",tabIndex:r===n?0:-1,"aria-selected":r===n,ref:e=>o.push(e),onKeyDown:h,onClick:c,...l,className:(0,i.Z)("tabs__item",v.tabItem,l?.className,{"tabs__item--active":r===n}),children:t??n},n)}))})}function f(e){let{lazy:n,children:t,selectedValue:i}=e;const l=(Array.isArray(t)?t:[t]).filter(Boolean);if(n){const e=l.find((e=>e.props.value===i));return e?(0,r.cloneElement)(e,{className:"margin-top--md"}):null}return(0,m.jsx)("div",{className:"margin-top--md",children:l.map(((e,n)=>(0,r.cloneElement)(e,{key:n,hidden:e.props.value!==i})))})}function w(e){const n=p(e);return(0,m.jsxs)("div",{className:(0,i.Z)("tabs-container",v.tabList),children:[(0,m.jsx)(b,{...e,...n}),(0,m.jsx)(f,{...e,...n})]})}function A(e){const n=(0,j.Z)();return(0,m.jsx)(w,{...e,children:h(e.children)},String(n))}},11151:(e,n,t)=>{t.d(n,{Z:()=>d,a:()=>s});var r=t(67294);const i={},l=r.createContext(i);function s(e){const n=r.useContext(l);return r.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function d(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(i):e.components||i:s(e.components),r.createElement(l.Provider,{value:n},e.children)}}}]);