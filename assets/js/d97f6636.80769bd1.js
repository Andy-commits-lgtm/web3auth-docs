"use strict";(self.webpackChunkweb3auth_docs=self.webpackChunkweb3auth_docs||[]).push([[17326],{9952:(e,n,t)=>{t.r(n),t.d(n,{assets:()=>c,contentTitle:()=>d,default:()=>g,frontMatter:()=>l,metadata:()=>a,toc:()=>h});var i=t(85893),r=t(11151),o=t(85162),s=t(74866);const l={title:"Using Custom Authentication in PnP iOS SDK",sidebar_label:"Custom Authentication",displayed_sidebar:"sdk",description:"Web3Auth PnP iOS SDK - Using Custom Authentication | Documentation - Web3Auth"},d=void 0,a={id:"sdk/pnp/ios/custom-authentication",title:"Using Custom Authentication in PnP iOS SDK",description:"Web3Auth PnP iOS SDK - Using Custom Authentication | Documentation - Web3Auth",source:"@site/docs/sdk/pnp/ios/custom-authentication.mdx",sourceDirName:"sdk/pnp/ios",slug:"/sdk/pnp/ios/custom-authentication",permalink:"/docs/sdk/pnp/ios/custom-authentication",draft:!1,unlisted:!1,editUrl:"https://github.com/web3auth/web3auth-docs/edit/master/docs/sdk/pnp/ios/custom-authentication.mdx",tags:[],version:"current",frontMatter:{title:"Using Custom Authentication in PnP iOS SDK",sidebar_label:"Custom Authentication",displayed_sidebar:"sdk",description:"Web3Auth PnP iOS SDK - Using Custom Authentication | Documentation - Web3Auth"},sidebar:"sdk",previous:{title:"Whitelabel",permalink:"/docs/sdk/pnp/ios/whitelabel"},next:{title:"Multi Factor Authentication",permalink:"/docs/sdk/pnp/ios/mfa"}},c={},h=[{value:"<code>W3ALoginConfig</code>",id:"w3aloginconfig",level:2},{value:"Arguments",id:"arguments",level:3},{value:"<code>typeOfLogin</code>",id:"typeoflogin",level:3},{value:"<code>ExtraLoginOptions</code> for special login methods",id:"extraloginoptions-for-special-login-methods",level:2},{value:"Using Auth0 Login",id:"using-auth0-login",level:3},{value:"Custom JWT Login",id:"custom-jwt-login",level:3},{value:"Email Passwordless",id:"email-passwordless",level:3}];function u(e){const n={a:"a",admonition:"admonition",code:"code",h2:"h2",h3:"h3",li:"li",p:"p",pre:"pre",strong:"strong",table:"table",tbody:"tbody",td:"td",th:"th",thead:"thead",tr:"tr",ul:"ul",...(0,r.a)(),...e.components};return(0,i.jsxs)(i.Fragment,{children:[(0,i.jsxs)(n.p,{children:["To use custom authentication (Using Social providers or Login providers like Auth0, AWS Cognito, Firebase etc. or even your own custom JWT login) you can\nadd the configuration to the ",(0,i.jsx)(n.code,{children:"loginConfig"})," parameter of the ",(0,i.jsx)(n.code,{children:"W3AInitParams"})," object during the initialization."]}),"\n",(0,i.jsxs)(n.p,{children:["The ",(0,i.jsx)(n.code,{children:"loginConfig"})," parameter is a key value map. The key should be one of the ",(0,i.jsx)(n.code,{children:"Web3AuthProvider"})," in its string form, and the value should be a\n",(0,i.jsx)(n.code,{children:"W3ALoginConfig"})," struct."]}),"\n",(0,i.jsx)(n.p,{children:"To use custom authentication, first you'll need to configure your own verifier in the Web3Auth Dashboard in Custom Authentication section."}),"\n",(0,i.jsx)(n.admonition,{type:"note",children:(0,i.jsxs)(n.p,{children:["This is a paid feature and the the minimum ",(0,i.jsx)(n.a,{href:"https://web3auth.io/pricing.html",children:"pricing plan"})," to use this SDK in a production environment is the\n",(0,i.jsx)(n.strong,{children:"Growth Plan"}),". You can use this feature in the development environment for free."]})}),"\n",(0,i.jsx)(n.admonition,{title:"Create Custom Verifier",type:"tip",children:(0,i.jsxs)(n.p,{children:["Check out how to create a ",(0,i.jsx)(n.strong,{children:(0,i.jsx)(n.a,{href:"/auth-provider-setup/verifiers",children:"Custom Verifier"})})," on the Web3Auth Dashboard."]})}),"\n",(0,i.jsx)(n.admonition,{title:"using dapp share",type:"info",children:(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsx)(n.li,{children:"dApp Share is only returned for the Custom verifiers."}),"\n",(0,i.jsxs)(n.li,{children:["Also, 2FA should be enabled for the account using it. Use ",(0,i.jsx)(n.code,{children:"mfaLevel = MFALevel.MANDATORY"})," in the ",(0,i.jsx)(n.code,{children:"W3ALoginParams"})," during login. See\n",(0,i.jsx)(n.strong,{children:(0,i.jsx)(n.a,{href:"/sdk/pnp/ios/mfa",children:"MFA"})})," for more details."]}),"\n"]})}),"\n",(0,i.jsxs)(n.p,{children:["Once the custom verifier is created, you need to specify the details of your verifier in the ",(0,i.jsx)(n.code,{children:"W3ALoginConfig"})," struct, the parameters of the struct are as follows:"]}),"\n",(0,i.jsx)(n.h2,{id:"w3aloginconfig",children:(0,i.jsx)(n.code,{children:"W3ALoginConfig"})}),"\n",(0,i.jsx)(n.h3,{id:"arguments",children:"Arguments"}),"\n",(0,i.jsx)(n.p,{children:(0,i.jsx)(n.code,{children:"W3ALoginConfig"})}),"\n",(0,i.jsxs)(s.Z,{defaultValue:"table",values:[{label:"Table",value:"table"},{label:"Struct",value:"struct"}],children:[(0,i.jsx)(o.Z,{value:"table",children:(0,i.jsxs)(n.table,{children:[(0,i.jsx)(n.thead,{children:(0,i.jsxs)(n.tr,{children:[(0,i.jsx)(n.th,{children:"Parameter"}),(0,i.jsx)(n.th,{children:"Type"}),(0,i.jsx)(n.th,{children:"Mandatory"}),(0,i.jsx)(n.th,{children:"Description"})]})}),(0,i.jsxs)(n.tbody,{children:[(0,i.jsxs)(n.tr,{children:[(0,i.jsx)(n.td,{children:(0,i.jsx)(n.code,{children:"verifier"})}),(0,i.jsx)(n.td,{children:(0,i.jsx)(n.code,{children:"String"})}),(0,i.jsx)(n.td,{children:"Yes"}),(0,i.jsx)(n.td,{children:"The name of the verifier that you have registered in Web3Auth Dashboard."})]}),(0,i.jsxs)(n.tr,{children:[(0,i.jsx)(n.td,{children:(0,i.jsx)(n.code,{children:"typeOfLogin"})}),(0,i.jsx)(n.td,{children:(0,i.jsx)(n.code,{children:"TypeOfLogin"})}),(0,i.jsx)(n.td,{children:"Yes"}),(0,i.jsx)(n.td,{children:"Type of login of this verifier, this value will affect the login flow that is adapted. For example, if you choose google, a google sign-in flow will be used. If you choose jwt, which you should be providing your own JWT token, no sign-in flow will be presented."})]}),(0,i.jsxs)(n.tr,{children:[(0,i.jsx)(n.td,{children:(0,i.jsx)(n.code,{children:"clientId"})}),(0,i.jsx)(n.td,{children:(0,i.jsx)(n.code,{children:"String"})}),(0,i.jsx)(n.td,{children:"Yes"}),(0,i.jsx)(n.td,{children:"The Web3Auth ClientId you want to use for this login provider."})]}),(0,i.jsxs)(n.tr,{children:[(0,i.jsx)(n.td,{children:(0,i.jsx)(n.code,{children:"name"})}),(0,i.jsx)(n.td,{children:(0,i.jsx)(n.code,{children:"String"})}),(0,i.jsx)(n.td,{children:"No"}),(0,i.jsx)(n.td,{children:"Name of your verifier."})]}),(0,i.jsxs)(n.tr,{children:[(0,i.jsx)(n.td,{children:(0,i.jsx)(n.code,{children:"description"})}),(0,i.jsx)(n.td,{children:(0,i.jsx)(n.code,{children:"String"})}),(0,i.jsx)(n.td,{children:"No"}),(0,i.jsx)(n.td,{children:"Description of this login flow."})]}),(0,i.jsxs)(n.tr,{children:[(0,i.jsx)(n.td,{children:(0,i.jsx)(n.code,{children:"verifierSubIdentifier"})}),(0,i.jsx)(n.td,{children:(0,i.jsx)(n.code,{children:"String"})}),(0,i.jsx)(n.td,{children:"No"}),(0,i.jsx)(n.td,{children:"The name of the field in the JWT that should be used as the unique user ID of the JWT. Should be same as the one you used in the verifier config."})]}),(0,i.jsxs)(n.tr,{children:[(0,i.jsx)(n.td,{children:(0,i.jsx)(n.code,{children:"logoHover"})}),(0,i.jsx)(n.td,{children:(0,i.jsx)(n.code,{children:"String"})}),(0,i.jsx)(n.td,{children:"No"}),(0,i.jsx)(n.td,{children:"Logo to be shown on mouse hover."})]}),(0,i.jsxs)(n.tr,{children:[(0,i.jsx)(n.td,{children:(0,i.jsx)(n.code,{children:"logoLight"})}),(0,i.jsx)(n.td,{children:(0,i.jsx)(n.code,{children:"String"})}),(0,i.jsx)(n.td,{children:"No"}),(0,i.jsx)(n.td,{children:"Logo to be shown on light background (light theme)."})]}),(0,i.jsxs)(n.tr,{children:[(0,i.jsx)(n.td,{children:(0,i.jsx)(n.code,{children:"logoDark"})}),(0,i.jsx)(n.td,{children:(0,i.jsx)(n.code,{children:"String"})}),(0,i.jsx)(n.td,{children:"No"}),(0,i.jsx)(n.td,{children:"Logo to be shown on dark background (dark theme)."})]}),(0,i.jsxs)(n.tr,{children:[(0,i.jsx)(n.td,{children:(0,i.jsx)(n.code,{children:"mainOption"})}),(0,i.jsx)(n.td,{children:(0,i.jsx)(n.code,{children:"Bool?"})}),(0,i.jsx)(n.td,{children:"No"}),(0,i.jsx)(n.td,{children:"Show login button on the main list"})]}),(0,i.jsxs)(n.tr,{children:[(0,i.jsx)(n.td,{children:(0,i.jsx)(n.code,{children:"showOnModal"})}),(0,i.jsx)(n.td,{children:(0,i.jsx)(n.code,{children:"Bool?"})}),(0,i.jsx)(n.td,{children:"No"}),(0,i.jsx)(n.td,{children:"Whether to show the login button on modal or not"})]}),(0,i.jsxs)(n.tr,{children:[(0,i.jsx)(n.td,{children:(0,i.jsx)(n.code,{children:"showOnDesktop"})}),(0,i.jsx)(n.td,{children:(0,i.jsx)(n.code,{children:"Bool?"})}),(0,i.jsx)(n.td,{children:"No"}),(0,i.jsx)(n.td,{children:"Whether to show the login button on desktop"})]}),(0,i.jsxs)(n.tr,{children:[(0,i.jsx)(n.td,{children:(0,i.jsx)(n.code,{children:"showOnMobile"})}),(0,i.jsx)(n.td,{children:(0,i.jsx)(n.code,{children:"Bool?"})}),(0,i.jsx)(n.td,{children:"No"}),(0,i.jsx)(n.td,{children:"Whether to show the login button on mobile"})]})]})]})}),(0,i.jsx)(o.Z,{value:"struct",children:(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-swift",children:"public struct W3ALoginConfig: Codable {\n  let verifier: String\n  let typeOfLogin: TypeOfLogin\n  let clientId: String\n  let name: String?\n  let description: String?\n  let verifierSubIdentifier: String?\n  let logoHover: String?\n  let logoLight: String?\n  let logoDark: String?\n  let mainOption: Bool?\n  let showOnModal: Bool?\n  let showOnDesktop: Bool?\n  let showOnMobile: Bool?\n}\n"})})})]}),"\n",(0,i.jsx)(n.h3,{id:"typeoflogin",children:(0,i.jsx)(n.code,{children:"typeOfLogin"})}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-swift",children:"public enum TypeOfLogin: String, Codable {\n    case google\n    case facebook\n    case reddit\n    case discord\n    case twitch\n    case apple\n    case github\n    case linkedin\n    case twitter\n    case weibo\n    case line\n    case email_password\n    case passwordless\n    case jwt\n}\n"})}),"\n",(0,i.jsxs)(s.Z,{defaultValue:"google",values:[{label:"Google",value:"google"},{label:"Facebook",value:"facebook"},{label:"JWT",value:"jwt"}],children:[(0,i.jsx)(o.Z,{value:"google",children:(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-swift",metastring:'title="Usage"',children:'web3Auth = await Web3Auth(\n  W3AInitParams(\n    clientId: "YOUR_CLIENT_ID",\n    network: .sapphire_mainnet,\n    // highlight-start\n    loginConfig: [\n      Web3AuthProvider.JWT.rawValue: .init(\n        verifier: "YOUR_VERIFIER_NAME", // get it from web3auth dashboard\n        typeOfLogin: TypeOfLogin.google,\n        clientId: "YOUR_GOOGLE_CLIENT_ID",\n      )\n    ]\n    // highlight-end\n))\n'})})}),(0,i.jsx)(o.Z,{value:"facebook",children:(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-swift",metastring:'title="Usage"',children:'web3Auth = await Web3Auth(\n  W3AInitParams(\n    clientId: "YOUR_CLIENT_ID",\n    network: .sapphire_mainnet,\n    // highlight-start\n    loginConfig: [\n      Web3AuthProvider.JWT.rawValue: .init(\n        verifier: "YOUR_VERIFIER_NAME", // get it from web3auth dashboard\n        typeOfLogin: TypeOfLogin.facebook,\n        clientId: "YOUR_FACEBOOK_CLIENT_ID",\n      )\n    ]\n    // highlight-end\n))\n'})})}),(0,i.jsx)(o.Z,{value:"jwt",children:(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-swift",metastring:'title="Usage"',children:'web3Auth = await Web3Auth(\n  W3AInitParams(\n    clientId:"YOUR_CLIENT_ID",\n    network: .sapphire_mainnet,\n    // highlight-start\n    loginConfig: [\n      Web3AuthProvider.JWT.rawValue: .init(\n        verifier: "YOUR_VERIFIER_NAME", // get it from web3auth dashboard\n        typeOfLogin: TypeOfLogin.jwt,\n        clientId: "YOUR_CLIENT_ID", // get it from web3auth dashboard\n      )\n    ]\n    // highlight-end\n))\n'})})})]}),"\n",(0,i.jsxs)(n.h2,{id:"extraloginoptions-for-special-login-methods",children:[(0,i.jsx)(n.code,{children:"ExtraLoginOptions"})," for special login methods"]}),"\n",(0,i.jsxs)(n.p,{children:["Additional to the ",(0,i.jsx)(n.code,{children:"W3ALoginConfig"})," you can pass extra options to the ",(0,i.jsx)(n.code,{children:"login"})," function to configure the login flow for cases requiring additional info\nfor enabling login. The ",(0,i.jsx)(n.code,{children:"extraLoginOptions"})," accepts the following parameters:"]}),"\n",(0,i.jsxs)(s.Z,{defaultValue:"table",values:[{label:"Table",value:"table"},{label:"Struct",value:"struct"}],children:[(0,i.jsx)(o.Z,{value:"table",children:(0,i.jsxs)(n.table,{children:[(0,i.jsx)(n.thead,{children:(0,i.jsxs)(n.tr,{children:[(0,i.jsx)(n.th,{children:"Parameter"}),(0,i.jsx)(n.th,{children:"Type"}),(0,i.jsx)(n.th,{children:"Description"})]})}),(0,i.jsxs)(n.tbody,{children:[(0,i.jsxs)(n.tr,{children:[(0,i.jsx)(n.td,{children:(0,i.jsx)(n.code,{children:"domain"})}),(0,i.jsx)(n.td,{children:(0,i.jsx)(n.code,{children:"String?"})}),(0,i.jsxs)(n.td,{children:["Your Auth0 account domain such as ",(0,i.jsx)(n.code,{children:"example.auth0.com"})," or ",(0,i.jsx)(n.code,{children:"example.mycompany.com"})," etc. ",(0,i.jsx)(n.strong,{children:"Use any random string in case of custom JWT login."})]})]}),(0,i.jsxs)(n.tr,{children:[(0,i.jsx)(n.td,{children:(0,i.jsx)(n.code,{children:"client_id"})}),(0,i.jsx)(n.td,{children:(0,i.jsx)(n.code,{children:"String?"})}),(0,i.jsxs)(n.td,{children:["The Client ID found on your Auth0 Application settings page. ",(0,i.jsx)(n.strong,{children:"Use web3auth client id in case of custom JWT login."})]})]}),(0,i.jsxs)(n.tr,{children:[(0,i.jsx)(n.td,{children:(0,i.jsx)(n.code,{children:"redirect_uri"})}),(0,i.jsx)(n.td,{children:(0,i.jsx)(n.code,{children:"String?"})}),(0,i.jsx)(n.td,{children:"The default URL where Auth0 will redirect your browser to with the authentication result."})]}),(0,i.jsxs)(n.tr,{children:[(0,i.jsx)(n.td,{children:(0,i.jsx)(n.code,{children:"leeway"})}),(0,i.jsx)(n.td,{children:(0,i.jsx)(n.code,{children:"Int?"})}),(0,i.jsx)(n.td,{children:"The value in seconds used to account for clock skew in JWT expirations."})]}),(0,i.jsxs)(n.tr,{children:[(0,i.jsx)(n.td,{children:(0,i.jsx)(n.code,{children:"verifierIdField"})}),(0,i.jsx)(n.td,{children:(0,i.jsx)(n.code,{children:"String?"})}),(0,i.jsx)(n.td,{children:"The field in the jwt token that maps to the verifier id."})]}),(0,i.jsxs)(n.tr,{children:[(0,i.jsx)(n.td,{children:(0,i.jsx)(n.code,{children:"isVerifierIdCaseSensitive"})}),(0,i.jsx)(n.td,{children:(0,i.jsx)(n.code,{children:"Bool?"})}),(0,i.jsxs)(n.td,{children:["Whether the verifier id field is case sensitive. Defaults to ",(0,i.jsx)(n.code,{children:"true"})]})]})]})]})}),(0,i.jsx)(o.Z,{value:"struct",children:(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-swift",children:"public struct ExtraLoginOptions: Codable {\n  let display: String?\n  let prompt: String?\n  let max_age: String?\n  let ui_locales: String?\n  let id_token_hint: String?\n  let id_token: String?\n  let login_hint: String?\n  let acr_values: String?\n  let scope: String?\n  let audience: String?\n  let connection: String?\n  let domain: String?\n  let client_id: String?\n  let redirect_uri: String?\n  let leeway: Int?\n  let verifierIdField: String?\n  let isVerifierIdCaseSensitive: Bool?\n  let additionalParams: [String : String]?\n}\n"})})})]}),"\n",(0,i.jsx)(n.h3,{id:"using-auth0-login",children:"Using Auth0 Login"}),"\n",(0,i.jsxs)(n.p,{children:["Auth0 has a special login flow, called the SPA flow. This flow requires a ",(0,i.jsx)(n.code,{children:"client_id"})," and ",(0,i.jsx)(n.code,{children:"domain"})," to be passed, and Web3Auth will get the JWT\n",(0,i.jsx)(n.code,{children:"id_token"})," from Auth0 directly. You can pass these configurations in the ",(0,i.jsx)(n.code,{children:"ExtraLoginOptions"})," object in the login function."]}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-swift",children:'web3Auth = await Web3Auth(\n  W3AInitParams(\n    clientId:"YOUR_CLIENT_ID",\n    network: .sapphire_mainnet,\n    // Optional loginConfig object\n    //highlight-start\n    loginConfig: [\n      Web3AuthProvider.JWT.rawValue: .init(\n        verifier: "YOUR_VERIFIER_NAME", // get it from web3auth dashboard for auth0 configuration\n        typeOfLogin: TypeOfLogin.jwt,\n        clientId: "YOUR_AUTH0_CLIENT_ID", // auth0\'s client id, get it from auth0 dashboard\n      )\n    ]\n    //highlight-end\n  )\n)\n\nlet result  = await web3Auth.login(W3ALoginParams(selectedLoginProvider,\n    // highlight-start\n    extraLoginOptions: .init(\n      // Domain of your auth0 app\n      domain:"https://username.us.auth0.com",\n      // The field in jwt token which maps to verifier id\n      verifierIdField: "sub",\n    )\n    // highlight-end\n))\n'})}),"\n",(0,i.jsx)(n.h3,{id:"custom-jwt-login",children:"Custom JWT Login"}),"\n",(0,i.jsxs)(n.p,{children:["If you're using any other provider like Firebase, AWS Cognito or deploying your own Custom JWT server, you need to put the jwt token into the\n",(0,i.jsx)(n.code,{children:"id_token"})," field of the ",(0,i.jsx)(n.code,{children:"extraLoginOptions"}),", additionally, you need to pass over the ",(0,i.jsx)(n.code,{children:"domain"})," field as well, which is mandatory. If you don't have a\ndomain, just passover a string in that field."]}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-swift",children:'\nweb3Auth = await Web3Auth(\n  W3AInitParams(\n    clientId:"YOUR_CLIENT_ID",\n    network: .testnet,\n    // Optional loginConfig object\n    // highlight-start\n    loginConfig: [\n      Web3AuthProvider.JWT.rawValue: .init(\n        verifier: "YOUR_VERIFIER_NAME", // get it from web3auth dashboard\n        typeOfLogin: TypeOfLogin.jwt,\n        clientId: "BPi5PB_UiIZ-cPz1GtV5i1I2iOSOHuimiXBI0e-Oe_u6X3oVAbCiAZOTEBtTXw4tsluTITPqA8zMsfxIKMjiqNQ", // get it from web3auth dashboard\n      )\n    ]\n    //highlight-end\n  )\n)\n\nlet result = await web3Auth.login(\n  W3ALoginParams(\n    selectedLoginProvider,\n    // highlight-next-line\n    extraLoginOptions: .init(domain:"your-domain", id_token: "your_jwt_token")\n  )\n)\n'})}),"\n",(0,i.jsx)(n.h3,{id:"email-passwordless",children:"Email Passwordless"}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsxs)(n.li,{children:["To use the ",(0,i.jsx)(n.code,{children:"EMAIL_PASSWORDLESS"})," login, you need to put the email into the ",(0,i.jsx)(n.code,{children:"login_hint"})," field of the ",(0,i.jsx)(n.code,{children:"extraLoginOptions"}),"."]}),"\n"]}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-swift",children:'let result = await Web3Auth().login(W3ALoginParams(selectedLoginProvider,\n  // highlight-next-line\n  extraLoginOptions: .init(loginHint: "hello@web3auth.io")\n))\n'})})]})}function g(e={}){const{wrapper:n}={...(0,r.a)(),...e.components};return n?(0,i.jsx)(n,{...e,children:(0,i.jsx)(u,{...e})}):u(e)}},85162:(e,n,t)=>{t.d(n,{Z:()=>s});t(67294);var i=t(36905);const r={tabItem:"tabItem_Ymn6"};var o=t(85893);function s(e){let{children:n,hidden:t,className:s}=e;return(0,o.jsx)("div",{role:"tabpanel",className:(0,i.Z)(r.tabItem,s),hidden:t,children:n})}},74866:(e,n,t)=>{t.d(n,{Z:()=>y});var i=t(67294),r=t(36905),o=t(12466),s=t(16550),l=t(20469),d=t(91980),a=t(67392),c=t(50012);function h(e){return i.Children.toArray(e).filter((e=>"\n"!==e)).map((e=>{if(!e||(0,i.isValidElement)(e)&&function(e){const{props:n}=e;return!!n&&"object"==typeof n&&"value"in n}(e))return e;throw new Error(`Docusaurus error: Bad <Tabs> child <${"string"==typeof e.type?e.type:e.type.name}>: all children of the <Tabs> component should be <TabItem>, and every <TabItem> should have a unique "value" prop.`)}))?.filter(Boolean)??[]}function u(e){const{values:n,children:t}=e;return(0,i.useMemo)((()=>{const e=n??function(e){return h(e).map((e=>{let{props:{value:n,label:t,attributes:i,default:r}}=e;return{value:n,label:t,attributes:i,default:r}}))}(t);return function(e){const n=(0,a.l)(e,((e,n)=>e.value===n.value));if(n.length>0)throw new Error(`Docusaurus error: Duplicate values "${n.map((e=>e.value)).join(", ")}" found in <Tabs>. Every value needs to be unique.`)}(e),e}),[n,t])}function g(e){let{value:n,tabValues:t}=e;return t.some((e=>e.value===n))}function x(e){let{queryString:n=!1,groupId:t}=e;const r=(0,s.k6)(),o=function(e){let{queryString:n=!1,groupId:t}=e;if("string"==typeof n)return n;if(!1===n)return null;if(!0===n&&!t)throw new Error('Docusaurus error: The <Tabs> component groupId prop is required if queryString=true, because this value is used as the search param name. You can also provide an explicit value such as queryString="my-search-param".');return t??null}({queryString:n,groupId:t});return[(0,d._X)(o),(0,i.useCallback)((e=>{if(!o)return;const n=new URLSearchParams(r.location.search);n.set(o,e),r.replace({...r.location,search:n.toString()})}),[o,r])]}function j(e){const{defaultValue:n,queryString:t=!1,groupId:r}=e,o=u(e),[s,d]=(0,i.useState)((()=>function(e){let{defaultValue:n,tabValues:t}=e;if(0===t.length)throw new Error("Docusaurus error: the <Tabs> component requires at least one <TabItem> children component");if(n){if(!g({value:n,tabValues:t}))throw new Error(`Docusaurus error: The <Tabs> has a defaultValue "${n}" but none of its children has the corresponding value. Available values are: ${t.map((e=>e.value)).join(", ")}. If you intend to show no default tab, use defaultValue={null} instead.`);return n}const i=t.find((e=>e.default))??t[0];if(!i)throw new Error("Unexpected error: 0 tabValues");return i.value}({defaultValue:n,tabValues:o}))),[a,h]=x({queryString:t,groupId:r}),[j,f]=function(e){let{groupId:n}=e;const t=function(e){return e?`docusaurus.tab.${e}`:null}(n),[r,o]=(0,c.Nk)(t);return[r,(0,i.useCallback)((e=>{t&&o.set(e)}),[t,o])]}({groupId:r}),p=(()=>{const e=a??j;return g({value:e,tabValues:o})?e:null})();(0,l.Z)((()=>{p&&d(p)}),[p]);return{selectedValue:s,selectValue:(0,i.useCallback)((e=>{if(!g({value:e,tabValues:o}))throw new Error(`Can't select invalid tab value=${e}`);d(e),h(e),f(e)}),[h,f,o]),tabValues:o}}var f=t(72389);const p={tabList:"tabList__CuJ",tabItem:"tabItem_LNqP"};var m=t(85893);function b(e){let{className:n,block:t,selectedValue:i,selectValue:s,tabValues:l}=e;const d=[],{blockElementScrollPositionUntilNextRender:a}=(0,o.o5)(),c=e=>{const n=e.currentTarget,t=d.indexOf(n),r=l[t].value;r!==i&&(a(n),s(r))},h=e=>{let n=null;switch(e.key){case"Enter":c(e);break;case"ArrowRight":{const t=d.indexOf(e.currentTarget)+1;n=d[t]??d[0];break}case"ArrowLeft":{const t=d.indexOf(e.currentTarget)-1;n=d[t]??d[d.length-1];break}}n?.focus()};return(0,m.jsx)("ul",{role:"tablist","aria-orientation":"horizontal",className:(0,r.Z)("tabs",{"tabs--block":t},n),children:l.map((e=>{let{value:n,label:t,attributes:o}=e;return(0,m.jsx)("li",{role:"tab",tabIndex:i===n?0:-1,"aria-selected":i===n,ref:e=>d.push(e),onKeyDown:h,onClick:c,...o,className:(0,r.Z)("tabs__item",p.tabItem,o?.className,{"tabs__item--active":i===n}),children:t??n},n)}))})}function w(e){let{lazy:n,children:t,selectedValue:r}=e;const o=(Array.isArray(t)?t:[t]).filter(Boolean);if(n){const e=o.find((e=>e.props.value===r));return e?(0,i.cloneElement)(e,{className:"margin-top--md"}):null}return(0,m.jsx)("div",{className:"margin-top--md",children:o.map(((e,n)=>(0,i.cloneElement)(e,{key:n,hidden:e.props.value!==r})))})}function v(e){const n=j(e);return(0,m.jsxs)("div",{className:(0,r.Z)("tabs-container",p.tabList),children:[(0,m.jsx)(b,{...e,...n}),(0,m.jsx)(w,{...e,...n})]})}function y(e){const n=(0,f.Z)();return(0,m.jsx)(v,{...e,children:h(e.children)},String(n))}},11151:(e,n,t)=>{t.d(n,{Z:()=>l,a:()=>s});var i=t(67294);const r={},o=i.createContext(r);function s(e){const n=i.useContext(o);return i.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function l(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(r):e.components||r:s(e.components),i.createElement(o.Provider,{value:n},e.children)}}}]);