"use strict";(self.webpackChunkweb3auth_docs=self.webpackChunkweb3auth_docs||[]).push([[35875],{19828:(e,n,r)=>{r.d(n,{ZP:()=>s});var i=r(85893),t=r(11151);function a(e){const n={code:"code",pre:"pre",...(0,t.a)(),...e.components};return(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-tsx",metastring:'title="/public/serviceworker/sw.js"',children:'/* eslint-disable */\nfunction getScope() {\n  return self.registration.scope;\n}\n\nself.addEventListener("message", function (event) {\n  if (event.data && event.data.type === "SKIP_WAITING") {\n    self.skipWaiting();\n  }\n});\n\nself.addEventListener("fetch", function (event) {\n  try {\n    const url = new URL(event.request.url);\n    if (url.pathname.includes("redirect") && url.href.includes(getScope())) {\n      event.respondWith(\n        new Response(\n          new Blob(\n            [\n              `\n                <!DOCTYPE html>\n                <html lang="en">\n                  <head>\n                    <meta charset="utf-8" />\n                    <meta http-equiv="X-UA-Compatible" content="IE=edge" />\n                    <meta name="viewport" content="width=device-width,initial-scale=1.0" />\n                    <title>Redirect</title>\n                    <style>\n                      * {\n                        box-sizing: border-box;\n                      }\n\n                      html,\n                      body {\n                        background: #fcfcfc;\n                        height: 100%;\n                        padding: 0;\n                        margin: 0;\n                      }\n\n                      .container {\n                        width: 100%;\n                        height: 100%;\n\n                        display: flex;\n                        justify-content: center;\n                        align-items: center;\n                        flex-direction: column;\n                      }\n\n                      h1.title {\n                        font-size: 14px;\n                        color: #0f1222;\n                        font-family: "Roboto", sans-serif !important;\n                        margin: 0;\n                        text-align: center;\n                      }\n\n                      .spinner .beat {\n                        background-color: #0364ff;\n                        height: 12px;\n                        width: 12px;\n                        margin: 24px 2px 10px;\n                        border-radius: 100%;\n                        -webkit-animation: beatStretchDelay 0.7s infinite linear;\n                        animation: beatStretchDelay 0.7s infinite linear;\n                        -webkit-animation-fill-mode: both;\n                        animation-fill-mode: both;\n                        display: inline-block;\n                      }\n\n                      .spinner .beat-odd {\n                        animation-delay: 0s;\n                      }\n\n                      .spinner .beat-even {\n                        animation-delay: 0.35s;\n                      }\n\n                      @-webkit-keyframes beatStretchDelay {\n                        50% {\n                          -webkit-transform: scale(0.75);\n                          transform: scale(0.75);\n                          -webkit-opacity: 0.2;\n                          opacity: 0.2;\n                        }\n\n                        100% {\n                          -webkit-transform: scale(1);\n                          transform: scale(1);\n                          -webkit-opacity: 1;\n                          opacity: 1;\n                        }\n                      }\n\n                      @keyframes beatStretchDelay {\n                        50% {\n                          -webkit-transform: scale(0.75);\n                          transform: scale(0.75);\n                          -webkit-opacity: 0.2;\n                          opacity: 0.2;\n                        }\n\n                        100% {\n                          -webkit-transform: scale(1);\n                          transform: scale(1);\n                          -webkit-opacity: 1;\n                          opacity: 1;\n                        }\n                      }\n\n                      @media (min-width: 768px) {\n                        h1.title {\n                          font-size: 14px;\n                        }\n                        p.info {\n                          font-size: 28px;\n                        }\n\n                        .spinner .beat {\n                          height: 12px;\n                          width: 12px;\n                        }\n                      }\n                    </style>\n                  </head>\n\n                  <body>\n                    <div id="message" class="container">\n                      <div class="spinner content" id="spinner">\n                        <div class="beat beat-odd"></div>\n                        <div class="beat beat-even"></div>\n                        <div class="beat beat-odd"></div>\n                      </div>\n                      <h1 class="title content" id="closeText" style="display: none;">You can close this window now</h1>\n                    </div>\n                    <script\n                      src="https://scripts.toruswallet.io/broadcastChannel_5_0_2.js"\n                      integrity="Bu0bRAeSlh2jpBuUxKk5ivkdotaHH37cQ2XiV20EmFJmghb41D0f8xME/M1WZxFC"\n                    ><\/script>\n                    <script>\n                      function storageAvailable(type) {\n                        var storage;\n                        try {\n                          storage = window[type];\n                          var x = "__storage_test__";\n                          storage.setItem(x, x);\n                          storage.removeItem(x);\n                          return true;\n                        } catch (e) {\n                          return (\n                            e &&\n                            // everything except Firefox\n                            (e.code === 22 ||\n                              // Firefox\n                              e.code === 1014 ||\n                              // test name field too, because code might not be present\n                              // everything except Firefox\n                              e.name === "QuotaExceededError" ||\n                              // Firefox\n                              e.name === "NS_ERROR_DOM_QUOTA_REACHED") &&\n                            // acknowledge QuotaExceededError only if there\'s something already stored\n                            storage &&\n                            storage.length !== 0\n                          );\n                        }\n                      }\n                      function showCloseText() {\n                        var closeText = document.getElementById("closeText");\n                        var spinner = document.getElementById("spinner");\n                        if (closeText) {\n                          closeText.style.display = "block";\n                        }\n                        if (spinner) {\n                          spinner.style.display = "none";\n                        }\n                      }\n                      var isLocalStorageAvailable = storageAvailable("localStorage");\n                      var isSessionStorageAvailable = storageAvailable("sessionStorage");\n                      // set theme\n                      let theme = "light";\n                      if (isLocalStorageAvailable) {\n                        var torusTheme = localStorage.getItem("torus-theme");\n                        if (torusTheme) {\n                          theme = torusTheme.split("-")[0];\n                        }\n                      }\n\n                      if (theme === "dark") {\n                        document.querySelector("body").style.backgroundColor = "#24252A";\n                      }\n                      var bc;\n                      var broadcastChannelOptions = {\n                        // type: \'localstorage\', // (optional) enforce a type, oneOf[\'native\', \'idb\', \'localstorage\', \'node\'\n                        webWorkerSupport: false, // (optional) set this to false if you know that your channel will never be used in a WebWorker (increase performance)\n                      };\n                      var instanceParams = {};\n                      var preopenInstanceId = new URL(window.location.href).searchParams.get("preopenInstanceId");\n                      if (!preopenInstanceId) {\n                        document.getElementById("message").style.visibility = "visible";\n                        // in general oauth redirect\n                        try {\n                          var url = new URL(location.href);\n                          var hash = url.hash.substr(1);\n                          var hashParams = {};\n                          if (hash) {\n                            hashParams = hash.split("&").reduce(function (result, item) {\n                              var parts = item.split("=");\n                              result[parts[0]] = parts[1];\n                              return result;\n                            }, {});\n                          }\n                          var queryParams = {};\n                          for (var key of url.searchParams.keys()) {\n                            queryParams[key] = url.searchParams.get(key);\n                          }\n                          var error = "";\n                          try {\n                            if (Object.keys(hashParams).length > 0 && hashParams.state) {\n                              instanceParams = JSON.parse(window.atob(decodeURIComponent(decodeURIComponent(hashParams.state)))) || {};\n                              if (hashParams.error) error = hashParams.error;\n                            } else if (Object.keys(queryParams).length > 0 && queryParams.state) {\n                              instanceParams = JSON.parse(window.atob(decodeURIComponent(decodeURIComponent(queryParams.state)))) || {};\n                              if (queryParams.error) error = queryParams.error;\n                            }\n                          } catch (e) {\n                            console.error(e);\n                          }\n                          if (instanceParams.redirectToOpener) {\n                            // communicate to window.opener\n                            window.opener.postMessage(\n                              {\n                                channel: "redirect_channel_" + instanceParams.instanceId,\n                                data: {\n                                  instanceParams: instanceParams,\n                                  hashParams: hashParams,\n                                  queryParams: queryParams,\n                                },\n                                error: error,\n                              },\n                              "http://localhost:3000"\n                            );\n                          } else {\n                            // communicate via broadcast channel\n                            bc = new broadcastChannelLib.BroadcastChannel("redirect_channel_" + instanceParams.instanceId, broadcastChannelOptions);\n                            bc.addEventListener("message", function (ev) {\n                              if (ev.success) {\n                                bc.close();\n                                console.log("posted", {\n                                  queryParams,\n                                  instanceParams,\n                                  hashParams,\n                                });\n                              } else {\n                                window.close();\n                                showCloseText();\n                              }\n                            });\n                            bc.postMessage({\n                              data: {\n                                instanceParams: instanceParams,\n                                hashParams: hashParams,\n                                queryParams: queryParams,\n                              },\n                              error: error,\n                            }).then(function () {\n                              setTimeout(function () {\n                                window.location.href = url.origin + location.search + location.hash;\n                              }, 5000);\n                            });\n                          }\n                        } catch (err) {\n                          console.error(err, "service worker error in redirect");\n                          bc && bc.close();\n                          window.close();\n                          showCloseText();\n                        }\n                      } else {\n                        // in preopen, awaiting redirect\n                        try {\n                          bc = new broadcastChannelLib.BroadcastChannel("preopen_channel_" + preopenInstanceId, broadcastChannelOptions);\n                          bc.onmessage = function (ev) {\n                            var { preopenInstanceId: oldId, payload, message } = ev.data;\n                            if (oldId === preopenInstanceId && payload && payload.url) {\n                              window.location.href = payload.url;\n                            } else if (oldId === preopenInstanceId && message === "setup_complete") {\n                              bc.postMessage({\n                                data: {\n                                  preopenInstanceId: preopenInstanceId,\n                                  message: "popup_loaded",\n                                },\n                              });\n                            }\n                            if (ev.error && ev.error !== "") {\n                              console.error(ev.error);\n                              bc.close();\n                            }\n                          };\n                        } catch (err) {\n                          console.error(err, "service worker error in preopen");\n                          bc && bc.close();\n                          window.close();\n                          showCloseText();\n                        }\n                      }\n                    <\/script>\n                  </body>\n                </html>\n\n                ${""}\n                  `,\n            ],\n            { type: "text/html" }\n          )\n        )\n      );\n    }\n  } catch (error) {\n    console.log("Hello");\n    console.error(error);\n  }\n});\n'})})}function s(e={}){const{wrapper:n}={...(0,t.a)(),...e.components};return n?(0,i.jsx)(n,{...e,children:(0,i.jsx)(a,{...e})}):a(e)}},10279:(e,n,r)=>{r.r(n),r.d(n,{assets:()=>h,contentTitle:()=>d,default:()=>p,frontMatter:()=>l,metadata:()=>c,toc:()=>u});var i=r(85893),t=r(11151),a=r(19828),s=r(85162),o=r(74866);const l={title:"Authentication in MPC Core Kit Web SDK",sidebar_label:"Authentication",displayed_sidebar:"sdk",description:"Web3Auth MPC Core Kit Web SDK - Authentication | Documentation - Web3Auth"},d=void 0,c={id:"sdk/core-kit/mpc-core-kit/authentication",title:"Authentication in MPC Core Kit Web SDK",description:"Web3Auth MPC Core Kit Web SDK - Authentication | Documentation - Web3Auth",source:"@site/docs/sdk/core-kit/mpc-core-kit/authentication.mdx",sourceDirName:"sdk/core-kit/mpc-core-kit",slug:"/sdk/core-kit/mpc-core-kit/authentication",permalink:"/docs/sdk/core-kit/mpc-core-kit/authentication",draft:!1,unlisted:!1,editUrl:"https://github.com/web3auth/web3auth-docs/edit/master/docs/sdk/core-kit/mpc-core-kit/authentication.mdx",tags:[],version:"current",frontMatter:{title:"Authentication in MPC Core Kit Web SDK",sidebar_label:"Authentication",displayed_sidebar:"sdk",description:"Web3Auth MPC Core Kit Web SDK - Authentication | Documentation - Web3Auth"},sidebar:"sdk",previous:{title:"Initialize",permalink:"/docs/sdk/core-kit/mpc-core-kit/initialize"},next:{title:"Usage",permalink:"/docs/sdk/core-kit/mpc-core-kit/usage"}},h={},u=[{value:"Creating a Verifier",id:"creating-a-verifier",level:2},{value:"Log In with OAuth (Intrinsic Flow)",id:"log-in-with-oauth-intrinsic-flow",level:2},{value:"<code>loginWithOauth(loginParams: OauthLoginParams): Promise&lt;void&gt;;</code>",id:"loginwithoauthloginparams-oauthloginparams-promisevoid",level:4},{value:"<code>OauthLoginParams</code>",id:"oauthloginparams",level:3},{value:"<code>SubVerifierDetails</code>",id:"subverifierdetails",level:4},{value:"<code>AggregateVerifierLoginParams</code>",id:"aggregateverifierloginparams",level:4},{value:"Usage",id:"usage",level:3},{value:"General Verifier",id:"general-verifier",level:3},{value:"Aggregate Verifier",id:"aggregate-verifier",level:3},{value:"Popup Mode",id:"popup-mode",level:3},{value:"Service Worker",id:"service-worker",level:4},{value:"Service Worker Setup",id:"service-worker-setup",level:4},{value:"Service Worker Code",id:"service-worker-code",level:4},{value:"Redirect Mode",id:"redirect-mode",level:3},{value:"Log In with JWT (IdToken Flow)",id:"log-in-with-jwt-idtoken-flow",level:2},{value:"<code>loginWithJWT(idTokenLoginParams: IdTokenLoginParams): Promise&lt;void&gt;;</code>",id:"loginwithjwtidtokenloginparams-idtokenloginparams-promisevoid",level:4},{value:"<code>IdTokenLoginParams</code>",id:"idtokenloginparams",level:3},{value:"Usage",id:"usage-1",level:3},{value:"General Verifier",id:"general-verifier-1",level:3},{value:"Aggregate Verifier",id:"aggregate-verifier-1",level:3},{value:"Logging out the User",id:"logging-out-the-user",level:2},{value:"<code>logout(): Promise&lt;void&gt;;</code>",id:"logout-promisevoid",level:4},{value:"Usage",id:"usage-2",level:4}];function g(e){const n={a:"a",admonition:"admonition",code:"code",h2:"h2",h3:"h3",h4:"h4",li:"li",p:"p",pre:"pre",strong:"strong",table:"table",tbody:"tbody",td:"td",th:"th",thead:"thead",tr:"tr",ul:"ul",...(0,t.a)(),...e.components},{Details:r}=n;return r||function(e,n){throw new Error("Expected "+(n?"component":"object")+" `"+e+"` to be defined: you likely forgot to import, pass, or provide it.")}("Details",!0),(0,i.jsxs)(i.Fragment,{children:[(0,i.jsxs)(n.p,{children:["There are two ways to login your users, depending on the type of authentication method you've chosen. If you are looking for an Intrinsic\nAuthentication Flow in your application (like Auth0 SPA Flow), you can use the ",(0,i.jsx)(n.code,{children:"loginWithOAuth()"})," function. If you are looking to pass a JWT based Id\nToken to the SDK from in your application (like Auth0 RWA Flow), you can use the ",(0,i.jsx)(n.code,{children:"loginWithJWT()"})," function."]}),"\n",(0,i.jsxs)(n.p,{children:["As a prerequisite, before triggering the login function, you need to create a verifier for your login method on the\n",(0,i.jsx)(n.a,{href:"https://dashboard.web3auth.io",children:"Web3Auth Dashboard"}),"."]}),"\n",(0,i.jsx)(n.h2,{id:"creating-a-verifier",children:"Creating a Verifier"}),"\n",(0,i.jsx)(n.p,{children:"Since this a Core Kit SDK, it does not provide any default authentication methods. You need to create a custom verifier in order to use this SDK. This\nmeans that you need to authenticate users with your own custom authentication service. For example, while authenticating with Google, you have to use\nyour own Google Client ID and Dashboard to authenticate users directly, or use aggregate services like Auth0, Firebase, AWS Cognito etc. Additionally,\nyou can make your own JWT token authentication system and pass over the ID Token to the Web3Auth to generate a private key for them."}),"\n",(0,i.jsxs)(n.p,{children:["For enabling this, you need ",(0,i.jsx)(n.a,{href:"/auth-provider-setup/verifiers",children:"Create a Verifier"})," from the ",(0,i.jsx)(n.strong,{children:"Custom Auth"})," section of the\n",(0,i.jsx)(n.a,{href:"https://dashboard.web3auth.io",children:"Web3Auth Developer Dashboard"})," with your desired configuration."]}),"\n",(0,i.jsx)(n.admonition,{type:"tip",children:(0,i.jsxs)(n.p,{children:["If you want to know more about setting up a verifier and how to use it, please refer to the\n",(0,i.jsx)(n.a,{href:"/pnp/features/custom-authentication",children:"Custom Authentication Documentation"}),"."]})}),"\n",(0,i.jsx)(n.admonition,{type:"warning",children:(0,i.jsx)(n.p,{children:"Core Kit SDK only supports Sapphire Mainnet and Devnet networks. The other networks don't support MPC functionalities."})}),"\n",(0,i.jsx)(n.h2,{id:"log-in-with-oauth-intrinsic-flow",children:"Log In with OAuth (Intrinsic Flow)"}),"\n",(0,i.jsx)(n.h4,{id:"loginwithoauthloginparams-oauthloginparams-promisevoid",children:(0,i.jsx)(n.code,{children:"loginWithOauth(loginParams: OauthLoginParams): Promise<void>;"})}),"\n",(0,i.jsxs)(n.table,{children:[(0,i.jsx)(n.thead,{children:(0,i.jsxs)(n.tr,{children:[(0,i.jsx)(n.th,{children:"Variable"}),(0,i.jsx)(n.th,{children:"Type"}),(0,i.jsx)(n.th,{children:"Description"}),(0,i.jsx)(n.th,{children:"Mandatory"})]})}),(0,i.jsx)(n.tbody,{children:(0,i.jsxs)(n.tr,{children:[(0,i.jsx)(n.td,{children:(0,i.jsx)(n.code,{children:"loginParams"})}),(0,i.jsx)(n.td,{children:(0,i.jsx)(n.code,{children:"object"})}),(0,i.jsx)(n.td,{children:"Login Parameters"}),(0,i.jsx)(n.td,{children:"Yes"})]})})]}),"\n",(0,i.jsx)(n.h3,{id:"oauthloginparams",children:(0,i.jsx)(n.code,{children:"OauthLoginParams"})}),"\n",(0,i.jsxs)(o.Z,{defaultValue:"table",values:[{label:"Table",value:"table"},{label:"Type",value:"type"}],children:[(0,i.jsx)(s.Z,{value:"table",children:(0,i.jsxs)(n.table,{children:[(0,i.jsx)(n.thead,{children:(0,i.jsxs)(n.tr,{children:[(0,i.jsx)(n.th,{children:"Parameter"}),(0,i.jsx)(n.th,{children:"Type"}),(0,i.jsx)(n.th,{children:"Description"}),(0,i.jsx)(n.th,{children:"Mandatory"})]})}),(0,i.jsxs)(n.tbody,{children:[(0,i.jsxs)(n.tr,{children:[(0,i.jsx)(n.td,{children:(0,i.jsx)(n.code,{children:"subVerifierDetails"})}),(0,i.jsx)(n.td,{children:(0,i.jsx)(n.code,{children:"SubVerifierDetails"})}),(0,i.jsx)(n.td,{children:'Details of the verifier the app needs to connect to. This is named a "sub verifier" to accommodate for aggregate verifiers as well.'}),(0,i.jsx)(n.td,{children:"Yes"})]}),(0,i.jsxs)(n.tr,{children:[(0,i.jsx)(n.td,{children:(0,i.jsx)(n.code,{children:"aggregateVerifierIdentifier?"})}),(0,i.jsx)(n.td,{children:(0,i.jsx)(n.code,{children:"string"})}),(0,i.jsx)(n.td,{children:"Identifier/ Name of the aggregate verifier you've made on the Web3Auth Dashboard. Not needed if you're connecting to a single verifier."}),(0,i.jsx)(n.td,{children:"No"})]}),(0,i.jsxs)(n.tr,{children:[(0,i.jsx)(n.td,{children:(0,i.jsx)(n.code,{children:"subVerifierDetailsArray?"})}),(0,i.jsx)(n.td,{children:(0,i.jsx)(n.code,{children:"SubVerifierDetails[]"})}),(0,i.jsx)(n.td,{children:"Array of the details of verifiers the app needs to connect to."}),(0,i.jsx)(n.td,{children:"No"})]})]})]})}),(0,i.jsx)(s.Z,{value:"type",children:(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-javascript",children:'export type OauthLoginParams = SubVerifierDetailsParams | AggregateVerifierLoginParams;\n\nexport interface SubVerifierDetailsParams extends BaseLoginParams {\n  subVerifierDetails: SubVerifierDetails;\n}\n\nexport interface AggregateVerifierLoginParams extends BaseLoginParams {\n  aggregateVerifierIdentifier?: string;\n  aggregateVerifierType?: AGGREGATE_VERIFIER_TYPE;\n  subVerifierDetailsArray?: SubVerifierDetails[];\n}\n\nexport interface BaseLoginParams {\n  // offset in seconds\n  serverTimeOffset?: number;\n}\n\nexport type AGGREGATE_VERIFIER_TYPE = (typeof AGGREGATE_VERIFIER)[keyof typeof AGGREGATE_VERIFIER];\n\nexport declare const AGGREGATE_VERIFIER: {\n    readonly SINGLE_VERIFIER_ID: "single_id_verifier";\n};\n'})})})]}),"\n",(0,i.jsx)(n.h4,{id:"subverifierdetails",children:(0,i.jsx)(n.code,{children:"SubVerifierDetails"})}),"\n",(0,i.jsx)(n.p,{children:"Contains the details of verifier the app needs to connect to. Use this in case of a single verifier."}),"\n",(0,i.jsxs)(o.Z,{defaultValue:"table",values:[{label:"Table",value:"table"},{label:"Interface",value:"interface"}],children:[(0,i.jsx)(s.Z,{value:"table",children:(0,i.jsxs)(n.table,{children:[(0,i.jsx)(n.thead,{children:(0,i.jsxs)(n.tr,{children:[(0,i.jsx)(n.th,{children:"Parameter"}),(0,i.jsx)(n.th,{children:"Type"}),(0,i.jsx)(n.th,{children:"Description"}),(0,i.jsx)(n.th,{children:"Mandatory"})]})}),(0,i.jsxs)(n.tbody,{children:[(0,i.jsxs)(n.tr,{children:[(0,i.jsx)(n.td,{children:"typeOfLogin"}),(0,i.jsx)(n.td,{children:(0,i.jsx)(n.code,{children:"TypeOfLogin"})}),(0,i.jsxs)(n.td,{children:["Type of login of this verifier, this value will affect the login flow that is adapted. For example, if you choose ",(0,i.jsx)(n.code,{children:"google"}),", a Google sign-in flow will be used. If you choose ",(0,i.jsx)(n.code,{children:"jwt"}),", you should be providing your own JWT token, no sign-in flow will be presented."]}),(0,i.jsx)(n.td,{children:"Yes"})]}),(0,i.jsxs)(n.tr,{children:[(0,i.jsx)(n.td,{children:(0,i.jsx)(n.code,{children:"verifier"})}),(0,i.jsx)(n.td,{children:(0,i.jsx)(n.code,{children:"string"})}),(0,i.jsx)(n.td,{children:"Name/ Identifier of the verifier/ sub verifier in case of aggregate verifiers, you'd like your app to connect to."}),(0,i.jsx)(n.td,{children:"Yes"})]}),(0,i.jsxs)(n.tr,{children:[(0,i.jsx)(n.td,{children:(0,i.jsx)(n.code,{children:"clientId"})}),(0,i.jsx)(n.td,{children:(0,i.jsx)(n.code,{children:"string"})}),(0,i.jsx)(n.td,{children:"Client Id given by the auth provider. Pass a random string in case you're connecting to a JWT based setup."}),(0,i.jsx)(n.td,{children:"Yes"})]})]})]})}),(0,i.jsx)(s.Z,{value:"interface",children:(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-javascript",children:'export interface SubVerifierDetails {\n    typeOfLogin: LOGIN_TYPE;\n    verifier: string;\n    clientId: string;\n    jwtParams?: Auth0ClientOptions;\n    hash?: string;\n    queryParameters?: TorusGenericObject;\n    customState?: TorusGenericObject;\n}\n\nexport type LOGIN_TYPE = (typeof LOGIN)[keyof typeof LOGIN];\n\nexport declare const LOGIN: {\n    readonly GOOGLE: "google";\n    readonly FACEBOOK: "facebook";\n    readonly REDDIT: "reddit";\n    readonly DISCORD: "discord";\n    readonly TWITCH: "twitch";\n    readonly APPLE: "apple";\n    readonly GITHUB: "github";\n    readonly LINKEDIN: "linkedin";\n    readonly TWITTER: "twitter";\n    readonly WEIBO: "weibo";\n    readonly LINE: "line";\n    readonly EMAIL_PASSWORD: "email_password";\n    readonly PASSWORDLESS: "passwordless";\n    readonly JWT: "jwt";\n    readonly WEBAUTHN: "webauthn";\n};\n'})})})]}),"\n",(0,i.jsx)(n.h4,{id:"aggregateverifierloginparams",children:(0,i.jsx)(n.code,{children:"AggregateVerifierLoginParams"})}),"\n",(0,i.jsx)(n.p,{children:"Contains the details of an aggregate verifier the app needs to connect to. Use this in case of an aggregate verifier."}),"\n",(0,i.jsxs)(o.Z,{defaultValue:"table",values:[{label:"Table",value:"table"},{label:"Interface",value:"interface"}],children:[(0,i.jsx)(s.Z,{value:"table",children:(0,i.jsxs)(n.table,{children:[(0,i.jsx)(n.thead,{children:(0,i.jsxs)(n.tr,{children:[(0,i.jsx)(n.th,{children:"Parameter"}),(0,i.jsx)(n.th,{children:"Type"}),(0,i.jsx)(n.th,{children:"Description"}),(0,i.jsx)(n.th,{children:"Mandatory"})]})}),(0,i.jsxs)(n.tbody,{children:[(0,i.jsxs)(n.tr,{children:[(0,i.jsx)(n.td,{children:(0,i.jsx)(n.code,{children:"aggregateVerifierIdentifier"})}),(0,i.jsx)(n.td,{children:(0,i.jsx)(n.code,{children:"string"})}),(0,i.jsx)(n.td,{children:"The name of your aggregate verifier"}),(0,i.jsx)(n.td,{children:"Yes"})]}),(0,i.jsxs)(n.tr,{children:[(0,i.jsx)(n.td,{children:(0,i.jsx)(n.code,{children:"subVerifierDetailsArray"})}),(0,i.jsx)(n.td,{children:(0,i.jsx)(n.code,{children:"SubVerifierDetails[]"})}),(0,i.jsx)(n.td,{children:"An array containing the details of your sub verifiers."}),(0,i.jsx)(n.td,{children:"Yes"})]}),(0,i.jsxs)(n.tr,{children:[(0,i.jsx)(n.td,{children:(0,i.jsx)(n.code,{children:"aggregateVerifierType?"})}),(0,i.jsx)(n.td,{children:(0,i.jsx)(n.code,{children:"AGGREGATE_VERIFIER_TYPE"})}),(0,i.jsxs)(n.td,{children:["What kind of aggregation is needed for your aggregate verifier. Use ",(0,i.jsx)(n.code,{children:'"single_id_verifier"'})," by default in most cases"]}),(0,i.jsx)(n.td,{children:"No"})]})]})]})}),(0,i.jsx)(s.Z,{value:"interface",children:(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-javascript",children:"export interface AggregateVerifierLoginParams extends BaseLoginParams {\n  aggregateVerifierIdentifier: string;\n  subVerifierDetailsArray: SubVerifierDetails[];\n  aggregateVerifierType?: AGGREGATE_VERIFIER_TYPE;\n}\nexport type AGGREGATE_VERIFIER_TYPE = (typeof AGGREGATE_VERIFIER)[keyof typeof AGGREGATE_VERIFIER];\n"})})})]}),"\n",(0,i.jsx)(n.h3,{id:"usage",children:"Usage"}),"\n",(0,i.jsx)(n.h3,{id:"general-verifier",children:"General Verifier"}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-tsx",children:'import { Web3AuthMPCCoreKit, SubVerifierDetailsParams } from "@web3auth/mpc-core-kit";\n\nconst verifierConfig = {\n  subVerifierDetails: {\n    typeOfLogin: "google",\n    verifier: "w3a-google-demo",\n    clientId: "519228911939-cri01h55lsjbsia1k7ll6qpalrus75ps.apps.googleusercontent.com",\n  },\n} as SubVerifierDetailsParams;\n\nawait coreKitInstance.loginWithOauth(verifierConfig);\n'})}),"\n",(0,i.jsx)(n.h3,{id:"aggregate-verifier",children:"Aggregate Verifier"}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-tsx",children:'import { Web3AuthMPCCoreKit, AggregateVerifierLoginParams } from "@web3auth/mpc-core-kit";\n\nconst verifierConfig = {\n  aggregateVerifierIdentifier: "aggregate-sapphire",\n  subVerifierDetailsArray: [\n    {\n      typeOfLogin: "google",\n      verifier: "w3a-google",\n      clientId: "774338308167-q463s7kpvja16l4l0kko3nb925ikds2p.apps.googleusercontent.com",\n    },\n  ],\n} as AggregateVerifierLoginParams;\n\nawait coreKitInstance.loginWithOauth(verifierConfig);\n'})}),"\n",(0,i.jsx)(n.h3,{id:"popup-mode",children:"Popup Mode"}),"\n",(0,i.jsx)(n.p,{children:"If you're using the popup mode (default) in your application, while logging in, you need to have a service worker running, which essential catches the\nlogin redirect and sends it back to the main DOM with the parameters. These parameters are then used to login the user with Web3Auth."}),"\n",(0,i.jsx)(n.h4,{id:"service-worker",children:"Service Worker"}),"\n",(0,i.jsxs)(n.p,{children:["A service worker is a script that is run by the browser. It does not have any direct relationship with the DOM and provides many out of the box\nnetwork-related features. Web3Auth Core Kit tKey SDK needs a service worker relative to ",(0,i.jsx)(n.code,{children:"baseUrl"})," to capture the auth redirect at ",(0,i.jsx)(n.code,{children:"redirectPathName"}),"\npath."]}),"\n",(0,i.jsxs)(n.p,{children:["For example, while using service worker if ",(0,i.jsx)(n.code,{children:"baseUrl"})," is ",(0,i.jsx)(n.code,{children:"http://localhost:3000/serviceworker"})," then user will be redirected to\n",(0,i.jsx)(n.code,{children:"http://localhost:3000/serviceworker/redirect"})," page after login where service worker will capture the results and send it back to original window\nwhere login was initiated."]}),"\n",(0,i.jsx)(n.admonition,{type:"tip",children:(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsxs)(n.li,{children:["\n",(0,i.jsx)(n.p,{children:"Using service worker is required only in the popup flow."}),"\n"]}),"\n",(0,i.jsxs)(n.li,{children:["\n",(0,i.jsxs)(n.p,{children:["Service worker is needed if you are using ",(0,i.jsx)(n.code,{children:"popup"})," uxMode within your MPC Core Kit Configuration."]}),"\n"]}),"\n",(0,i.jsxs)(n.li,{children:["\n",(0,i.jsxs)(n.p,{children:["For browsers where service workers are not supported, or in the case you wish to not use service workers, create and serve redirect page (i.e\n",(0,i.jsx)(n.code,{children:"redirect.html"})," file)."]}),"\n"]}),"\n"]})}),"\n",(0,i.jsx)(n.h4,{id:"service-worker-setup",children:"Service Worker Setup"}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsxs)(n.li,{children:["\n",(0,i.jsxs)(n.p,{children:["If you're using React, to setup service worker, you need to create a ",(0,i.jsx)(n.code,{children:"sw.js"})," file in your public folder and register it in your ",(0,i.jsx)(n.code,{children:"index.html"})," file.\nYou can find more information about it in ",(0,i.jsx)(n.a,{href:"https://blog.bitsrc.io/using-service-workers-with-react-27a4c5e2d1a9",children:"this blog"}),"."]}),"\n"]}),"\n",(0,i.jsxs)(n.li,{children:["\n",(0,i.jsxs)(n.p,{children:["For Angular, ",(0,i.jsx)(n.a,{href:"https://angular.io/guide/service-worker-getting-started",children:"this guide"})," will be helpful in setting up the service worker."]}),"\n"]}),"\n",(0,i.jsxs)(n.li,{children:["\n",(0,i.jsxs)(n.p,{children:["For Vue, ",(0,i.jsx)(n.a,{href:"https://www.360learntocode.com/2020/12/how-to-use-and-customize-service-worker-in-vuejs-pwa.html",children:"this guide"})," is a great way to get\nstarted with service workers."]}),"\n"]}),"\n"]}),"\n",(0,i.jsx)(n.h4,{id:"service-worker-code",children:"Service Worker Code"}),"\n",(0,i.jsxs)(n.p,{children:["You can directly copy the service worker file code from here and paste in your respective folder. You can also find the code in our\n",(0,i.jsx)(n.a,{href:"https://github.com/Web3Auth/web3auth-core-kit-examples/tree/main/mpc-core-kit-web/intrinsic-flow-examples/mpc-core-kit-popup-flow-example",children:"MPC Core Kit Example (Popup Flow)"}),"."]}),"\n",(0,i.jsxs)(r,{children:[(0,i.jsx)("summary",{children:"Service Worker Code"}),(0,i.jsx)(a.ZP,{})]}),"\n",(0,i.jsx)(n.h3,{id:"redirect-mode",children:"Redirect Mode"}),"\n",(0,i.jsxs)(n.p,{children:["If you are using the redirect mode, don't have to use service worker or ",(0,i.jsx)(n.code,{children:"redirect.html"})," file. You can get login result by calling ",(0,i.jsx)(n.code,{children:"init()"})," function on\nredirected page mount."]}),"\n",(0,i.jsxs)(n.p,{children:["For example, if ",(0,i.jsx)(n.code,{children:"baseUrl"})," is ",(0,i.jsx)(n.code,{children:"http://localhost:3000"})," and ",(0,i.jsx)(n.code,{children:"redirectPathName"})," is ",(0,i.jsx)(n.code,{children:"auth"})," then user will be redirected to ",(0,i.jsx)(n.code,{children:"http://localhost:3000/auth"}),"\npage after login where you can get login result by calling ",(0,i.jsx)(n.code,{children:"init()"})," function on redirected page mount."]}),"\n",(0,i.jsx)(n.h2,{id:"log-in-with-jwt-idtoken-flow",children:"Log In with JWT (IdToken Flow)"}),"\n",(0,i.jsx)(n.h4,{id:"loginwithjwtidtokenloginparams-idtokenloginparams-promisevoid",children:(0,i.jsx)(n.code,{children:"loginWithJWT(idTokenLoginParams: IdTokenLoginParams): Promise<void>;"})}),"\n",(0,i.jsxs)(n.table,{children:[(0,i.jsx)(n.thead,{children:(0,i.jsxs)(n.tr,{children:[(0,i.jsx)(n.th,{children:"Variable"}),(0,i.jsx)(n.th,{children:"Type"}),(0,i.jsx)(n.th,{children:"Description"}),(0,i.jsx)(n.th,{children:"Mandatory"})]})}),(0,i.jsx)(n.tbody,{children:(0,i.jsxs)(n.tr,{children:[(0,i.jsx)(n.td,{children:(0,i.jsx)(n.code,{children:"idTokenLoginParams"})}),(0,i.jsx)(n.td,{children:(0,i.jsx)(n.code,{children:"object"})}),(0,i.jsx)(n.td,{children:"Login Parameters"}),(0,i.jsx)(n.td,{children:"Yes"})]})})]}),"\n",(0,i.jsx)(n.h3,{id:"idtokenloginparams",children:(0,i.jsx)(n.code,{children:"IdTokenLoginParams"})}),"\n",(0,i.jsxs)(o.Z,{defaultValue:"table",values:[{label:"Table",value:"table"},{label:"Type",value:"type"}],children:[(0,i.jsx)(s.Z,{value:"table",children:(0,i.jsxs)(n.table,{children:[(0,i.jsx)(n.thead,{children:(0,i.jsxs)(n.tr,{children:[(0,i.jsx)(n.th,{children:"Parameter"}),(0,i.jsx)(n.th,{children:"Type"}),(0,i.jsx)(n.th,{children:"Mandatory"}),(0,i.jsx)(n.th,{children:"Description"})]})}),(0,i.jsxs)(n.tbody,{children:[(0,i.jsxs)(n.tr,{children:[(0,i.jsx)(n.td,{children:(0,i.jsx)(n.code,{children:"verifier"})}),(0,i.jsx)(n.td,{children:(0,i.jsx)(n.code,{children:"string"})}),(0,i.jsx)(n.td,{children:"Yes"}),(0,i.jsx)(n.td,{children:"Name of the verifier created on Web3Auth Dashboard. In case of Aggregate Verifier, the name of the top level aggregate verifier."})]}),(0,i.jsxs)(n.tr,{children:[(0,i.jsx)(n.td,{children:(0,i.jsx)(n.code,{children:"verifierId"})}),(0,i.jsx)(n.td,{children:(0,i.jsx)(n.code,{children:"string"})}),(0,i.jsx)(n.td,{children:"Yes"}),(0,i.jsx)(n.td,{children:'Unique Identifier for the User. The verifier identifier field set for the verifier/ sub verifier. E.g. "sub" field in your on jwt id token.'})]}),(0,i.jsxs)(n.tr,{children:[(0,i.jsx)(n.td,{children:(0,i.jsx)(n.code,{children:"idToken"})}),(0,i.jsx)(n.td,{children:(0,i.jsx)(n.code,{children:"string"})}),(0,i.jsx)(n.td,{children:"Yes"}),(0,i.jsx)(n.td,{children:"The idToken received from the Auth Provider."})]}),(0,i.jsxs)(n.tr,{children:[(0,i.jsx)(n.td,{children:(0,i.jsx)(n.code,{children:"subVerifier?"})}),(0,i.jsx)(n.td,{children:(0,i.jsx)(n.code,{children:"string"})}),(0,i.jsx)(n.td,{children:"No"}),(0,i.jsx)(n.td,{children:"Name of the sub verifier in case of aggregate verifier setup. This field is mandatory in case of an aggregate verifier."})]}),(0,i.jsxs)(n.tr,{children:[(0,i.jsx)(n.td,{children:(0,i.jsx)(n.code,{children:"extraVerifierParams?"})}),(0,i.jsx)(n.td,{children:(0,i.jsx)(n.code,{children:"WebAuthnExtraParams"})}),(0,i.jsx)(n.td,{children:"No"}),(0,i.jsx)(n.td,{children:"Extra verifier params in case of a WebAuthn verifier type."})]}),(0,i.jsxs)(n.tr,{children:[(0,i.jsx)(n.td,{children:(0,i.jsx)(n.code,{children:"additionalParams?"})}),(0,i.jsx)(n.td,{children:(0,i.jsx)(n.code,{children:"ExtraParams"})}),(0,i.jsx)(n.td,{children:"No"}),(0,i.jsx)(n.td,{children:"Any additional parameter (key value pair) you'd like to pass to the login function."})]})]})]})}),(0,i.jsx)(s.Z,{value:"type",children:(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-javascript",children:'export interface IdTokenLoginParams {\n  /**\n   * Name of the verifier created on Web3Auth Dashboard. In case of Aggregate Verifier, the name of the top level aggregate verifier.\n   */\n  verifier: string;\n\n  /**\n   * Unique Identifier for the User. The verifier identifier field set for the verifier/ sub verifier. E.g. "sub" field in your on jwt id token.\n   */\n  verifierId: string;\n\n  /**\n   * The idToken received from the Auth Provider.\n   */\n  idToken: string;\n\n  /**\n   * Name of the sub verifier in case of aggregate verifier setup. This field should only be provided in case of an aggregate verifier.\n   */\n  subVerifier?: string;\n\n  /**\n   * Extra verifier params in case of a WebAuthn verifier type.\n   */\n  extraVerifierParams?: WebAuthnExtraParams;\n\n  /**\n   * Any additional parameter (key value pair) you\'d like to pass to the login function.\n   */\n  additionalParams?: ExtraParams;\n}\n\nexport interface ExtraParams {\n  [key: string]: unknown;\n}\n\nexport type WebAuthnExtraParams = {\n  signature?: string,\n  clientDataJSON?: string,\n  authenticatorData?: string,\n  publicKey?: string,\n  challenge?: string,\n  rpOrigin?: string,\n  credId?: string,\n  transports?: AuthenticatorTransport[],\n};\n\ntype AuthenticatorTransport = "ble" | "hybrid" | "internal" | "nfc" | "usb";\n'})})})]}),"\n",(0,i.jsx)(n.h3,{id:"usage-1",children:"Usage"}),"\n",(0,i.jsx)(n.h3,{id:"general-verifier-1",children:"General Verifier"}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-tsx",children:'import { Web3AuthMPCCoreKit, idTokenLoginParams } from "@web3auth/mpc-core-kit";\n\nconst loginRes = await signInWithGoogle();\nconst idToken = await loginRes.user.getIdToken(true);\nconst parsedToken = parseToken(idToken);\n\nconst idTokenLoginParams = {\n  verifier: "w3a-firebase-demo",\n  verifierId: parsedToken.email,\n  idToken,\n} as IdTokenLoginParams;\n\nawait coreKitInstance.loginWithJWT(idTokenLoginParams);\n'})}),"\n",(0,i.jsx)(n.h3,{id:"aggregate-verifier-1",children:"Aggregate Verifier"}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-tsx",children:'import { Web3AuthMPCCoreKit, idTokenLoginParams } from "@web3auth/mpc-core-kit";\n\nconst loginRes = await signInWithGoogle();\nconst idToken = await loginRes.user.getIdToken(true);\nconst parsedToken = parseToken(idToken);\n\nconst idTokenLoginParams = {\n  verifier: "aggregate-sapphire"\n  subVerifier: "w3a-google",\n  verifierId: parsedToken.email,\n  idToken,\n} as IdTokenLoginParams;\n\nawait coreKitInstance.loginWithJWT(idTokenLoginParams);\n'})}),"\n",(0,i.jsx)(n.h2,{id:"logging-out-the-user",children:"Logging out the User"}),"\n",(0,i.jsx)(n.h4,{id:"logout-promisevoid",children:(0,i.jsx)(n.code,{children:"logout(): Promise<void>;"})}),"\n",(0,i.jsx)(n.p,{children:"Disconnect the user's connected wallet/ provider and log them out of the Web3Auth MPC Core Kit SDK."}),"\n",(0,i.jsx)(n.h4,{id:"usage-2",children:"Usage"}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-tsx",children:"await coreKitInstance.logout();\n"})})]})}function p(e={}){const{wrapper:n}={...(0,t.a)(),...e.components};return n?(0,i.jsx)(n,{...e,children:(0,i.jsx)(g,{...e})}):g(e)}},85162:(e,n,r)=>{r.d(n,{Z:()=>s});r(67294);var i=r(36905);const t={tabItem:"tabItem_Ymn6"};var a=r(85893);function s(e){let{children:n,hidden:r,className:s}=e;return(0,a.jsx)("div",{role:"tabpanel",className:(0,i.Z)(t.tabItem,s),hidden:r,children:n})}},74866:(e,n,r)=>{r.d(n,{Z:()=>w});var i=r(67294),t=r(36905),a=r(12466),s=r(16550),o=r(20469),l=r(91980),d=r(67392),c=r(50012);function h(e){return i.Children.toArray(e).filter((e=>"\n"!==e)).map((e=>{if(!e||(0,i.isValidElement)(e)&&function(e){const{props:n}=e;return!!n&&"object"==typeof n&&"value"in n}(e))return e;throw new Error(`Docusaurus error: Bad <Tabs> child <${"string"==typeof e.type?e.type:e.type.name}>: all children of the <Tabs> component should be <TabItem>, and every <TabItem> should have a unique "value" prop.`)}))?.filter(Boolean)??[]}function u(e){const{values:n,children:r}=e;return(0,i.useMemo)((()=>{const e=n??function(e){return h(e).map((e=>{let{props:{value:n,label:r,attributes:i,default:t}}=e;return{value:n,label:r,attributes:i,default:t}}))}(r);return function(e){const n=(0,d.l)(e,((e,n)=>e.value===n.value));if(n.length>0)throw new Error(`Docusaurus error: Duplicate values "${n.map((e=>e.value)).join(", ")}" found in <Tabs>. Every value needs to be unique.`)}(e),e}),[n,r])}function g(e){let{value:n,tabValues:r}=e;return r.some((e=>e.value===n))}function p(e){let{queryString:n=!1,groupId:r}=e;const t=(0,s.k6)(),a=function(e){let{queryString:n=!1,groupId:r}=e;if("string"==typeof n)return n;if(!1===n)return null;if(!0===n&&!r)throw new Error('Docusaurus error: The <Tabs> component groupId prop is required if queryString=true, because this value is used as the search param name. You can also provide an explicit value such as queryString="my-search-param".');return r??null}({queryString:n,groupId:r});return[(0,l._X)(a),(0,i.useCallback)((e=>{if(!a)return;const n=new URLSearchParams(t.location.search);n.set(a,e),t.replace({...t.location,search:n.toString()})}),[a,t])]}function f(e){const{defaultValue:n,queryString:r=!1,groupId:t}=e,a=u(e),[s,l]=(0,i.useState)((()=>function(e){let{defaultValue:n,tabValues:r}=e;if(0===r.length)throw new Error("Docusaurus error: the <Tabs> component requires at least one <TabItem> children component");if(n){if(!g({value:n,tabValues:r}))throw new Error(`Docusaurus error: The <Tabs> has a defaultValue "${n}" but none of its children has the corresponding value. Available values are: ${r.map((e=>e.value)).join(", ")}. If you intend to show no default tab, use defaultValue={null} instead.`);return n}const i=r.find((e=>e.default))??r[0];if(!i)throw new Error("Unexpected error: 0 tabValues");return i.value}({defaultValue:n,tabValues:a}))),[d,h]=p({queryString:r,groupId:t}),[f,x]=function(e){let{groupId:n}=e;const r=function(e){return e?`docusaurus.tab.${e}`:null}(n),[t,a]=(0,c.Nk)(r);return[t,(0,i.useCallback)((e=>{r&&a.set(e)}),[r,a])]}({groupId:t}),m=(()=>{const e=d??f;return g({value:e,tabValues:a})?e:null})();(0,o.Z)((()=>{m&&l(m)}),[m]);return{selectedValue:s,selectValue:(0,i.useCallback)((e=>{if(!g({value:e,tabValues:a}))throw new Error(`Can't select invalid tab value=${e}`);l(e),h(e),x(e)}),[h,x,a]),tabValues:a}}var x=r(72389);const m={tabList:"tabList__CuJ",tabItem:"tabItem_LNqP"};var v=r(85893);function j(e){let{className:n,block:r,selectedValue:i,selectValue:s,tabValues:o}=e;const l=[],{blockElementScrollPositionUntilNextRender:d}=(0,a.o5)(),c=e=>{const n=e.currentTarget,r=l.indexOf(n),t=o[r].value;t!==i&&(d(n),s(t))},h=e=>{let n=null;switch(e.key){case"Enter":c(e);break;case"ArrowRight":{const r=l.indexOf(e.currentTarget)+1;n=l[r]??l[0];break}case"ArrowLeft":{const r=l.indexOf(e.currentTarget)-1;n=l[r]??l[l.length-1];break}}n?.focus()};return(0,v.jsx)("ul",{role:"tablist","aria-orientation":"horizontal",className:(0,t.Z)("tabs",{"tabs--block":r},n),children:o.map((e=>{let{value:n,label:r,attributes:a}=e;return(0,v.jsx)("li",{role:"tab",tabIndex:i===n?0:-1,"aria-selected":i===n,ref:e=>l.push(e),onKeyDown:h,onClick:c,...a,className:(0,t.Z)("tabs__item",m.tabItem,a?.className,{"tabs__item--active":i===n}),children:r??n},n)}))})}function b(e){let{lazy:n,children:r,selectedValue:t}=e;const a=(Array.isArray(r)?r:[r]).filter(Boolean);if(n){const e=a.find((e=>e.props.value===t));return e?(0,i.cloneElement)(e,{className:"margin-top--md"}):null}return(0,v.jsx)("div",{className:"margin-top--md",children:a.map(((e,n)=>(0,i.cloneElement)(e,{key:n,hidden:e.props.value!==t})))})}function y(e){const n=f(e);return(0,v.jsxs)("div",{className:(0,t.Z)("tabs-container",m.tabList),children:[(0,v.jsx)(j,{...e,...n}),(0,v.jsx)(b,{...e,...n})]})}function w(e){const n=(0,x.Z)();return(0,v.jsx)(y,{...e,children:h(e.children)},String(n))}},11151:(e,n,r)=>{r.d(n,{Z:()=>o,a:()=>s});var i=r(67294);const t={},a=i.createContext(t);function s(e){const n=i.useContext(a);return i.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function o(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(t):e.components||t:s(e.components),i.createElement(a.Provider,{value:n},e.children)}}}]);