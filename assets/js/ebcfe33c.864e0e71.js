"use strict";(self.webpackChunkweb3auth_docs=self.webpackChunkweb3auth_docs||[]).push([[1755],{23693:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>h,contentTitle:()=>o,default:()=>u,frontMatter:()=>a,metadata:()=>c,toc:()=>d});var s=n(85893),r=n(11151),i=n(32165);const a={title:"Web3Auth MPC Core Kit Web SDK",displayed_sidebar:"sdk",description:"Web3Auth MPC Core Kit Web SDK | Documentation - Web3Auth"},o=void 0,c={id:"sdk/core-kit/mpc-core-kit/mpc-core-kit",title:"Web3Auth MPC Core Kit Web SDK",description:"Web3Auth MPC Core Kit Web SDK | Documentation - Web3Auth",source:"@site/docs/sdk/core-kit/mpc-core-kit/mpc-core-kit.mdx",sourceDirName:"sdk/core-kit/mpc-core-kit",slug:"/sdk/core-kit/mpc-core-kit/",permalink:"/docs/sdk/core-kit/mpc-core-kit/",draft:!1,unlisted:!1,editUrl:"https://github.com/web3auth/web3auth-docs/edit/master/docs/sdk/core-kit/mpc-core-kit/mpc-core-kit.mdx",tags:[],version:"current",frontMatter:{title:"Web3Auth MPC Core Kit Web SDK",displayed_sidebar:"sdk",description:"Web3Auth MPC Core Kit Web SDK | Documentation - Web3Auth"},sidebar:"sdk",previous:{title:"Common Provider",permalink:"/docs/sdk/helper-sdks/providers/common"},next:{title:"Install",permalink:"/docs/sdk/core-kit/mpc-core-kit/install"}},h={},d=[{value:"Requirements",id:"requirements",level:2},{value:"Web3Auth MPC Infrastructure Components",id:"web3auth-mpc-infrastructure-components",level:2},{value:"Factors",id:"factors",level:3},{value:"Social Login Factor",id:"social-login-factor",level:4},{value:"Device Factor (Index 2)",id:"device-factor-index-2",level:4},{value:"Backup Factor (Index 3)",id:"backup-factor-index-3",level:4},{value:"Threshold",id:"threshold",level:3},{value:"Components of a Factor",id:"components-of-a-factor",level:3},{value:"TSS Shares",id:"tss-shares",level:4},{value:"Metadata Key &amp; Shares",id:"metadata-key--shares",level:4},{value:"Factor Keys",id:"factor-keys",level:4},{value:"Understanding the MPC Core Kit SDK Flow",id:"understanding-the-mpc-core-kit-sdk-flow",level:2},{value:"Resources",id:"resources",level:2},{value:"Helper SDKs",id:"helper-sdks",level:2},{value:"Common Types and Interfaces",id:"common-types-and-interfaces",level:3},{value:"<code>@web3auth/base</code>",id:"web3authbase",level:4}];function l(e){const t={a:"a",admonition:"admonition",code:"code",h2:"h2",h3:"h3",h4:"h4",li:"li",p:"p",strong:"strong",ul:"ul",...(0,r.a)(),...e.components};return(0,s.jsxs)(s.Fragment,{children:[(0,s.jsxs)(t.p,{children:["Web3Auth's ",(0,s.jsx)(t.code,{children:"@web3auth/mpc-core-kit"})," SDK is a simple and easy to use SDK, which helps you implement the Web3Auth MPC Features, while giving you the\nflexibility to customize the UI and UX of the authentication process."]}),"\n",(0,s.jsx)(t.h2,{id:"requirements",children:"Requirements"}),"\n",(0,s.jsxs)(t.ul,{children:["\n",(0,s.jsx)(t.li,{children:"This is a frontend SDK and can only run in a browser environment"}),"\n",(0,s.jsx)(t.li,{children:"Basic knowledge of JavaScipt"}),"\n",(0,s.jsx)(t.li,{children:"Supports all major JavaScript Frameworks, Libraries and Bundlers"}),"\n"]}),"\n",(0,s.jsx)(t.admonition,{type:"note",children:(0,s.jsxs)(t.p,{children:["The minimum ",(0,s.jsx)(t.a,{href:"https://web3auth.io/pricing.html",children:"pricing plan"})," to use this SDK in a production environment is the ",(0,s.jsx)(t.strong,{children:"Enterprise Plan"}),". However, you can\nuse this SDK with all features enabled in the development environment for free."]})}),"\n",(0,s.jsx)(t.h2,{id:"web3auth-mpc-infrastructure-components",children:"Web3Auth MPC Infrastructure Components"}),"\n",(0,s.jsxs)(t.p,{children:["With the Web3Auth infrastructure, your key is divided into multiple parts and stored across your devices and our Auth Network. This ensures that your\nkey is always available and never stored in a single place. While in the traditional Web3Auth SDK, your key was dynamically reconstructed in the\nfrontend using threshold signatures, with the new Web3Auth MPC (Multi Party Computation) architecture, it is ",(0,s.jsx)(t.strong,{children:"never reconstructed"}),". Instead, these\npartial keys are stored across different locations, and your device is used to make partial signatures for your message/ transaction. These are\nfinally returned to the frontend where using TSS (Threshold Signature Scheme), these signatures are combined to make a final signature. You can use\nthis finally signed message/transaction to make a transaction on the blockchain."]}),"\n",(0,s.jsx)(t.p,{children:"The Threshold Signature Scheme (TSS) is a cryptographic primitive for distributed key generation and signing. The use of TSS in Web3Auth's Auth\nnetwork is a new paradigm that can provide numerous benefits, especially in terms of security."}),"\n",(0,s.jsx)("img",{style:{display:"block",margin:"20px auto"},src:i.Z,alt:"Web3Auth Wallet Management"}),"\n",(0,s.jsx)(t.p,{children:"As you can notice in this diagram above, the final output, i.e., the User's TSS Account, is generated in multiple stages within the infrastructure.\nSince this is a TSS- MPC based infrastructure, you don't get back a private key, but signatures that can be used to make transactions on the\nblockchain. Let's understand each of these stages in detail."}),"\n",(0,s.jsx)(t.h3,{id:"factors",children:"Factors"}),"\n",(0,s.jsx)(t.h4,{id:"social-login-factor",children:"Social Login Factor"}),"\n",(0,s.jsx)(t.p,{children:"This is the primary way for a user to access their account. This step involves authentication using a user's preferred social login provider. The\nidToken received from the social login provider here is passed to the Web3Auth Auth Network to generate the TSS Shares in the Nodes. By default, these\nnodes have a threshold of 3/5 that can be customized according to requirements. When a user logs in, the Auth Network generates signatures\ncorresponding to the TSS Shares in the nodes and returns them to the user's end. These signatures are then used alongside other shares to generate the\nfinal TSS Account signatures."}),"\n",(0,s.jsx)(t.h4,{id:"device-factor-index-2",children:"Device Factor (Index 2)"}),"\n",(0,s.jsx)(t.p,{children:"This is the second factor used to access the user's account. This step involves the generation of a TSS Share on the user's device and using that to\ngenerate a final signature for the TSS Account alongside the social login factor. This ensures the user logs in using their trusted device and\nmaintains a proper non-custodial setup."}),"\n",(0,s.jsx)(t.h4,{id:"backup-factor-index-3",children:"Backup Factor (Index 3)"}),"\n",(0,s.jsx)(t.p,{children:"A user has a choice to generate as many backup factors as needed to access their account. This step involves the generation of a TSS Share on the\nuser's end and storing them in whichever location they prefer. This share can be used similarly to the device share to generate a final signature for\nthe TSS Account alongside the social login and/or device factors."}),"\n",(0,s.jsx)(t.h3,{id:"threshold",children:"Threshold"}),"\n",(0,s.jsx)(t.p,{children:"The threshold is the minimum number of shares required to generate a final signature for the TSS Account. This threshold, by default, is set to 3/5 on\nthe Auth Network and 2/3 for the user's device front. This ensures high availability and ease of access on both ends alongside optimum security. Both\nthese thresholds can be customized according to the requirements."}),"\n",(0,s.jsx)(t.h3,{id:"components-of-a-factor",children:"Components of a Factor"}),"\n",(0,s.jsx)(t.h4,{id:"tss-shares",children:"TSS Shares"}),"\n",(0,s.jsxs)(t.p,{children:["The TSS Shares are the main component needed for the generation of the final working signature of the user. These shares are generated using\ndistributed key generation and are stored in the Auth Network and the user's device. Since these shares are generated using MPC, they are ",(0,s.jsx)(t.strong,{children:"never\nreconstructed"})," and always stay decentralized and secure."]}),"\n",(0,s.jsx)(t.p,{children:"However, we have exposed a function to reconstruct the TSS Key from the shares in the SDK. This function has been marked unsafe since there is no\ndirect use case for it other than key exports in the case the user wants to own it completely."}),"\n",(0,s.jsx)(t.h4,{id:"metadata-key--shares",children:"Metadata Key & Shares"}),"\n",(0,s.jsx)(t.p,{children:"The Metadata Key closely mimics the storage of the TSS Shares. The only difference is that the metadata key is always reconstructed and used for its\nencryption/decryption capabilities. It utilizes basic Shamir's Secret Sharing and is initially generated on a users' front end. The metadata key is\nutilised for the encryption/decryption of the user metadata stored in the Web3Auth Metadata Server."}),"\n",(0,s.jsxs)(t.p,{children:["One metadata share gives you the ",(0,s.jsx)(t.strong,{children:"read"})," access to the metadata server, while two or more (as the threshold is reached) give you the ",(0,s.jsx)(t.strong,{children:"write"}),"\naccess."]}),"\n",(0,s.jsx)(t.h4,{id:"factor-keys",children:"Factor Keys"}),"\n",(0,s.jsxs)(t.p,{children:["To enable refresh, deletion, and rotational capabilities on the ",(0,s.jsx)(t.code,{children:"tssKey"}),", we also introduce ",(0,s.jsx)(t.strong,{children:"factorKeys"}),". Factor Keys are randomly generated keys\nunique to each factor-generated user's device and backups, like users' phones, chrome extension, on their cloud, assisting third parties, etc."]}),"\n",(0,s.jsx)(t.p,{children:"As share to the TSS Key and/or Metadata Key may rotate, Factor Keys allow a consistent secret to being saved in these different locations."}),"\n",(0,s.jsx)(t.h2,{id:"understanding-the-mpc-core-kit-sdk-flow",children:"Understanding the MPC Core Kit SDK Flow"}),"\n",(0,s.jsx)(t.p,{children:"By default, for a new user, the MPC Core Kit SDK starts in a 2/2 flow. This means that the user will have to generate a social login factor and a\nhashed cloud factor. This hashed cloud factor is derived on the SDK front end and stored in the encrypted metadata server. This enables the user to\nstart the login process from any device without creating an MFA factor."}),"\n",(0,s.jsxs)(t.p,{children:["This is done to make sure the user can access their account from any device without having to generate a new factor. However, this makes the initial\nonboarding, semi-custodial. To make the onboarding completely non-custodial, the user can use the ",(0,s.jsx)(t.code,{children:"enableMfa"})," feature to generate a device and backup\nfactor and delete the hashed cloud factor. This makes the user's account completely non-custodial in 2/3 setup and enables them to access their\naccount from any device using the backup share. Device share is saved on trusted device and can be used to access the account from that device\nseamlessly without having to generate a new factor."]}),"\n",(0,s.jsx)(t.h2,{id:"resources",children:"Resources"}),"\n",(0,s.jsxs)(t.ul,{children:["\n",(0,s.jsxs)(t.li,{children:["\n",(0,s.jsxs)(t.p,{children:[(0,s.jsx)(t.a,{href:"/quick-start?product=CORE_KIT&sdk=MPC_CORE_KIT&framework=REACT&stepIndex=0",children:"Quick Start"}),": Get Started with an easy to follow integration of\nWeb3Auth"]}),"\n"]}),"\n",(0,s.jsxs)(t.li,{children:["\n",(0,s.jsxs)(t.p,{children:[(0,s.jsx)(t.a,{href:"/examples?product=Core+Kit&sdk=MPC+Core+Kit",children:"Example Applications"}),": Explore our example applications and try the SDK yourself."]}),"\n"]}),"\n",(0,s.jsxs)(t.li,{children:["\n",(0,s.jsxs)(t.p,{children:[(0,s.jsx)(t.a,{href:"/troubleshooting",children:"Troubleshooting"}),": Find quick solutions to common issues faced by developers."]}),"\n"]}),"\n",(0,s.jsxs)(t.li,{children:["\n",(0,s.jsxs)(t.p,{children:[(0,s.jsx)(t.a,{href:"https://github.com/web3auth/mpc-core-kit",children:"Source Code"}),": Web3Auth is open sourced. You can find the source code on our GitHub repository."]}),"\n"]}),"\n",(0,s.jsxs)(t.li,{children:["\n",(0,s.jsxs)(t.p,{children:[(0,s.jsx)(t.a,{href:"https://web3auth.io/community",children:"Community Support Portal"}),": Join our community to get support from our team and other developers."]}),"\n"]}),"\n"]}),"\n",(0,s.jsx)(t.h2,{id:"helper-sdks",children:"Helper SDKs"}),"\n",(0,s.jsx)(t.h3,{id:"common-types-and-interfaces",children:"Common Types and Interfaces"}),"\n",(0,s.jsx)(t.h4,{id:"web3authbase",children:(0,s.jsx)(t.a,{href:"https://npmjs.com/package/@web3auth/base",children:(0,s.jsx)(t.code,{children:"@web3auth/base"})})}),"\n",(0,s.jsx)(t.p,{children:"This package gives access to common types and interfaces for Web3Auth. This comes in handy by providing you with a standard way of importing the\nvalues you need to work with the SDKs. We highly recommend using it while working with Typescript."})]})}function u(e={}){const{wrapper:t}={...(0,r.a)(),...e.components};return t?(0,s.jsx)(t,{...e,children:(0,s.jsx)(l,{...e})}):l(e)}},32165:(e,t,n)=>{n.d(t,{Z:()=>s});const s=n.p+"assets/images/tkey-mpc-flow-e533ca27fe7b9edcc8bcdb3667bd2f80.png"},11151:(e,t,n)=>{n.d(t,{Z:()=>o,a:()=>a});var s=n(67294);const r={},i=s.createContext(r);function a(e){const t=s.useContext(i);return s.useMemo((function(){return"function"==typeof e?e(t):{...t,...e}}),[t,e])}function o(e){let t;return t=e.disableParentContext?"function"==typeof e.components?e.components(r):e.components||r:a(e.components),s.createElement(i.Provider,{value:t},e.children)}}}]);