"use strict";(self.webpackChunkweb3auth_docs=self.webpackChunkweb3auth_docs||[]).push([[26038],{43928:(e,n,o)=>{o.r(n),o.d(n,{assets:()=>l,contentTitle:()=>i,default:()=>h,frontMatter:()=>r,metadata:()=>d,toc:()=>c});var t=o(85893),a=o(11151);const r={title:"PnP Modal SDK - v6 to v7",displayed_sidebar:"docs",description:"PnP Modal SDK - v6 to v7 | Documentation - Web3Auth",sidebar_label:"v6 to v7"},i=void 0,d={id:"pnp/migration-guides/modal-v6-to-v7",title:"PnP Modal SDK - v6 to v7",description:"PnP Modal SDK - v6 to v7 | Documentation - Web3Auth",source:"@site/docs/pnp/migration-guides/modal-v6-to-v7.mdx",sourceDirName:"pnp/migration-guides",slug:"/pnp/migration-guides/modal-v6-to-v7",permalink:"/docs/pnp/migration-guides/modal-v6-to-v7",draft:!1,unlisted:!1,editUrl:"https://github.com/web3auth/web3auth-docs/edit/master/docs/pnp/migration-guides/modal-v6-to-v7.mdx",tags:[],version:"current",frontMatter:{title:"PnP Modal SDK - v6 to v7",displayed_sidebar:"docs",description:"PnP Modal SDK - v6 to v7 | Documentation - Web3Auth",sidebar_label:"v6 to v7"},sidebar:"docs",previous:{title:"v7 to v8",permalink:"/docs/pnp/migration-guides/modal-v7-to-v8"},next:{title:"v5 to v6",permalink:"/docs/pnp/migration-guides/modal-v5-to-v6"}},l={},c=[{value:"General",id:"general",level:2},{value:"<code>web3auth.connect()</code> now returns a provider of type <code>IProvider</code>",id:"web3authconnect-now-returns-a-provider-of-type-iprovider",level:3},{value:"The new provider object now works with the latest version of <code>web3.js</code>.",id:"the-new-provider-object-now-works-with-the-latest-version-of-web3js",level:4},{value:"<code>appLogo</code> is replaced by <code>logoLight</code> and <code>logoDark</code>",id:"applogo-is-replaced-by-logolight-and-logodark",level:3},{value:"<code>uiConfig</code> is in line with the <code>whitelabel</code> object in <code>OpenLoginAdapter</code>.",id:"uiconfig-is-in-line-with-the-whitelabel-object-in-openloginadapter",level:4},{value:"OpenLoginAdapter",id:"openloginadapter",level:2},{value:"Change in the naming of some whitelabel parameters for <code>OpenLoginAdapter</code>",id:"change-in-the-naming-of-some-whitelabel-parameters-for-openloginadapter",level:3},{value:"<code>name</code> and <code>url</code> are now <code>appName</code> and <code>appUrl</code>, respectively.",id:"name-and-url-are-now-appname-and-appurl-respectively",level:4},{value:"Light and dark mode is now toggled by the <code>mode</code> parameter instead of <code>dark</code>.",id:"light-and-dark-mode-is-now-toggled-by-the-mode-parameter-instead-of-dark",level:4},{value:"Other changes",id:"other-changes",level:2},{value:"Extra parameters for <code>solana-provider</code> and <code>xrpl-provider</code>",id:"extra-parameters-for-solana-provider-and-xrpl-provider",level:3},{value:"For Solana",id:"for-solana",level:4},{value:"For XRPL",id:"for-xrpl",level:4},{value:"<code>wallet-connect-v2-adapter</code> requires different parameters",id:"wallet-connect-v2-adapter-requires-different-parameters",level:3},{value:"With the deprecation of <code>@wallet-connect/qr-code-modal</code>, <code>wallet-connect-v2-adapter</code> now requires <code>@walletconnect/modal</code>.",id:"with-the-deprecation-of-wallet-connectqr-code-modal-wallet-connect-v2-adapter-now-requires-walletconnectmodal",level:4}];function s(e){const n={code:"code",h2:"h2",h3:"h3",h4:"h4",p:"p",pre:"pre",...(0,a.a)(),...e.components};return(0,t.jsxs)(t.Fragment,{children:[(0,t.jsx)(n.h2,{id:"general",children:"General"}),"\n",(0,t.jsxs)(n.h3,{id:"web3authconnect-now-returns-a-provider-of-type-iprovider",children:[(0,t.jsx)(n.code,{children:"web3auth.connect()"})," now returns a provider of type ",(0,t.jsx)(n.code,{children:"IProvider"})]}),"\n",(0,t.jsxs)(n.h4,{id:"the-new-provider-object-now-works-with-the-latest-version-of-web3js",children:["The new provider object now works with the latest version of ",(0,t.jsx)(n.code,{children:"web3.js"}),"."]}),"\n",(0,t.jsxs)(n.p,{children:["With V7, the ",(0,t.jsx)(n.code,{children:"connect()"})," method now returns a provider of type ",(0,t.jsx)(n.code,{children:"IProvider"})," which is a hard-coded provider, ensuring compatibility with the latest\nversion of web3.js. Previously, we had been using a proxy provider i.e. ",(0,t.jsx)(n.code,{children:"SafeEventEmitterProvider"})," which gave errors with the breaking changes that\ncame with web3.js v4. Remember, you can import the type ",(0,t.jsx)(n.code,{children:"IProvider"})," from the ",(0,t.jsx)(n.code,{children:"@web3auth/base"})," package."]}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-tsx",children:"// With V7\n// highlight-start\nconnect(): Promise<IProvider | null>;\n// highlight-end\n"})}),"\n",(0,t.jsxs)(n.h3,{id:"applogo-is-replaced-by-logolight-and-logodark",children:[(0,t.jsx)(n.code,{children:"appLogo"})," is replaced by ",(0,t.jsx)(n.code,{children:"logoLight"})," and ",(0,t.jsx)(n.code,{children:"logoDark"})]}),"\n",(0,t.jsxs)(n.h4,{id:"uiconfig-is-in-line-with-the-whitelabel-object-in-openloginadapter",children:[(0,t.jsx)(n.code,{children:"uiConfig"})," is in line with the ",(0,t.jsx)(n.code,{children:"whitelabel"})," object in ",(0,t.jsx)(n.code,{children:"OpenLoginAdapter"}),"."]}),"\n",(0,t.jsxs)(n.p,{children:["With v7, the ",(0,t.jsx)(n.code,{children:"uiConfig"})," object now accepts ",(0,t.jsx)(n.code,{children:"logoLight"})," and ",(0,t.jsx)(n.code,{children:"logoDark"})," instead of ",(0,t.jsx)(n.code,{children:"appLogo"}),". This is done to bring consistency to the naming\nconvention."]}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-tsx",children:'const web3auth = new Web3Auth({\n  clientId,\n  chainConfig: {\n    chainNamespace: CHAIN_NAMESPACES.EIP155,\n    chainId: "0x1",\n    rpcTarget: "https://rpc.ankr.com/eth", // This is the public RPC we have added, please pass on your own endpoint while creating an app\n  },\n  // uiConfig refers to the whitelabeling options, which is available only on Growth Plan and above\n  // Please remove this parameter if you\'re on the Base Plan\n  uiConfig: {\n    appName: "W3A",\n    theme: {\n      primary: "red",\n    },\n    mode: "dark",\n    // highlight-start\n    logoLight: "https://web3auth.io/images/web3auth-logo.svg",\n    logoDark: "https://web3auth.io/images/web3auth-logo---Dark.svg",\n    // highlight-end\n    defaultLanguage: "en", // en, de, ja, ko, zh, es, fr, pt, nl\n    loginGridCol: 3,\n    primaryButton: "externalLogin", // "externalLogin" | "socialLogin" | "emailLogin"\n  },\n  web3AuthNetwork: "sapphire_mainnet",\n});\n'})}),"\n",(0,t.jsx)(n.h2,{id:"openloginadapter",children:"OpenLoginAdapter"}),"\n",(0,t.jsxs)(n.h3,{id:"change-in-the-naming-of-some-whitelabel-parameters-for-openloginadapter",children:["Change in the naming of some whitelabel parameters for ",(0,t.jsx)(n.code,{children:"OpenLoginAdapter"})]}),"\n",(0,t.jsxs)(n.h4,{id:"name-and-url-are-now-appname-and-appurl-respectively",children:[(0,t.jsx)(n.code,{children:"name"})," and ",(0,t.jsx)(n.code,{children:"url"})," are now ",(0,t.jsx)(n.code,{children:"appName"})," and ",(0,t.jsx)(n.code,{children:"appUrl"}),", respectively."]}),"\n",(0,t.jsxs)(n.p,{children:["In ",(0,t.jsx)(n.code,{children:"adapterSettings"}),", the ",(0,t.jsx)(n.code,{children:"whitelabel"})," object now accepts ",(0,t.jsx)(n.code,{children:"appName"})," and ",(0,t.jsx)(n.code,{children:"appUrl"})," instead of ",(0,t.jsx)(n.code,{children:"name"})," and ",(0,t.jsx)(n.code,{children:"url"}),", respectively. This is done to bring\nconsistency to the naming convention."]}),"\n",(0,t.jsxs)(n.h4,{id:"light-and-dark-mode-is-now-toggled-by-the-mode-parameter-instead-of-dark",children:["Light and dark mode is now toggled by the ",(0,t.jsx)(n.code,{children:"mode"})," parameter instead of ",(0,t.jsx)(n.code,{children:"dark"}),"."]}),"\n",(0,t.jsxs)(n.p,{children:[(0,t.jsx)(n.code,{children:"mode"})," accepts a string from the following options: ",(0,t.jsx)(n.code,{children:"auto"}),", ",(0,t.jsx)(n.code,{children:"light"})," or ",(0,t.jsx)(n.code,{children:"dark"}),". This replaces the ",(0,t.jsx)(n.code,{children:"dark"})," boolean parameter from previous versions."]}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-tsx",children:'const openloginAdapter = new OpenloginAdapter({\n  adapterSettings: {\n    whiteLabel: {\n      // highlight-start\n      appName: "W3A Heroes",\n      appUrl: "https://web3auth.io",\n      // highlight-end\n      logoLight: "https://web3auth.io/images/web3auth-logo.svg",\n      logoDark: "https://web3auth.io/images/web3auth-logo---Dark.svg",\n      defaultLanguage: "en", // en, de, ja, ko, zh, es, fr, pt, nl\n      // highlight-next-line\n      mode: "auto", // whether to enable dark mode. defaultValue: false\n      theme: {\n        primary: "#768729",\n      },\n      useLogoLoader: true,\n    },\n  },\n  privateKeyProvider,\n});\n'})}),"\n",(0,t.jsx)(n.h2,{id:"other-changes",children:"Other changes"}),"\n",(0,t.jsxs)(n.h3,{id:"extra-parameters-for-solana-provider-and-xrpl-provider",children:["Extra parameters for ",(0,t.jsx)(n.code,{children:"solana-provider"})," and ",(0,t.jsx)(n.code,{children:"xrpl-provider"})]}),"\n",(0,t.jsx)(n.h4,{id:"for-solana",children:"For Solana"}),"\n",(0,t.jsxs)(n.p,{children:['For Solana, SolanaWallet in package "@web3auth/solana-provider", the request typings require both input and output now use ',(0,t.jsx)(n.code,{children:"string[]"})," when input\nplaceholder is needed"]}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-tsx",children:'// With V7\nconst connectionConfig = await solanaWallet.request<string[], CustomChainConfig>({\n  method: "solana_provider_config",\n  params: [],\n});\nconst conn = new Connection(connectionConfig.rpcTarget);\n'})}),"\n",(0,t.jsx)(n.h4,{id:"for-xrpl",children:"For XRPL"}),"\n",(0,t.jsxs)(n.p,{children:['For XRPL, after the change of "@web3auth/xrpl-provider" version to v7, the request typings require both input and output now so use ',(0,t.jsx)(n.code,{children:"never"})," when input\nor output placeholder is needed"]}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-tsx",children:'// With V7\nconst txSign = await this.provider.request<{ signature: string }, never>({\n  method: "xrpl_signMessage",\n  params: {\n    signature: hexMsg,\n  },\n});\n\nconst accounts = await this.provider.request<never, string[]>({\n  method: "xrpl_getAccounts",\n});\n'})}),"\n",(0,t.jsxs)(n.h3,{id:"wallet-connect-v2-adapter-requires-different-parameters",children:[(0,t.jsx)(n.code,{children:"wallet-connect-v2-adapter"})," requires different parameters"]}),"\n",(0,t.jsxs)(n.h4,{id:"with-the-deprecation-of-wallet-connectqr-code-modal-wallet-connect-v2-adapter-now-requires-walletconnectmodal",children:["With the deprecation of ",(0,t.jsx)(n.code,{children:"@wallet-connect/qr-code-modal"}),", ",(0,t.jsx)(n.code,{children:"wallet-connect-v2-adapter"})," now requires ",(0,t.jsx)(n.code,{children:"@walletconnect/modal"}),"."]}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-tsx",children:'import { WalletConnectModal } from "@walletconnect/modal";\nimport { getWalletConnectV2Settings, WalletConnectV2Adapter } from "@web3auth/wallet-connect-v2-adapter";\n\nconst defaultWcSettings = await getWalletConnectV2Settings("eip155", [1], "04309ed1007e77d1f119b85205bb779d");\nconst walletConnectModal = new WalletConnectModal({ projectId: "04309ed1007e77d1f119b85205bb779d" });\nconst walletConnectV2Adapter = new WalletConnectV2Adapter({\n  adapterSettings: { qrcodeModal: walletConnectModal, ...defaultWcSettings.adapterSettings },\n  loginSettings: { ...defaultWcSettings.loginSettings },\n});\n'})})]})}function h(e={}){const{wrapper:n}={...(0,a.a)(),...e.components};return n?(0,t.jsx)(n,{...e,children:(0,t.jsx)(s,{...e})}):s(e)}},11151:(e,n,o)=>{o.d(n,{Z:()=>d,a:()=>i});var t=o(67294);const a={},r=t.createContext(a);function i(e){const n=t.useContext(r);return t.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function d(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(a):e.components||a:i(e.components),t.createElement(r.Provider,{value:n},e.children)}}}]);