"use strict";(self.webpackChunkweb3auth_docs=self.webpackChunkweb3auth_docs||[]).push([[7511],{18786:(e,n,t)=>{t.d(n,{ZP:()=>i});var a=t(85893),r=t(11151);function s(e){const n={code:"code",p:"p",pre:"pre",...(0,r.a)(),...e.components};return(0,a.jsxs)(a.Fragment,{children:[(0,a.jsx)(n.p,{children:"After logging in, the Web3Auth instance will provide you with information regarding the user that is logged in. This information is obtained directly\nfrom the JWT token and is not stored by Web3Auth. Therefore, this information can only be accessed through social logins after the user has logged\ninto your application."}),"\n",(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-tsx",children:"const user = await web3auth.getUserInfo(); // web3auth instance\n"})})]})}function i(e={}){const{wrapper:n}={...(0,r.a)(),...e.components};return n?(0,a.jsx)(n,{...e,children:(0,a.jsx)(s,{...e})}):s(e)}},83614:(e,n,t)=>{t.d(n,{ZP:()=>c});var a=t(85893),r=t(11151),s=t(74866),i=t(85162);function o(e){const n={code:"code",pre:"pre",...(0,r.a)(),...e.components};return(0,a.jsxs)(s.Z,{defaultValue:"modal",values:[{label:"PnP Modal SDK",value:"modal"},{label:"PnP NoModal SDK",value:"no-modal"},{label:"CoreKit SFA Web SDK",value:"sfa"},{label:"CoreKit MFA tKey JS SDK",value:"tkey"}],children:[(0,a.jsx)(i.Z,{value:"modal",children:(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-tsx",children:'import { Web3Auth } from "@web3auth/modal";\nimport { EthereumPrivateKeyProvider } from "@web3auth/ethereum-provider";\nimport { WEB3AUTH_NETWORK } from "@web3auth/base";\n\nconst privateKeyProvider = new EthereumPrivateKeyProvider({\n  config: { chainConfig: chainConfig }\n});\n\nconst web3auth = new Web3Auth({\n  // Get it from Web3Auth Dashboard\n  clientId,\n  web3AuthNetwork: WEB3AUTH_NETWORK.SAPPHIRE_MAINNET,\n  privateKeyProvider: privateKeyProvider,\n});\n'})})}),(0,a.jsx)(i.Z,{value:"no-modal",children:(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-tsx",children:'import { Web3AuthNoModal } from "@web3auth/no-modal";\nimport { OpenloginAdapter } from "@web3auth/openlogin-adapter";\nimport { EthereumPrivateKeyProvider } from "@web3auth/ethereum-provider";\nimport { WEB3AUTH_NETWORK } from "@web3auth/base";\n\nconst privateKeyProvider = new EthereumPrivateKeyProvider({\n  config: {chainConfig},\n});\n\nconst web3auth = new Web3AuthNoModal({\n  clientId, // Get it from Web3Auth Dashboard\n  web3AuthNetwork: WEB3AUTH_NETWORK.SAPPHIRE_MAINNET,\n});\n\nconst openloginAdapter = new OpenloginAdapter();\nweb3auth.configureAdapter(openloginAdapter);\n'})})}),(0,a.jsx)(i.Z,{value:"sfa",children:(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-tsx",children:'import { Web3Auth } from "@web3auth/single-factor-auth";\nimport { EthereumPrivateKeyProvider } from "@web3auth/ethereum-provider";\n\nconst web3auth = new Web3Auth({\n  clientId, // Get your Client ID from Web3Auth Dashboard\n  web3AuthNetwork: "sapphire_mainnet",\n});\n\nconst privateKeyProvider = new EthereumPrivateKeyProvider({\n  config: { chainConfig },\n});\n'})})}),(0,a.jsx)(i.Z,{value:"tkey",children:(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-tsx",children:'import { SfaServiceProvider } from "@tkey/service-provider-sfa";\nimport { EthereumPrivateKeyProvider } from "@web3auth/ethereum-provider";\n\n// Initialization of private key provider\nconst privateKeyProvider = new EthereumPrivateKeyProvider({\n  config: {\n    chainConfig,\n  },\n});\n\nawait (tKey.serviceProvider as SfaServiceProvider).init(privateKeyProvider);\n'})})})]})}function c(e={}){const{wrapper:n}={...(0,r.a)(),...e.components};return n?(0,a.jsx)(n,{...e,children:(0,a.jsx)(o,{...e})}):o(e)}},67680:(e,n,t)=>{t.d(n,{ZP:()=>c});var a=t(85893),r=t(11151),s=t(85162),i=t(74866);function o(e){const n={code:"code",pre:"pre",...(0,r.a)(),...e.components};return(0,a.jsxs)(i.Z,{defaultValue:"web3",values:[{label:"web3.js",value:"web3"},{label:"ethers.js",value:"ethers"}],children:[(0,a.jsx)(s.Z,{value:"web3",children:(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-tsx",children:'/*\n  Use code from the above Initializing Provider here\n*/\n\n// web3 is const web3 = new Web3(web3authProvider); from above.\n\nconst contractABI = [\n  { inputs: [{ internalType: "string", name: "initMessage", type: "string" }], stateMutability: "nonpayable", type: "constructor" },\n  { inputs: [], name: "message", outputs: [{ internalType: "string", name: "", type: "string" }], stateMutability: "view", type: "function" },\n  {\n    inputs: [{ internalType: "string", name: "newMessage", type: "string" }],\n    name: "update",\n    outputs: [],\n    stateMutability: "nonpayable",\n    type: "function",\n  },\n];\nconst contractByteCode =\n  "60806040523480156200001157600080fd5b5060405162000bee38038062000bee8339818101604052810190620000379190620001e3565b80600090816200004891906200047f565b505062000566565b6000604051905090565b600080fd5b600080fd5b600080fd5b600080fd5b6000601f19601f8301169050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b620000b9826200006e565b810181811067ffffffffffffffff82111715620000db57620000da6200007f565b5b80604052505050565b6000620000f062000050565b9050620000fe8282620000ae565b919050565b600067ffffffffffffffff8211156200012157620001206200007f565b5b6200012c826200006e565b9050602081019050919050565b60005b83811015620001595780820151818401526020810190506200013c565b60008484015250505050565b60006200017c620001768462000103565b620000e4565b9050828152602081018484840111156200019b576200019a62000069565b5b620001a884828562000139565b509392505050565b600082601f830112620001c857620001c762000064565b5b8151620001da84826020860162000165565b91505092915050565b600060208284031215620001fc57620001fb6200005a565b5b600082015167ffffffffffffffff8111156200021d576200021c6200005f565b5b6200022b84828501620001b0565b91505092915050565b600081519050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602260045260246000fd5b600060028204905060018216806200028757607f821691505b6020821081036200029d576200029c6200023f565b5b50919050565b60008190508160005260206000209050919050565b60006020601f8301049050919050565b600082821b905092915050565b600060088302620003077fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff82620002c8565b620003138683620002c8565b95508019841693508086168417925050509392505050565b6000819050919050565b6000819050919050565b6000620003606200035a62000354846200032b565b62000335565b6200032b565b9050919050565b6000819050919050565b6200037c836200033f565b620003946200038b8262000367565b848454620002d5565b825550505050565b600090565b620003ab6200039c565b620003b881848462000371565b505050565b5b81811015620003e057620003d4600082620003a1565b600181019050620003be565b5050565b601f8211156200042f57620003f981620002a3565b6200040484620002b8565b8101602085101562000414578190505b6200042c6200042385620002b8565b830182620003bd565b50505b505050565b600082821c905092915050565b6000620004546000198460080262000434565b1980831691505092915050565b60006200046f838362000441565b9150826002028217905092915050565b6200048a8262000234565b67ffffffffffffffff811115620004a657620004a56200007f565b5b620004b282546200026e565b620004bf828285620003e4565b600060209050601f831160018114620004f75760008415620004e2578287015190505b620004ee858262000461565b8655506200055e565b601f1984166200050786620002a3565b60005b8281101562000531578489015182556001820191506020850194506020810190506200050a565b868310156200055157848901516200054d601f89168262000441565b8355505b6001600288020188555050505b505050505050565b61067880620005766000396000f3fe608060405234801561001057600080fd5b50600436106100365760003560e01c80633d7403a31461003b578063e21f37ce14610057575b600080fd5b61005560048036038101906100509190610270565b610075565b005b61005f610088565b60405161006c9190610338565b60405180910390f35b80600090816100849190610570565b5050565b6000805461009590610389565b80601f01602080910402602001604051908101604052809291908181526020018280546100c190610389565b801561010e5780601f106100e35761010080835404028352916020019161010e565b820191906000526020600020905b8154815290600101906020018083116100f157829003601f168201915b505050505081565b6000604051905090565b600080fd5b600080fd5b600080fd5b600080fd5b6000601f19601f8301169050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b61017d82610134565b810181811067ffffffffffffffff8211171561019c5761019b610145565b5b80604052505050565b60006101af610116565b90506101bb8282610174565b919050565b600067ffffffffffffffff8211156101db576101da610145565b5b6101e482610134565b9050602081019050919050565b82818337600083830152505050565b600061021361020e846101c0565b6101a5565b90508281526020810184848401111561022f5761022e61012f565b5b61023a8482856101f1565b509392505050565b600082601f8301126102575761025661012a565b5b8135610267848260208601610200565b91505092915050565b60006020828403121561028657610285610120565b5b600082013567ffffffffffffffff8111156102a4576102a3610125565b5b6102b084828501610242565b91505092915050565b600081519050919050565b600082825260208201905092915050565b60005b838110156102f35780820151818401526020810190506102d8565b60008484015250505050565b600061030a826102b9565b61031481856102c4565b93506103248185602086016102d5565b61032d81610134565b840191505092915050565b6000602082019050818103600083015261035281846102ff565b905092915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602260045260246000fd5b600060028204905060018216806103a157607f821691505b6020821081036103b4576103b361035a565b5b50919050565b60008190508160005260206000209050919050565b60006020601f8301049050919050565b600082821b905092915050565b60006008830261041c7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff826103df565b61042686836103df565b95508019841693508086168417925050509392505050565b6000819050919050565b6000819050919050565b600061046d6104686104638461043e565b610448565b61043e565b9050919050565b6000819050919050565b61048783610452565b61049b61049382610474565b8484546103ec565b825550505050565b600090565b6104b06104a3565b6104bb81848461047e565b505050565b5b818110156104df576104d46000826104a8565b6001810190506104c1565b5050565b601f821115610524576104f5816103ba565b6104fe846103cf565b8101602085101561050d578190505b610521610519856103cf565b8301826104c0565b50505b505050565b600082821c905092915050565b600061054760001984600802610529565b1980831691505092915050565b60006105608383610536565b9150826002028217905092915050565b610579826102b9565b67ffffffffffffffff81111561059257610591610145565b5b61059c8254610389565b6105a78282856104e3565b600060209050601f8311600181146105da57600084156105c8578287015190505b6105d28582610554565b86555061063a565b601f1984166105e8866103ba565b60005b82811015610610578489015182556001820191506020850194506020810190506105eb565b8683101561062d5784890151610629601f891682610536565b8355505b6001600288020188555050505b50505050505056fea2646970667358221220eecabaeaef849ff90aa73071525a5fa1972cd301476f7718a27010569d13051264736f6c63430008120033";\nconst contract = new web3.eth.Contract(JSON.parse(JSON.stringify(contractABI)));\n\n// Deploy contract with "Hello World!" in the constructor and wait to finish\nconst contractInstance = await contract\n  .deploy({\n    data: contractByteCode,\n    arguments: ["Hello World!"],\n  })\n  .send({\n    from: (await web3.eth.getAccounts())[0],\n  });\n'})})}),(0,a.jsx)(s.Z,{value:"ethers",children:(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-tsx",children:'/*\n  Use code from the above Initializing Provider here\n*/\n\n// provider is const provider = new ethers.providers.Web3Provider(web3authProvider); from above.\n\nconst signer = provider.getSigner();\n\nconst contractABI = [\n  { inputs: [{ internalType: "string", name: "initMessage", type: "string" }], stateMutability: "nonpayable", type: "constructor" },\n  { inputs: [], name: "message", outputs: [{ internalType: "string", name: "", type: "string" }], stateMutability: "view", type: "function" },\n  {\n    inputs: [{ internalType: "string", name: "newMessage", type: "string" }],\n    name: "update",\n    outputs: [],\n    stateMutability: "nonpayable",\n    type: "function",\n  },\n];\nconst contractByteCode =\n  "60806040523480156200001157600080fd5b5060405162000bee38038062000bee8339818101604052810190620000379190620001e3565b80600090816200004891906200047f565b505062000566565b6000604051905090565b600080fd5b600080fd5b600080fd5b600080fd5b6000601f19601f8301169050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b620000b9826200006e565b810181811067ffffffffffffffff82111715620000db57620000da6200007f565b5b80604052505050565b6000620000f062000050565b9050620000fe8282620000ae565b919050565b600067ffffffffffffffff8211156200012157620001206200007f565b5b6200012c826200006e565b9050602081019050919050565b60005b83811015620001595780820151818401526020810190506200013c565b60008484015250505050565b60006200017c620001768462000103565b620000e4565b9050828152602081018484840111156200019b576200019a62000069565b5b620001a884828562000139565b509392505050565b600082601f830112620001c857620001c762000064565b5b8151620001da84826020860162000165565b91505092915050565b600060208284031215620001fc57620001fb6200005a565b5b600082015167ffffffffffffffff8111156200021d576200021c6200005f565b5b6200022b84828501620001b0565b91505092915050565b600081519050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602260045260246000fd5b600060028204905060018216806200028757607f821691505b6020821081036200029d576200029c6200023f565b5b50919050565b60008190508160005260206000209050919050565b60006020601f8301049050919050565b600082821b905092915050565b600060088302620003077fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff82620002c8565b620003138683620002c8565b95508019841693508086168417925050509392505050565b6000819050919050565b6000819050919050565b6000620003606200035a62000354846200032b565b62000335565b6200032b565b9050919050565b6000819050919050565b6200037c836200033f565b620003946200038b8262000367565b848454620002d5565b825550505050565b600090565b620003ab6200039c565b620003b881848462000371565b505050565b5b81811015620003e057620003d4600082620003a1565b600181019050620003be565b5050565b601f8211156200042f57620003f981620002a3565b6200040484620002b8565b8101602085101562000414578190505b6200042c6200042385620002b8565b830182620003bd565b50505b505050565b600082821c905092915050565b6000620004546000198460080262000434565b1980831691505092915050565b60006200046f838362000441565b9150826002028217905092915050565b6200048a8262000234565b67ffffffffffffffff811115620004a657620004a56200007f565b5b620004b282546200026e565b620004bf828285620003e4565b600060209050601f831160018114620004f75760008415620004e2578287015190505b620004ee858262000461565b8655506200055e565b601f1984166200050786620002a3565b60005b8281101562000531578489015182556001820191506020850194506020810190506200050a565b868310156200055157848901516200054d601f89168262000441565b8355505b6001600288020188555050505b505050505050565b61067880620005766000396000f3fe608060405234801561001057600080fd5b50600436106100365760003560e01c80633d7403a31461003b578063e21f37ce14610057575b600080fd5b61005560048036038101906100509190610270565b610075565b005b61005f610088565b60405161006c9190610338565b60405180910390f35b80600090816100849190610570565b5050565b6000805461009590610389565b80601f01602080910402602001604051908101604052809291908181526020018280546100c190610389565b801561010e5780601f106100e35761010080835404028352916020019161010e565b820191906000526020600020905b8154815290600101906020018083116100f157829003601f168201915b505050505081565b6000604051905090565b600080fd5b600080fd5b600080fd5b600080fd5b6000601f19601f8301169050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b61017d82610134565b810181811067ffffffffffffffff8211171561019c5761019b610145565b5b80604052505050565b60006101af610116565b90506101bb8282610174565b919050565b600067ffffffffffffffff8211156101db576101da610145565b5b6101e482610134565b9050602081019050919050565b82818337600083830152505050565b600061021361020e846101c0565b6101a5565b90508281526020810184848401111561022f5761022e61012f565b5b61023a8482856101f1565b509392505050565b600082601f8301126102575761025661012a565b5b8135610267848260208601610200565b91505092915050565b60006020828403121561028657610285610120565b5b600082013567ffffffffffffffff8111156102a4576102a3610125565b5b6102b084828501610242565b91505092915050565b600081519050919050565b600082825260208201905092915050565b60005b838110156102f35780820151818401526020810190506102d8565b60008484015250505050565b600061030a826102b9565b61031481856102c4565b93506103248185602086016102d5565b61032d81610134565b840191505092915050565b6000602082019050818103600083015261035281846102ff565b905092915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602260045260246000fd5b600060028204905060018216806103a157607f821691505b6020821081036103b4576103b361035a565b5b50919050565b60008190508160005260206000209050919050565b60006020601f8301049050919050565b600082821b905092915050565b60006008830261041c7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff826103df565b61042686836103df565b95508019841693508086168417925050509392505050565b6000819050919050565b6000819050919050565b600061046d6104686104638461043e565b610448565b61043e565b9050919050565b6000819050919050565b61048783610452565b61049b61049382610474565b8484546103ec565b825550505050565b600090565b6104b06104a3565b6104bb81848461047e565b505050565b5b818110156104df576104d46000826104a8565b6001810190506104c1565b5050565b601f821115610524576104f5816103ba565b6104fe846103cf565b8101602085101561050d578190505b610521610519856103cf565b8301826104c0565b50505b505050565b600082821c905092915050565b600061054760001984600802610529565b1980831691505092915050565b60006105608383610536565b9150826002028217905092915050565b610579826102b9565b67ffffffffffffffff81111561059257610591610145565b5b61059c8254610389565b6105a78282856104e3565b600060209050601f8311600181146105da57600084156105c8578287015190505b6105d28582610554565b86555061063a565b601f1984166105e8866103ba565b60005b82811015610610578489015182556001820191506020850194506020810190506105eb565b8683101561062d5784890151610629601f891682610536565b8355505b6001600288020188555050505b50505050505056fea2646970667358221220eecabaeaef849ff90aa73071525a5fa1972cd301476f7718a27010569d13051264736f6c63430008120033";\n\nconst address = signer.getAddress();\n\nconst contractFactory = new ContractFactory(JSON.parse(JSON.stringify(contractABI), contractByteCode, address);\n// Deploy contract with "Hello World!" in the constructor\nconst contract = await contractFactory.deploy("Hello World!");\n\n// Wait for deployment to finish\nconst receipt = await contract.deployed();\n'})})})]})}function c(e={}){const{wrapper:n}={...(0,r.a)(),...e.components};return n?(0,a.jsx)(n,{...e,children:(0,a.jsx)(o,{...e})}):o(e)}},4925:(e,n,t)=>{t.d(n,{ZP:()=>c});var a=t(85893),r=t(11151),s=t(85162),i=t(74866);function o(e){const n={code:"code",pre:"pre",...(0,r.a)(),...e.components};return(0,a.jsxs)(i.Z,{defaultValue:"web3",values:[{label:"web3.js",value:"web3"},{label:"ethers.js",value:"ethers"}],children:[(0,a.jsx)(s.Z,{value:"web3",children:(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-tsx",children:'/*\n  Use code from the above Initializing Provider here\n*/\n\n// web3 is const web3 = new Web3(web3authProvider); from above.\n\nconst contractABI = [\n  { inputs: [{ internalType: "string", name: "initMessage", type: "string" }], stateMutability: "nonpayable", type: "constructor" },\n  { inputs: [], name: "message", outputs: [{ internalType: "string", name: "", type: "string" }], stateMutability: "view", type: "function" },\n  {\n    inputs: [{ internalType: "string", name: "newMessage", type: "string" }],\n    name: "update",\n    outputs: [],\n    stateMutability: "nonpayable",\n    type: "function",\n  },\n];\nconst contractAddress = "0x04cA407965D60C2B39d892a1DFB1d1d9C30d0334";\nconst contract = new web3.eth.Contract(JSON.parse(JSON.stringify(contractABI)), contractAddress);\n\n// Read message from smart contract\nconst message = await contract.methods.message().call();\n'})})}),(0,a.jsx)(s.Z,{value:"ethers",children:(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-tsx",children:'/*\n  Use code from the above Initializing Provider here\n*/\n\n// provider is const provider = new ethers.providers.Web3Provider(web3authProvider); from above.\n\nconst signer = await provider.getSigner();\n\nconst contractABI = [\n  { inputs: [{ internalType: "string", name: "initMessage", type: "string" }], stateMutability: "nonpayable", type: "constructor" },\n  { inputs: [], name: "message", outputs: [{ internalType: "string", name: "", type: "string" }], stateMutability: "view", type: "function" },\n  {\n    inputs: [{ internalType: "string", name: "newMessage", type: "string" }],\n    name: "update",\n    outputs: [],\n    stateMutability: "nonpayable",\n    type: "function",\n  },\n];\nconst contractAddress = "0x04cA407965D60C2B39d892a1DFB1d1d9C30d0334";\nconst contract = new ethers.Contract(contractAddress, JSON.parse(JSON.stringify(contractABI)), signer);\n\n// Read message from smart contract\nconst message = await contract.message();\n'})})})]})}function c(e={}){const{wrapper:n}={...(0,r.a)(),...e.components};return n?(0,a.jsx)(n,{...e,children:(0,a.jsx)(o,{...e})}):o(e)}},8671:(e,n,t)=>{t.d(n,{ZP:()=>c});var a=t(85893),r=t(11151),s=t(85162),i=t(74866);function o(e){const n={code:"code",pre:"pre",...(0,r.a)(),...e.components};return(0,a.jsxs)(i.Z,{defaultValue:"web3",values:[{label:"web3.js",value:"web3"},{label:"ethers.js",value:"ethers"}],children:[(0,a.jsx)(s.Z,{value:"web3",children:(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-tsx",children:'/*\n  Use code from the above Initializing Provider here\n*/\n\n// web3 is const web3 = new Web3(web3authProvider); from above.\n\nconst contractABI = [\n  { inputs: [{ internalType: "string", name: "initMessage", type: "string" }], stateMutability: "nonpayable", type: "constructor" },\n  { inputs: [], name: "message", outputs: [{ internalType: "string", name: "", type: "string" }], stateMutability: "view", type: "function" },\n  {\n    inputs: [{ internalType: "string", name: "newMessage", type: "string" }],\n    name: "update",\n    outputs: [],\n    stateMutability: "nonpayable",\n    type: "function",\n  },\n];\nconst contractAddress = "0x04cA407965D60C2B39d892a1DFB1d1d9C30d0334";\nconst contract = new web3.eth.Contract(JSON.parse(JSON.stringify(contractABI)), contractAddress);\n\n// Write message to smart contract\nconst receipt = await contract.methods.update("W3A").send({\n  from: (await web3.eth.getAccounts())[0],\n});\n'})})}),(0,a.jsx)(s.Z,{value:"ethers",children:(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-tsx",children:'/*\n  Use code from the above Initializing Provider here\n*/\n\n// provider is const provider = new ethers.providers.Web3Provider(web3authProvider); from above.\n\nconst signer = await provider.getSigner();\n\nconst contractABI = [\n  { inputs: [{ internalType: "string", name: "initMessage", type: "string" }], stateMutability: "nonpayable", type: "constructor" },\n  { inputs: [], name: "message", outputs: [{ internalType: "string", name: "", type: "string" }], stateMutability: "view", type: "function" },\n  {\n    inputs: [{ internalType: "string", name: "newMessage", type: "string" }],\n    name: "update",\n    outputs: [],\n    stateMutability: "nonpayable",\n    type: "function",\n  },\n];\nconst contractAddress = "0x04cA407965D60C2B39d892a1DFB1d1d9C30d0334";\nconst contract = new ethers.Contract(contractAddress, JSON.parse(JSON.stringify(contractABI)), signer);\n\n// Send transaction to smart contract to update message\nconst tx = await contract.update("NEW_MESSAGE");\n\n// Wait for transaction to finish\nconst receipt = await tx.wait();\n'})})})]})}function c(e={}){const{wrapper:n}={...(0,r.a)(),...e.components};return n?(0,a.jsx)(n,{...e,children:(0,a.jsx)(o,{...e})}):o(e)}},8210:(e,n,t)=>{t.d(n,{ZP:()=>i});var a=t(85893),r=t(11151);function s(e){const n={code:"code",h4:"h4",p:"p",pre:"pre",...(0,r.a)(),...e.components};return(0,a.jsxs)(a.Fragment,{children:[(0,a.jsx)(n.h4,{id:"solidity-contract",children:"Solidity Contract"}),"\n",(0,a.jsx)(n.p,{children:"In this example, we'll be demonstrating how to use Web3Auth with web3.js or ethers.js to interact with Solidity smart contracts. The simple Hello\nWorld contract allows anyone to read and write a message to it."}),"\n",(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-tsx",children:"// SPDX-License-Identifier: GPL-3.0\npragma solidity >=0.7.0 <0.9.0;\n\ncontract HelloWorld {\n\n  string public message;\n\n  constructor(string memory initMessage) {\n    message = initMessage;\n  }\n\n  function update(string memory newMessage) public {\n    message = newMessage;\n  }\n}\n"})})]})}function i(e={}){const{wrapper:n}={...(0,r.a)(),...e.components};return n?(0,a.jsx)(n,{...e,children:(0,a.jsx)(s,{...e})}):s(e)}},3747:(e,n,t)=>{t.d(n,{ZP:()=>i});var a=t(85893),r=t(11151);function s(e){const n={code:"code",p:"p",pre:"pre",...(0,r.a)(),...e.components};return(0,a.jsxs)(a.Fragment,{children:[(0,a.jsxs)(n.p,{children:[(0,a.jsx)(n.code,{children:"eth_private_key"})," is used to fetch the private key of the logged in user. It is only available for ",(0,a.jsx)(n.code,{children:"in-app"})," adapters like ",(0,a.jsx)(n.code,{children:"openlogin"}),"."]}),"\n",(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-tsx",children:'//Assuming user is already logged in.\nasync getPrivateKey() {\n  const privateKey = await web3auth.provider.request({\n    method: "eth_private_key"\n  });\n  //Do something with privateKey\n}\n'})})]})}function i(e={}){const{wrapper:n}={...(0,r.a)(),...e.components};return n?(0,a.jsx)(n,{...e,children:(0,a.jsx)(s,{...e})}):s(e)}},16979:(e,n,t)=>{t.d(n,{ZP:()=>c});var a=t(85893),r=t(11151),s=t(85162),i=t(74866);function o(e){const n={code:"code",pre:"pre",...(0,r.a)(),...e.components};return(0,a.jsxs)(i.Z,{defaultValue:"web3",values:[{label:"web3.js",value:"web3"},{label:"ethers.js",value:"ethers.js"}],children:[(0,a.jsx)(s.Z,{value:"web3",children:(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-tsx",children:"/*\n  Use code from the above Initializing Provider here\n*/\n\n// web3 is const web3 = new Web3(web3authProvider); from above.\n\n// Get user's Ethereum public address\nconst address = (await web3.eth.getAccounts())[0];\n\n// Get user's balance in ether\nconst balance = web3.utils.fromWei(\n  await web3.eth.getBalance(address), // Balance is in wei\n);\n"})})}),(0,a.jsx)(s.Z,{value:"ethers.js",children:(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-tsx",children:"/*\n  Use code from the above Initializing Provider here\n*/\n\n// provider is const provider = new ethers.providers.Web3Provider(web3authProvider); from above.\n\n// For ethers v5\n// const signer = ethersProvider.getSigner();\nconst signer = await ethersProvider.getSigner();\n\n// Get user's Ethereum public address\nconst address = signer.getAddress();\n\n// Get user's balance in ether\n// For ethers v5\n// const balance = ethers.utils.formatEther(\n// await ethersProvider.getBalance(address) // Balance is in wei\n// );\nconst balance = ethers.utils.formatEther(\n  await provider.getBalance(address), // Balance is in wei\n);\n"})})})]})}function c(e={}){const{wrapper:n}={...(0,r.a)(),...e.components};return n?(0,a.jsx)(n,{...e,children:(0,a.jsx)(o,{...e})}):o(e)}},68541:(e,n,t)=>{t.d(n,{ZP:()=>c});var a=t(85893),r=t(11151),s=t(85162),i=t(74866);function o(e){const n={code:"code",pre:"pre",...(0,r.a)(),...e.components};return(0,a.jsxs)(i.Z,{defaultValue:"web3",values:[{label:"web3.js",value:"web3"},{label:"ethers.js",value:"ethers"}],children:[(0,a.jsx)(s.Z,{value:"web3",children:(0,a.jsxs)(i.Z,{defaultValue:"npm",values:[{label:"npm",value:"npm"},{label:"yarn",value:"yarn"},{label:"CDN",value:"cdn"}],children:[(0,a.jsx)(s.Z,{value:"npm",children:(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-shell",children:"npm install --save web3\n"})})}),(0,a.jsx)(s.Z,{value:"yarn",children:(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-shell",children:"yarn add web3\n"})})}),(0,a.jsx)(s.Z,{value:"cdn",children:(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-shell",children:'<script src="https://cdn.jsdelivr.net/npm/web3@latest/dist/web3.min.js"><\/script>\n'})})})]})}),(0,a.jsx)(s.Z,{value:"ethers",children:(0,a.jsxs)(i.Z,{defaultValue:"npm",values:[{label:"npm",value:"npm"},{label:"yarn",value:"yarn"},{label:"CDN",value:"cdn"}],children:[(0,a.jsx)(s.Z,{value:"npm",children:(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-shell",children:"npm install --save ethers\n"})})}),(0,a.jsx)(s.Z,{value:"yarn",children:(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-shell",children:"yarn add ethers\n"})})}),(0,a.jsx)(s.Z,{value:"cdn",children:(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-shell",children:'<script src="https://cdn.ethers.io/scripts/ethers-v4.min.js"><\/script>\n'})})})]})})]})}function c(e={}){const{wrapper:n}={...(0,r.a)(),...e.components};return n?(0,a.jsx)(n,{...e,children:(0,a.jsx)(o,{...e})}):o(e)}},40709:(e,n,t)=>{t.d(n,{ZP:()=>c});var a=t(85893),r=t(11151),s=t(85162),i=t(74866);function o(e){const n={code:"code",pre:"pre",...(0,r.a)(),...e.components};return(0,a.jsxs)(i.Z,{defaultValue:"web3",values:[{label:"web3.js",value:"web3"},{label:"ethers.js",value:"ethers"}],children:[(0,a.jsx)(s.Z,{value:"web3",children:(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-tsx",children:'/*\n  Use code from the above Initializing Provider here\n*/\n\n// web3 is const web3 = new Web3(web3authProvider); from above.\n\n// Get user\'s Ethereum public address\nconst fromAddress = (await web3.eth.getAccounts())[0];\n\nconst destination = "0x7aFac68875d2841dc16F1730Fba43974060b907A";\nconst amount = web3.utils.toWei(1); // Convert 1 ether to wei\n\n// Submit transaction to the blockchain and wait for it to be mined\nconst receipt = await web3.eth.sendTransaction({\n  from: fromAddress,\n  to: destination,\n  value: amount,\n  maxPriorityFeePerGas: "5000000000", // Max priority fee per gas\n  maxFeePerGas: "6000000000000", // Max fee per gas\n});\n'})})}),(0,a.jsx)(s.Z,{value:"ethers",children:(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-tsx",children:'/*\n  Use code from the above Initializing Provider here\n*/\n\n// provider is const provider = new ethers.providers.Web3Provider(web3authProvider); from above.\n\nconst signer = await provider.getSigner();\n\nconst destination = "0x7aFac68875d2841dc16F1730Fba43974060b907A";\nconst amount = ethers.parseEther("1.0"); // Convert 1 ether to wei\n\n// Submit transaction to the blockchain\nconst tx = await signer.sendTransaction({\n  to: destination,\n  value: amount,\n});\n\n// Wait for the transaction to be mined\nconst receipt = await tx.wait();\n'})})})]})}function c(e={}){const{wrapper:n}={...(0,r.a)(),...e.components};return n?(0,a.jsx)(n,{...e,children:(0,a.jsx)(o,{...e})}):o(e)}},16860:(e,n,t)=>{t.d(n,{ZP:()=>c});var a=t(85893),r=t(11151),s=t(85162),i=t(74866);function o(e){const n={code:"code",pre:"pre",...(0,r.a)(),...e.components};return(0,a.jsxs)(i.Z,{defaultValue:"web3",values:[{label:"web3.js",value:"web3"},{label:"ethers.js",value:"ethers"}],children:[(0,a.jsx)(s.Z,{value:"web3",children:(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-tsx",children:'/*\n  Use code from the above Initializing Provider here\n*/\n\n// web3 is const web3 = new Web3(web3authProvider); from above.\n\n// Get user\'s Ethereum public address\nconst fromAddress = (await web3.eth.getAccounts())[0];\n\nconst originalMessage = "YOUR_MESSAGE";\n\nconst signedMessage = await web3.eth.personal.sign(originalMessage, fromAddress);\n'})})}),(0,a.jsx)(s.Z,{value:"ethers",children:(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-tsx",children:'/*\n  Use code from the above Initializing Provider here\n*/\n\nconst provider = new ethers.providers.Web3Provider(web3authProvider);\n\nconst signer = await provider.getSigner();\n\nconst originalMessage = "YOUR_MESSAGE";\n\nconst signedMessage = await signer.signMessage(originalMessage);\n'})})})]})}function c(e={}){const{wrapper:n}={...(0,r.a)(),...e.components};return n?(0,a.jsx)(n,{...e,children:(0,a.jsx)(o,{...e})}):o(e)}},86440:(e,n,t)=>{t.d(n,{ZP:()=>c});var a=t(85893),r=t(11151),s=t(85162),i=t(74866);function o(e){const n={code:"code",pre:"pre",...(0,r.a)(),...e.components};return(0,a.jsxs)(i.Z,{defaultValue:"web3",values:[{label:"web3.js",value:"web3"},{label:"ethers.js",value:"ethers"}],children:[(0,a.jsx)(s.Z,{value:"web3",children:(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-tsx",children:'/*\n  Use code from the above Initializing Provider here\n*/\n\n// web3 is const web3 = new Web3(web3authProvider); from above.\n\n// Get user\'s Ethereum public address\nconst fromAddress = (await web3.eth.getAccounts())[0];\n\nconst originalMessage = [\n  {\n    type: "string",\n    name: "fullName",\n    value: "Satoshi Nakamoto",\n  },\n  {\n    type: "uint32",\n    name: "userId",\n    value: "1212",\n  },\n];\nconst params = [originalMessage, fromAddress];\nconst method = "eth_signTypedData";\n\nconst signedMessage = await web3.currentProvider.sendAsync({\n  id: 1,\n  method,\n  params,\n  fromAddress,\n});\n'})})}),(0,a.jsx)(s.Z,{value:"ethers",children:(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-tsx",children:'/*\n  Use code from the above Initializing Provider here\n*/\n\n// provider is const provider = new ethers.providers.Web3Provider(web3authProvider); from above.\n\nconst signer = await provider.getSigner();\n\n// Get user\'s Ethereum public address\nconst fromAddress = await signer.getAddress();\n\nconst originalMessage = [\n  {\n    type: "string",\n    name: "fullName",\n    value: "Satoshi Nakamoto",\n  },\n  {\n    type: "uint32",\n    name: "userId",\n    value: "1212",\n  },\n];\nconst params = [originalMessage, fromAddress];\nconst method = "eth_signTypedData";\n\nconst signedMessage = await signer.provider.send(method, params);\n'})})})]})}function c(e={}){const{wrapper:n}={...(0,r.a)(),...e.components};return n?(0,a.jsx)(n,{...e,children:(0,a.jsx)(o,{...e})}):o(e)}},37384:(e,n,t)=>{t.d(n,{ZP:()=>c});var a=t(85893),r=t(11151),s=t(85162),i=t(74866);function o(e){const n={code:"code",pre:"pre",...(0,r.a)(),...e.components};return(0,a.jsxs)(i.Z,{defaultValue:"web3",values:[{label:"web3.js",value:"web3"},{label:"ethers.js",value:"ethers"}],children:[(0,a.jsx)(s.Z,{value:"web3",children:(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-tsx",children:'/*\n  Use code from the above Initializing Provider here\n*/\n\n// web3 is const web3 = new Web3(web3authProvider); from above.\n\n// Get user\'s Ethereum public address\nconst fromAddress = (await web3.eth.getAccounts())[0];\n\nconst originalMessage = {\n  types: {\n    EIP712Domain: [\n      {\n        name: "name",\n        type: "string",\n      },\n      {\n        name: "version",\n        type: "string",\n      },\n      {\n        name: "verifyingContract",\n        type: "address",\n      },\n    ],\n    Greeting: [\n      {\n        name: "contents",\n        type: "string",\n      },\n    ],\n  },\n  primaryType: "Greeting",\n  domain: {\n    name: "web3auth",\n    version: "1",\n    verifyingContract: "0xE0cef4417a772512E6C95cEf366403839b0D6D6D",\n  },\n  message: {\n    contents: "Hello, from Web3Auth!",\n  },\n};\nconst params = [fromAddress, originalMessage];\nconst method = "eth_signTypedData_v3";\n\nconst signedMessage = await web3.currentProvider.sendAsync({\n  id: 1,\n  method,\n  params,\n  fromAddress,\n});\n'})})}),(0,a.jsx)(s.Z,{value:"ethers",children:(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-tsx",children:'/*\n  Use code from the above Initializing Provider here\n*/\n\n// provider is const provider = new ethers.providers.Web3Provider(web3authProvider); from above.\n\nconst signer = await provider.getSigner();\n\n// Get user\'s Ethereum public address\nconst fromAddress = await signer.getAddress();\n\nconst originalMessage = {\n  types: {\n    EIP712Domain: [\n      {\n        name: "name",\n        type: "string",\n      },\n      {\n        name: "version",\n        type: "string",\n      },\n      {\n        name: "verifyingContract",\n        type: "address",\n      },\n    ],\n    Greeting: [\n      {\n        name: "contents",\n        type: "string",\n      },\n    ],\n  },\n  primaryType: "Greeting",\n  domain: {\n    name: "web3auth",\n    version: "1",\n    verifyingContract: "0xE0cef4417a772512E6C95cEf366403839b0D6D6D",\n  },\n  message: {\n    contents: "Hello, from Web3Auth!",\n  },\n};\n\nconst params = [fromAddress, originalMessage];\nconst method = "eth_signTypedData_v3";\n\nconst signedMessage = await signer.provider.send(method, params);\n'})})})]})}function c(e={}){const{wrapper:n}={...(0,r.a)(),...e.components};return n?(0,a.jsx)(n,{...e,children:(0,a.jsx)(o,{...e})}):o(e)}},91300:(e,n,t)=>{t.d(n,{ZP:()=>c});var a=t(85893),r=t(11151),s=t(85162),i=t(74866);function o(e){const n={code:"code",pre:"pre",...(0,r.a)(),...e.components};return(0,a.jsxs)(i.Z,{defaultValue:"web3",values:[{label:"web3.js",value:"web3"},{label:"ethers.js",value:"ethers"}],children:[(0,a.jsx)(s.Z,{value:"web3",children:(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-tsx",children:'/*\n  Sign Typed Data v4 adds support for\n  arrays and recursive data types.\n\n  Otherwise, it works the same as Sign Typed Data v3.\n*/\n\n/*\n  Use code from the above Initializing Provider here\n*/\n\n// web3 is const web3 = new Web3(web3authProvider); from above.\n\n// Get user\'s Ethereum public address\nconst fromAddress = (await web3.eth.getAccounts())[0];\n\nconst originalMessage = JSON.stringify({\n  domain: {\n    // Defining the chain aka Sepolia testnet or Ethereum Main Net\n    chainId: 11155111, // 1 for mainnet\n    // Give a user friendly name to the specific contract you are signing for.\n    name: "Ether Mail",\n    // If name isn\'t enough add verifying contract to make sure you are establishing contracts with the proper entity\n    verifyingContract: "0xCcCCccccCCCCcCCCCCCcCcCccCcCCCcCcccccccC",\n    // Just let\'s you know the latest version. Definitely make sure the field name is correct.\n    version: "1",\n  },\n\n  // Defining the message signing data content.\n  message: {\n    /*\n       - Anything you want. Just a JSON Blob that encodes the data you want to send\n       - No required fields\n       - This is DApp Specific\n       - Be as explicit as possible when building out the message schema.\n      */\n    contents: "Hello, Bob!",\n    attachedMoneyInEth: 4.2,\n    from: {\n      name: "Cow",\n      wallets: ["0xCD2a3d9F938E13CD947Ec05AbC7FE734Df8DD826", "0xDeaDbeefdEAdbeefdEadbEEFdeadbeEFdEaDbeeF"],\n    },\n    to: [\n      {\n        name: "Bob",\n        wallets: [\n          "0xbBbBBBBbbBBBbbbBbbBbbbbBBbBbbbbBbBbbBBbB",\n          "0xB0BdaBea57B0BDABeA57b0bdABEA57b0BDabEa57",\n          "0xB0B0b0b0b0b0B000000000000000000000000000",\n        ],\n      },\n    ],\n  },\n  // Refers to the keys of the *types* object below.\n  primaryType: "Mail",\n  types: {\n    // TODO: Clarify if EIP712Domain refers to the domain the contract is hosted on\n    EIP712Domain: [\n      { name: "name", type: "string" },\n      { name: "version", type: "string" },\n      { name: "chainId", type: "uint256" },\n      { name: "verifyingContract", type: "address" },\n    ],\n    // Not an EIP712Domain definition\n    Group: [\n      { name: "name", type: "string" },\n      { name: "members", type: "Person[]" },\n    ],\n    // Refer to PrimaryType\n    Mail: [\n      { name: "from", type: "Person" },\n      { name: "to", type: "Person[]" },\n      { name: "contents", type: "string" },\n    ],\n    // Not an EIP712Domain definition\n    Person: [\n      { name: "name", type: "string" },\n      { name: "wallets", type: "address[]" },\n    ],\n  },\n});\nconst params = [fromAddress, originalMessage];\nconst method = "eth_signTypedData_v4";\n\nconst signedMessage = await web3.currentProvider.sendAsync({\n  method,\n  params,\n  fromAddress,\n});\n'})})}),(0,a.jsx)(s.Z,{value:"ethers",children:(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-tsx",children:'/*\n  Use code from the above Initializing Provider here\n*/\n\n// provider is const provider = new ethers.providers.Web3Provider(web3authProvider); from above.\n\nconst signer = await provider.getSigner();\n\n// Get user\'s Ethereum public address\nconst fromAddress = await signer.getAddress();\n\nconst originalMessage = JSON.stringify({\n  domain: {\n    // Defining the chain aka Sepolia testnet or Ethereum Main Net\n    chainId: 11155111,\n    // Give a user friendly name to the specific contract you are signing for.\n    name: "Ether Mail",\n    // If name isn\'t enough add verifying contract to make sure you are establishing contracts with the proper entity\n    verifyingContract: "0xCcCCccccCCCCcCCCCCCcCcCccCcCCCcCcccccccC",\n    // Just let\'s you know the latest version. Definitely make sure the field name is correct.\n    version: "1",\n  },\n\n  // Defining the message signing data content.\n  message: {\n    /*\n           - Anything you want. Just a JSON Blob that encodes the data you want to send\n           - No required fields\n           - This is DApp Specific\n           - Be as explicit as possible when building out the message schema.\n          */\n    contents: "Hello, Bob!",\n    attachedMoneyInEth: 4.2,\n    from: {\n      name: "Cow",\n      wallets: ["0xCD2a3d9F938E13CD947Ec05AbC7FE734Df8DD826", "0xDeaDbeefdEAdbeefdEadbEEFdeadbeEFdEaDbeeF"],\n    },\n    to: [\n      {\n        name: "Bob",\n        wallets: [\n          "0xbBbBBBBbbBBBbbbBbbBbbbbBBbBbbbbBbBbbBBbB",\n          "0xB0BdaBea57B0BDABeA57b0bdABEA57b0BDabEa57",\n          "0xB0B0b0b0b0b0B000000000000000000000000000",\n        ],\n      },\n    ],\n  },\n  // Refers to the keys of the *types* object below.\n  primaryType: "Mail",\n  types: {\n    // TODO: Clarify if EIP712Domain refers to the domain the contract is hosted on\n    EIP712Domain: [\n      { name: "name", type: "string" },\n      { name: "version", type: "string" },\n      { name: "chainId", type: "uint256" },\n      { name: "verifyingContract", type: "address" },\n    ],\n    // Not an EIP712Domain definition\n    Group: [\n      { name: "name", type: "string" },\n      { name: "members", type: "Person[]" },\n    ],\n    // Refer to PrimaryType\n    Mail: [\n      { name: "from", type: "Person" },\n      { name: "to", type: "Person[]" },\n      { name: "contents", type: "string" },\n    ],\n    // Not an EIP712Domain definition\n    Person: [\n      { name: "name", type: "string" },\n      { name: "wallets", type: "address[]" },\n    ],\n  },\n});\nconst params = [fromAddress, originalMessage];\nconst method = "eth_signTypedData_v4";\n\nconst signedMessage = await signer.provider.send(method, params);\n'})})})]})}function c(e={}){const{wrapper:n}={...(0,r.a)(),...e.components};return n?(0,a.jsx)(n,{...e,children:(0,a.jsx)(o,{...e})}):o(e)}},25378:(e,n,t)=>{t.d(n,{ZP:()=>i});var a=t(85893),r=t(11151);function s(e){const n={code:"code",pre:"pre",...(0,r.a)(),...e.components};return(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-tsx",children:'/*\n  Use code from the above Initializing Provider here\n*/\n\n// web3 is const web3 = new Web3(web3authProvider); from above.\n\n// Get user\'s Ethereum public address\nconst fromAddress = (await web3.eth.getAccounts())[0];\n\nconst destination = "0x7aFac68875d2841dc16F1730Fba43974060b907A";\nconst amount = web3.utils.toWei(1); // Convert 1 ether to wei\n\n// Submit transaction to the blockchain and wait for it to be mined\nconst receipt = await web3.eth.signTransaction({\n  from: fromAddress,\n  to: destination,\n  value: amount,\n  maxPriorityFeePerGas: "5000000000", // Max priority fee per gas\n  maxFeePerGas: "6000000000000", // Max fee per gas\n});\n'})})}function i(e={}){const{wrapper:n}={...(0,r.a)(),...e.components};return n?(0,a.jsx)(n,{...e,children:(0,a.jsx)(s,{...e})}):s(e)}},21825:(e,n,t)=>{t.r(n),t.d(n,{assets:()=>C,contentTitle:()=>A,default:()=>E,frontMatter:()=>P,metadata:()=>B,toc:()=>N});var a=t(85893),r=t(11151),s=t(68541),i=t(18786),o=t(16979),c=t(40709),b=t(25378),d=t(16860),l=t(86440),f=t(37384),u=t(91300),h=t(8210),p=t(67680),m=t(4925),g=t(8671),v=t(3747),w=t(83614),y=t(85162),x=t(74866),j=t(30831);const P={title:"Integrate Web3Auth with the BNB (Binance) Blockchain in JavaScript",sidebar_label:"Web",image:"content-hub/guides/banners/bnb.png",displayed_sidebar:"docs",keywords:["binance","bnb","bsc","binanace smart chain","web3auth","authentication","blockchain"],description:"Integrate Web3Auth with the BNB (Binance) Blockchain in JavaScript | Documentation - Web3Auth"},A=void 0,B={id:"connect-blockchain/evm/bnb/web",title:"Integrate Web3Auth with the BNB (Binance) Blockchain in JavaScript",description:"Integrate Web3Auth with the BNB (Binance) Blockchain in JavaScript | Documentation - Web3Auth",source:"@site/docs/connect-blockchain/evm/bnb/web.mdx",sourceDirName:"connect-blockchain/evm/bnb",slug:"/connect-blockchain/evm/bnb/web",permalink:"/docs/connect-blockchain/evm/bnb/web",draft:!1,unlisted:!1,editUrl:"https://github.com/web3auth/web3auth-docs/edit/master/docs/connect-blockchain/evm/bnb/web.mdx",tags:[],version:"current",frontMatter:{title:"Integrate Web3Auth with the BNB (Binance) Blockchain in JavaScript",sidebar_label:"Web",image:"content-hub/guides/banners/bnb.png",displayed_sidebar:"docs",keywords:["binance","bnb","bsc","binanace smart chain","web3auth","authentication","blockchain"],description:"Integrate Web3Auth with the BNB (Binance) Blockchain in JavaScript | Documentation - Web3Auth"},sidebar:"docs",previous:{title:"Integrate Web3Auth with the BNB Blockchain",permalink:"/docs/connect-blockchain/evm/bnb/"},next:{title:"Android",permalink:"/docs/connect-blockchain/evm/bnb/android"}},C={},N=[{value:"Installation",id:"installation",level:2},{value:"Initializing Provider",id:"initializing-provider",level:2},{value:"Getting the <code>chainConfig</code>",id:"getting-the-chainconfig",level:3},{value:"Initializing and instantiating the Web3Auth SDK",id:"initializing-and-instantiating-the-web3auth-sdk",level:3},{value:"Get User Info",id:"get-user-info",level:2},{value:"Get Account and Balance",id:"get-account-and-balance",level:2},{value:"Send Transaction",id:"send-transaction",level:2},{value:"Sign Transaction",id:"sign-transaction",level:2},{value:"Sign Message",id:"sign-message",level:2},{value:"Personal Sign",id:"personal-sign",level:3},{value:"Sign Typed Data v1",id:"sign-typed-data-v1",level:3},{value:"Sign Typed Data v3",id:"sign-typed-data-v3",level:3},{value:"Sign Typed Data v4",id:"sign-typed-data-v4",level:3},{value:"Smart Contract",id:"smart-contract",level:2},{value:"Deploy Contract",id:"deploy-contract",level:3},{value:"Read From Contract",id:"read-from-contract",level:3},{value:"Write to Contract",id:"write-to-contract",level:3},{value:"Fetch User&#39;s Private Key",id:"fetch-users-private-key",level:2}];function I(e){const n={a:"a",code:"code",h2:"h2",h3:"h3",p:"p",pre:"pre",strong:"strong",...(0,r.a)(),...e.components};return(0,a.jsxs)(a.Fragment,{children:[(0,a.jsx)(j.Z,{title:"Integrate Web3Auth with the BNB (Binance) Blockchain in JavaScript",description:"Integrate Web3Auth with the BNB (Binance) Blockchain in JavaScript | Documentation - Web3Auth",image:"https://web3auth.io/docs/content-hub/guides/banners/bnb.png",slug:"/connect-blockchain/evm/bnb/web"}),"\n",(0,a.jsxs)(n.p,{children:["While using the Web3Auth Web SDK, you get a ",(0,a.jsx)(n.a,{href:"https://eips.ethereum.org/EIPS/eip-1193",children:(0,a.jsx)(n.code,{children:"EIP1193"})})," provider, similar to the\n",(0,a.jsx)(n.a,{href:"https://docs.metamask.io/guide/ethereum-provider.html",children:"Metamask Provider"}),". This provider can be used with libraries like\n",(0,a.jsx)(n.a,{href:"https://web3js.readthedocs.io/en/v1.2.8/getting-started.html",children:(0,a.jsx)(n.code,{children:"web3.js"})}),", ",(0,a.jsx)(n.a,{href:"https://docs.ethers.io/v5/getting-started/",children:(0,a.jsx)(n.code,{children:"ethers.js"})})," etc. to make\n",(0,a.jsx)(n.a,{href:"https://www.bnbchain.org/",children:"BNB (Binance) Chain"})," blockchain calls like getting the user's ",(0,a.jsx)(n.code,{children:"account"}),", fetching ",(0,a.jsx)(n.code,{children:"balance"}),", ",(0,a.jsx)(n.code,{children:"sign transaction"}),",\n",(0,a.jsx)(n.code,{children:"send transaction"}),", ",(0,a.jsx)(n.code,{children:"read"})," from and ",(0,a.jsx)(n.code,{children:"write"})," to the smart contract, etc. We have highlighted a few here to get you started quickly on that."]}),"\n",(0,a.jsx)(n.h2,{id:"installation",children:"Installation"}),"\n",(0,a.jsx)(n.p,{children:"To interact with the BNB (Binance) Blockchain, you can use either library with Web3Auth."}),"\n",(0,a.jsx)(s.ZP,{}),"\n",(0,a.jsx)(n.h2,{id:"initializing-provider",children:"Initializing Provider"}),"\n",(0,a.jsxs)(n.p,{children:["Using ",(0,a.jsx)(n.code,{children:"eip155"})," as ",(0,a.jsx)(n.code,{children:"chainNamespace"})," while initializing ",(0,a.jsx)(n.code,{children:"web3auth"})," will provide an ",(0,a.jsx)(n.a,{href:"https://eips.ethereum.org/EIPS/eip-1193",children:(0,a.jsx)(n.code,{children:"EIP1193"})})," compatible\nprovider as ",(0,a.jsx)(n.strong,{children:(0,a.jsx)(n.code,{children:"web3auth.provider"})})," after successful authentication."]}),"\n",(0,a.jsxs)(n.h3,{id:"getting-the-chainconfig",children:["Getting the ",(0,a.jsx)(n.code,{children:"chainConfig"})]}),"\n",(0,a.jsxs)(x.Z,{defaultValue:"mainnet",values:[{label:"Mainnet",value:"mainnet"},{label:"Testnet",value:"testnet"}],children:[(0,a.jsx)(y.Z,{value:"mainnet",children:(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-typescript",children:'const chainConfig = {\n  chainNamespace: "eip155",\n  chainId: "0x38", // hex of 56\n  rpcTarget: "https://rpc.ankr.com/bsc",\n  // Avoid using public rpcTarget in production.\n  // Use services like Infura, Quicknode etc\n  displayName: "Binance SmartChain Mainnet",\n  blockExplorerUrl: "https://bscscan.com/",\n  ticker: "BNB",\n  tickerName: "BNB",\n  logo: "https://cryptologos.cc/logos/bnb-bnb-logo.png",\n};\n'})})}),(0,a.jsx)(y.Z,{value:"testnet",children:(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-typescript",children:'const chainConfig = {\n  chainNamespace: "eip155",\n  chainId: "0x61", // hex of 97\n  rpcTarget: "https://rpc.ankr.com/bsc_testnet_chapel",\n  // Avoid using public rpcTarget in production.\n  // Use services like Infura, Quicknode etc\n  displayName: "Binance SmartChain Testnet",\n  blockExplorerUrl: "https://testnet.bscscan.com",\n  ticker: "BNB",\n  tickerName: "BNB",\n  logo: "https://cryptologos.cc/logos/bnb-bnb-logo.png",\n};\n'})})})]}),"\n",(0,a.jsx)(n.h3,{id:"initializing-and-instantiating-the-web3auth-sdk",children:"Initializing and instantiating the Web3Auth SDK"}),"\n",(0,a.jsx)(w.ZP,{}),"\n",(0,a.jsx)(n.h2,{id:"get-user-info",children:"Get User Info"}),"\n",(0,a.jsx)(i.ZP,{}),"\n",(0,a.jsx)(n.h2,{id:"get-account-and-balance",children:"Get Account and Balance"}),"\n",(0,a.jsx)(o.ZP,{}),"\n",(0,a.jsx)(n.h2,{id:"send-transaction",children:"Send Transaction"}),"\n",(0,a.jsx)(c.ZP,{}),"\n",(0,a.jsx)(n.h2,{id:"sign-transaction",children:"Sign Transaction"}),"\n",(0,a.jsx)(b.ZP,{}),"\n",(0,a.jsx)(n.h2,{id:"sign-message",children:"Sign Message"}),"\n",(0,a.jsx)(n.h3,{id:"personal-sign",children:"Personal Sign"}),"\n",(0,a.jsx)(d.ZP,{}),"\n",(0,a.jsx)(n.h3,{id:"sign-typed-data-v1",children:"Sign Typed Data v1"}),"\n",(0,a.jsx)(l.ZP,{}),"\n",(0,a.jsx)(n.h3,{id:"sign-typed-data-v3",children:"Sign Typed Data v3"}),"\n",(0,a.jsx)(f.ZP,{}),"\n",(0,a.jsx)(n.h3,{id:"sign-typed-data-v4",children:"Sign Typed Data v4"}),"\n",(0,a.jsx)(u.ZP,{}),"\n",(0,a.jsx)(n.h2,{id:"smart-contract",children:"Smart Contract"}),"\n",(0,a.jsx)(h.ZP,{}),"\n",(0,a.jsx)(n.h3,{id:"deploy-contract",children:"Deploy Contract"}),"\n",(0,a.jsx)(p.ZP,{}),"\n",(0,a.jsx)(n.h3,{id:"read-from-contract",children:"Read From Contract"}),"\n",(0,a.jsx)(m.ZP,{}),"\n",(0,a.jsx)(n.h3,{id:"write-to-contract",children:"Write to Contract"}),"\n",(0,a.jsx)(g.ZP,{}),"\n",(0,a.jsx)(n.h2,{id:"fetch-users-private-key",children:"Fetch User's Private Key"}),"\n",(0,a.jsx)(v.ZP,{})]})}function E(e={}){const{wrapper:n}={...(0,r.a)(),...e.components};return n?(0,a.jsx)(n,{...e,children:(0,a.jsx)(I,{...e})}):I(e)}},85162:(e,n,t)=>{t.d(n,{Z:()=>i});t(67294);var a=t(36905);const r={tabItem:"tabItem_Ymn6"};var s=t(85893);function i(e){let{children:n,hidden:t,className:i}=e;return(0,s.jsx)("div",{role:"tabpanel",className:(0,a.Z)(r.tabItem,i),hidden:t,children:n})}},74866:(e,n,t)=>{t.d(n,{Z:()=>j});var a=t(67294),r=t(36905),s=t(12466),i=t(16550),o=t(20469),c=t(91980),b=t(67392),d=t(50012);function l(e){return a.Children.toArray(e).filter((e=>"\n"!==e)).map((e=>{if(!e||(0,a.isValidElement)(e)&&function(e){const{props:n}=e;return!!n&&"object"==typeof n&&"value"in n}(e))return e;throw new Error(`Docusaurus error: Bad <Tabs> child <${"string"==typeof e.type?e.type:e.type.name}>: all children of the <Tabs> component should be <TabItem>, and every <TabItem> should have a unique "value" prop.`)}))?.filter(Boolean)??[]}function f(e){const{values:n,children:t}=e;return(0,a.useMemo)((()=>{const e=n??function(e){return l(e).map((e=>{let{props:{value:n,label:t,attributes:a,default:r}}=e;return{value:n,label:t,attributes:a,default:r}}))}(t);return function(e){const n=(0,b.l)(e,((e,n)=>e.value===n.value));if(n.length>0)throw new Error(`Docusaurus error: Duplicate values "${n.map((e=>e.value)).join(", ")}" found in <Tabs>. Every value needs to be unique.`)}(e),e}),[n,t])}function u(e){let{value:n,tabValues:t}=e;return t.some((e=>e.value===n))}function h(e){let{queryString:n=!1,groupId:t}=e;const r=(0,i.k6)(),s=function(e){let{queryString:n=!1,groupId:t}=e;if("string"==typeof n)return n;if(!1===n)return null;if(!0===n&&!t)throw new Error('Docusaurus error: The <Tabs> component groupId prop is required if queryString=true, because this value is used as the search param name. You can also provide an explicit value such as queryString="my-search-param".');return t??null}({queryString:n,groupId:t});return[(0,c._X)(s),(0,a.useCallback)((e=>{if(!s)return;const n=new URLSearchParams(r.location.search);n.set(s,e),r.replace({...r.location,search:n.toString()})}),[s,r])]}function p(e){const{defaultValue:n,queryString:t=!1,groupId:r}=e,s=f(e),[i,c]=(0,a.useState)((()=>function(e){let{defaultValue:n,tabValues:t}=e;if(0===t.length)throw new Error("Docusaurus error: the <Tabs> component requires at least one <TabItem> children component");if(n){if(!u({value:n,tabValues:t}))throw new Error(`Docusaurus error: The <Tabs> has a defaultValue "${n}" but none of its children has the corresponding value. Available values are: ${t.map((e=>e.value)).join(", ")}. If you intend to show no default tab, use defaultValue={null} instead.`);return n}const a=t.find((e=>e.default))??t[0];if(!a)throw new Error("Unexpected error: 0 tabValues");return a.value}({defaultValue:n,tabValues:s}))),[b,l]=h({queryString:t,groupId:r}),[p,m]=function(e){let{groupId:n}=e;const t=function(e){return e?`docusaurus.tab.${e}`:null}(n),[r,s]=(0,d.Nk)(t);return[r,(0,a.useCallback)((e=>{t&&s.set(e)}),[t,s])]}({groupId:r}),g=(()=>{const e=b??p;return u({value:e,tabValues:s})?e:null})();(0,o.Z)((()=>{g&&c(g)}),[g]);return{selectedValue:i,selectValue:(0,a.useCallback)((e=>{if(!u({value:e,tabValues:s}))throw new Error(`Can't select invalid tab value=${e}`);c(e),l(e),m(e)}),[l,m,s]),tabValues:s}}var m=t(72389);const g={tabList:"tabList__CuJ",tabItem:"tabItem_LNqP"};var v=t(85893);function w(e){let{className:n,block:t,selectedValue:a,selectValue:i,tabValues:o}=e;const c=[],{blockElementScrollPositionUntilNextRender:b}=(0,s.o5)(),d=e=>{const n=e.currentTarget,t=c.indexOf(n),r=o[t].value;r!==a&&(b(n),i(r))},l=e=>{let n=null;switch(e.key){case"Enter":d(e);break;case"ArrowRight":{const t=c.indexOf(e.currentTarget)+1;n=c[t]??c[0];break}case"ArrowLeft":{const t=c.indexOf(e.currentTarget)-1;n=c[t]??c[c.length-1];break}}n?.focus()};return(0,v.jsx)("ul",{role:"tablist","aria-orientation":"horizontal",className:(0,r.Z)("tabs",{"tabs--block":t},n),children:o.map((e=>{let{value:n,label:t,attributes:s}=e;return(0,v.jsx)("li",{role:"tab",tabIndex:a===n?0:-1,"aria-selected":a===n,ref:e=>c.push(e),onKeyDown:l,onClick:d,...s,className:(0,r.Z)("tabs__item",g.tabItem,s?.className,{"tabs__item--active":a===n}),children:t??n},n)}))})}function y(e){let{lazy:n,children:t,selectedValue:r}=e;const s=(Array.isArray(t)?t:[t]).filter(Boolean);if(n){const e=s.find((e=>e.props.value===r));return e?(0,a.cloneElement)(e,{className:"margin-top--md"}):null}return(0,v.jsx)("div",{className:"margin-top--md",children:s.map(((e,n)=>(0,a.cloneElement)(e,{key:n,hidden:e.props.value!==r})))})}function x(e){const n=p(e);return(0,v.jsxs)("div",{className:(0,r.Z)("tabs-container",g.tabList),children:[(0,v.jsx)(w,{...e,...n}),(0,v.jsx)(y,{...e,...n})]})}function j(e){const n=(0,m.Z)();return(0,v.jsx)(x,{...e,children:l(e.children)},String(n))}},30831:(e,n,t)=>{t.d(n,{Z:()=>s});var a=t(35742),r=t(85893);function s(e){const{title:n,description:t,image:s,slug:i,keywords:o}=e;return(0,r.jsxs)(a.Z,{children:[n?(0,r.jsxs)("title",{children:[n," | Web3Auth "]}):(0,r.jsx)("title",{children:"Documentation | Web3Auth"}),t?(0,r.jsx)("meta",{name:"description",content:t}):(0,r.jsx)("meta",{name:"description",content:"Web3Auth is simple, non-custodial auth infrastructure that enables Web3 wallets and applications to provide seamless user logins for both mainstream and native Web3 users."}),o?o.length>0&&(0,r.jsx)("meta",{name:"keywords",content:`web3auth, blockchain, solana, ethereum, multi party computation, ${o.join(", ")}`}):(0,r.jsx)("meta",{name:"keywords",content:"web3auth, blockchain, web3, web3.js, ethers.js, solana, ethereum, passwordless, passwordless magic link, multi party computation, tkey, torus, web3 auth, auth"}),(0,r.jsx)("meta",{property:"og:site_name",content:"Web3Auth"}),(0,r.jsx)("meta",{property:"og:type",content:"website"}),n?(0,r.jsx)("meta",{property:"og:title",content:n}):(0,r.jsx)("meta",{property:"og:title",content:"Documentation | Web3Auth"}),t?(0,r.jsx)("meta",{property:"og:description",content:t}):(0,r.jsx)("meta",{property:"og:description",content:"Web3Auth is simple, non-custodial auth infrastructure that enables Web3 wallets and applications to provide seamless user logins for both mainstream and native Web3 users."}),i?(0,r.jsx)("meta",{property:"og:url",content:`https://web3auth.io/docs${i}`}):(0,r.jsx)("meta",{property:"og:url",content:"https://web3auth.io/docs"}),s?(0,r.jsx)("meta",{property:"og:image",content:s}):(0,r.jsx)("meta",{property:"og:image",content:"http://web3auth.io/docs/images/docs-meta-cards/documentation-card.png"}),(0,r.jsx)("meta",{name:"twitter:card",content:"summary_large_image"}),(0,r.jsx)("meta",{name:"twitter:site",content:"@Web3Auth"}),(0,r.jsx)("meta",{name:"twitter:creator",content:"@Web3Auth"}),s?(0,r.jsx)("meta",{name:"twitter:image",content:s}):(0,r.jsx)("meta",{name:"twitter:image",content:"http://web3auth.io/docs/images/docs-meta-cards/documentation-card.png"}),n?(0,r.jsx)("meta",{itemProp:"name",content:n}):(0,r.jsx)("meta",{itemProp:"name",content:"Documentation | Web3Auth"}),t?(0,r.jsx)("meta",{itemProp:"description",content:t}):(0,r.jsx)("meta",{itemProp:"description",content:"Web3Auth is simple, non-custodial auth infrastructure that enables Web3 wallets and applications to provide seamless user logins for both mainstream and native Web3 users."}),s?(0,r.jsx)("meta",{itemProp:"image",content:s}):(0,r.jsx)("meta",{itemProp:"image",content:"http://web3auth.io/docs/images/docs-meta-cards/documentation-card.png"}),(0,r.jsx)("meta",{name:"author",content:"Web3Auth"})]})}},11151:(e,n,t)=>{t.d(n,{Z:()=>o,a:()=>i});var a=t(67294);const r={},s=a.createContext(r);function i(e){const n=a.useContext(s);return a.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function o(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(r):e.components||r:i(e.components),a.createElement(s.Provider,{value:n},e.children)}}}]);