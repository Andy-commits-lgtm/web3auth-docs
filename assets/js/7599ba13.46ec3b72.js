"use strict";(self.webpackChunkweb3auth_docs=self.webpackChunkweb3auth_docs||[]).push([[86405],{2622:(e,n,i)=>{i.r(n),i.d(n,{assets:()=>h,contentTitle:()=>a,default:()=>g,frontMatter:()=>s,metadata:()=>d,toc:()=>c});var t=i(85893),r=i(11151),o=i(85162),l=i(74866);const s={title:"Using Custom Authentication in PnP Flutter SDK",sidebar_label:"Custom Authentication",displayed_sidebar:"sdk",description:"Web3Auth PnP Flutter SDK - Using Custom Authentication | Documentation - Web3Auth"},a=void 0,d={id:"sdk/pnp/flutter/custom-authentication",title:"Using Custom Authentication in PnP Flutter SDK",description:"Web3Auth PnP Flutter SDK - Using Custom Authentication | Documentation - Web3Auth",source:"@site/docs/sdk/pnp/flutter/custom-authentication.mdx",sourceDirName:"sdk/pnp/flutter",slug:"/sdk/pnp/flutter/custom-authentication",permalink:"/docs/sdk/pnp/flutter/custom-authentication",draft:!1,unlisted:!1,editUrl:"https://github.com/web3auth/web3auth-docs/edit/master/docs/sdk/pnp/flutter/custom-authentication.mdx",tags:[],version:"current",frontMatter:{title:"Using Custom Authentication in PnP Flutter SDK",sidebar_label:"Custom Authentication",displayed_sidebar:"sdk",description:"Web3Auth PnP Flutter SDK - Using Custom Authentication | Documentation - Web3Auth"},sidebar:"sdk",previous:{title:"Whitelabel",permalink:"/docs/sdk/pnp/flutter/whitelabel"},next:{title:"Multi Factor Authentication",permalink:"/docs/sdk/pnp/flutter/mfa"}},h={},c=[{value:"<code>LoginConfigItem</code>",id:"loginconfigitem",level:2},{value:"Arguments",id:"arguments",level:3},{value:"<code>typeOfLogin</code>",id:"typeoflogin",level:3},{value:"<code>ExtraLoginOptions</code> for special login methods",id:"extraloginoptions-for-special-login-methods",level:2},{value:"Using Auth0 Login",id:"using-auth0-login",level:3},{value:"Custom JWT Login",id:"custom-jwt-login",level:3},{value:"Email Passwordless",id:"email-passwordless",level:3}];function u(e){const n={a:"a",admonition:"admonition",code:"code",h2:"h2",h3:"h3",li:"li",p:"p",pre:"pre",strong:"strong",table:"table",tbody:"tbody",td:"td",th:"th",thead:"thead",tr:"tr",ul:"ul",...(0,r.a)(),...e.components};return(0,t.jsxs)(t.Fragment,{children:[(0,t.jsxs)(n.p,{children:["To use custom authentication (Using Social providers or Login providers like Auth0, AWS Cognito, Firebase etc. or even your own custom JWT login) you can\nadd the configuration to the ",(0,t.jsx)(n.code,{children:"loginConfig"})," parameter of the ",(0,t.jsx)(n.code,{children:"LoginParams"})," object during the initialization."]}),"\n",(0,t.jsxs)(n.p,{children:["The ",(0,t.jsx)(n.code,{children:"loginConfig"})," parameter is a key value map. The key should be one of the ",(0,t.jsx)(n.code,{children:"TypeOfLogin"})," in its string form, and the value should be a\n",(0,t.jsx)(n.code,{children:"LoginConfigItem"})," struct."]}),"\n",(0,t.jsx)(n.p,{children:"To use custom authentication, first you'll need to configure your own verifier in the Web3Auth Dashboard in Custom Authentication section."}),"\n",(0,t.jsx)(n.admonition,{title:"Create Custom Verifier",type:"tip",children:(0,t.jsxs)(n.p,{children:["Check out how to create a ",(0,t.jsx)(n.strong,{children:(0,t.jsx)(n.a,{href:"/auth-provider-setup/verifiers",children:"Custom Verifier"})})," on the Web3Auth Dashboard."]})}),"\n",(0,t.jsx)(n.admonition,{title:"using dapp share",type:"info",children:(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsx)(n.li,{children:"dApp Share is only returned for the Custom verifiers."}),"\n",(0,t.jsxs)(n.li,{children:["Also, 2FA should be enabled for the account using it. Use ",(0,t.jsx)(n.code,{children:"mfaLevel = MFALevel.MANDATORY"})," in the ",(0,t.jsx)(n.code,{children:"LoginParams"})," during login. See\n",(0,t.jsx)(n.strong,{children:(0,t.jsx)(n.a,{href:"/sdk/pnp/flutter/mfa",children:"MFA"})})," for more details."]}),"\n"]})}),"\n",(0,t.jsx)(n.admonition,{type:"note",children:(0,t.jsxs)(n.p,{children:["This is a paid feature and the the minimum ",(0,t.jsx)(n.a,{href:"https://web3auth.io/pricing.html",children:"pricing plan"})," to use this SDK in a production environment is the\n",(0,t.jsx)(n.strong,{children:"Growth Plan"}),". You can use this feature in the development environment for free."]})}),"\n",(0,t.jsxs)(n.p,{children:["Then, specify the details of your verifier in the ",(0,t.jsx)(n.code,{children:"LoginConfigItem"})," struct as follows:"]}),"\n",(0,t.jsx)(n.h2,{id:"loginconfigitem",children:(0,t.jsx)(n.code,{children:"LoginConfigItem"})}),"\n",(0,t.jsx)(n.h3,{id:"arguments",children:"Arguments"}),"\n",(0,t.jsx)(n.p,{children:(0,t.jsx)(n.code,{children:"LoginConfigItem"})}),"\n",(0,t.jsxs)(l.Z,{defaultValue:"table",values:[{label:"Table",value:"table"},{label:"Class",value:"class"}],children:[(0,t.jsx)(o.Z,{value:"table",children:(0,t.jsxs)(n.table,{children:[(0,t.jsx)(n.thead,{children:(0,t.jsxs)(n.tr,{children:[(0,t.jsx)(n.th,{children:"Parameter"}),(0,t.jsx)(n.th,{children:"Type"}),(0,t.jsx)(n.th,{children:"Mandatory"}),(0,t.jsx)(n.th,{children:"Description"})]})}),(0,t.jsxs)(n.tbody,{children:[(0,t.jsxs)(n.tr,{children:[(0,t.jsx)(n.td,{children:(0,t.jsx)(n.code,{children:"verifier"})}),(0,t.jsx)(n.td,{children:(0,t.jsx)(n.code,{children:"String"})}),(0,t.jsx)(n.td,{children:"Yes"}),(0,t.jsx)(n.td,{children:"The name of the verifier that you have registered on the Web3Auth Dashboard."})]}),(0,t.jsxs)(n.tr,{children:[(0,t.jsx)(n.td,{children:(0,t.jsx)(n.code,{children:"typeOfLogin"})}),(0,t.jsx)(n.td,{children:(0,t.jsx)(n.code,{children:"TypeOfLogin"})}),(0,t.jsx)(n.td,{children:"Yes"}),(0,t.jsxs)(n.td,{children:["Type of login of this verifier, this value will affect the login flow that is adapted. For example, if you choose ",(0,t.jsx)(n.code,{children:"google"}),", a Google sign-in flow will be used. If you choose ",(0,t.jsx)(n.code,{children:"jwt"}),", you should be providing your own JWT token, no sign-in flow will be presented."]})]}),(0,t.jsxs)(n.tr,{children:[(0,t.jsx)(n.td,{children:(0,t.jsx)(n.code,{children:"clientId"})}),(0,t.jsx)(n.td,{children:(0,t.jsx)(n.code,{children:"String"})}),(0,t.jsx)(n.td,{children:"Yes"}),(0,t.jsx)(n.td,{children:"The Client Id of the login provider. e.g. Google's Client ID or Web3Auth's client Id if using 'jwt' as TypeOfLogin."})]}),(0,t.jsxs)(n.tr,{children:[(0,t.jsx)(n.td,{children:(0,t.jsx)(n.code,{children:"name"})}),(0,t.jsx)(n.td,{children:(0,t.jsx)(n.code,{children:"String?"})}),(0,t.jsx)(n.td,{children:"No"}),(0,t.jsx)(n.td,{children:"Name of your verifier."})]}),(0,t.jsxs)(n.tr,{children:[(0,t.jsx)(n.td,{children:(0,t.jsx)(n.code,{children:"description"})}),(0,t.jsx)(n.td,{children:(0,t.jsx)(n.code,{children:"String?"})}),(0,t.jsx)(n.td,{children:"No"}),(0,t.jsx)(n.td,{children:"Description of this login flow."})]}),(0,t.jsxs)(n.tr,{children:[(0,t.jsx)(n.td,{children:(0,t.jsx)(n.code,{children:"verifierSubIdentifier"})}),(0,t.jsx)(n.td,{children:(0,t.jsx)(n.code,{children:"String?"})}),(0,t.jsx)(n.td,{children:"No"}),(0,t.jsx)(n.td,{children:"The name of the field in the JWT that should be used as the unique user ID of the JWT. Should be same as the one you used."})]}),(0,t.jsxs)(n.tr,{children:[(0,t.jsx)(n.td,{children:(0,t.jsx)(n.code,{children:"logoHover"})}),(0,t.jsx)(n.td,{children:(0,t.jsx)(n.code,{children:"String?"})}),(0,t.jsx)(n.td,{children:"No"}),(0,t.jsx)(n.td,{children:"Logo to be shown on mouse hover."})]}),(0,t.jsxs)(n.tr,{children:[(0,t.jsx)(n.td,{children:(0,t.jsx)(n.code,{children:"logoLight"})}),(0,t.jsx)(n.td,{children:(0,t.jsx)(n.code,{children:"String?"})}),(0,t.jsx)(n.td,{children:"No"}),(0,t.jsx)(n.td,{children:"Light logo for dark background"})]}),(0,t.jsxs)(n.tr,{children:[(0,t.jsx)(n.td,{children:(0,t.jsx)(n.code,{children:"logoDark"})}),(0,t.jsx)(n.td,{children:(0,t.jsx)(n.code,{children:"String?"})}),(0,t.jsx)(n.td,{children:"No"}),(0,t.jsx)(n.td,{children:"Dark logo for light background"})]}),(0,t.jsxs)(n.tr,{children:[(0,t.jsx)(n.td,{children:(0,t.jsx)(n.code,{children:"mainOption"})}),(0,t.jsx)(n.td,{children:(0,t.jsx)(n.code,{children:"bool?"})}),(0,t.jsx)(n.td,{children:"No"}),(0,t.jsx)(n.td,{children:"Show login button on the main list"})]}),(0,t.jsxs)(n.tr,{children:[(0,t.jsx)(n.td,{children:(0,t.jsx)(n.code,{children:"showOnModal"})}),(0,t.jsx)(n.td,{children:(0,t.jsx)(n.code,{children:"bool?"})}),(0,t.jsx)(n.td,{children:"No"}),(0,t.jsx)(n.td,{children:"Whether to show the login button on modal or not"})]}),(0,t.jsxs)(n.tr,{children:[(0,t.jsx)(n.td,{children:(0,t.jsx)(n.code,{children:"showOnDesktop"})}),(0,t.jsx)(n.td,{children:(0,t.jsx)(n.code,{children:"bool?"})}),(0,t.jsx)(n.td,{children:"No"}),(0,t.jsx)(n.td,{children:"Whether to show the login button on desktop"})]}),(0,t.jsxs)(n.tr,{children:[(0,t.jsx)(n.td,{children:(0,t.jsx)(n.code,{children:"showOnMobile"})}),(0,t.jsx)(n.td,{children:(0,t.jsx)(n.code,{children:"bool?"})}),(0,t.jsx)(n.td,{children:"No"}),(0,t.jsx)(n.td,{children:"Whether to show the login button on mobile"})]})]})]})}),(0,t.jsx)(o.Z,{value:"class",children:(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-dart",children:"class LoginConfigItem {\n  final String verifier;\n  final TypeOfLogin typeOfLogin;\n  final String clientId;\n  final String? name;\n  final String? description;\n  final String? verifierSubIdentifier;\n  final String? logoHover;\n  final String? logoLight;\n  final String? logoDark;\n  final bool? mainOption;\n  final bool? showOnModal;\n  final bool? showOnDesktop;\n  final bool? showOnMobile;\n\n  LoginConfigItem({\n    required this.verifier,\n    required this.typeOfLogin,\n    required this.clientId,\n    this.name,\n    this.description,\n    this.verifierSubIdentifier,\n    this.logoHover,\n    this.logoLight,\n    this.logoDark,\n    this.mainOption,\n    this.showOnModal,\n    this.showOnDesktop,\n    this.showOnMobile,\n  });\n\n  Map<String, dynamic> toJson() {\n    return {\n      'verifier': verifier,\n      'typeOfLogin': typeOfLogin.name,\n      'clientId': clientId,\n      'name': name,\n      'description': description,\n      'verifierSubIdentifier': verifierSubIdentifier,\n      'logoHover': logoHover,\n      'logoLight': logoLight,\n      'logoDark': logoDark,\n      'mainOption': mainOption,\n      'showOnModal': showOnModal,\n      'showOnDesktop': showOnDesktop,\n      'showOnMobile': showOnMobile\n    };\n  }\n}\n"})})})]}),"\n",(0,t.jsx)(n.h3,{id:"typeoflogin",children:(0,t.jsx)(n.code,{children:"typeOfLogin"})}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-dart",children:"enum TypeOfLogin {\n  google,\n  facebook,\n  reddit,\n  discord,\n  twitch,\n  github,\n  apple,\n  kakao,\n  linkedin,\n  twitter,\n  weibo,\n  wechat,\n  line,\n  email_passwordless,\n  email_password,\n  jwt\n}\n"})}),"\n",(0,t.jsxs)(l.Z,{defaultValue:"google",values:[{label:"Google",value:"google"},{label:"Facebook",value:"facebook"},{label:"JWT",value:"jwt"}],children:[(0,t.jsx)(o.Z,{value:"google",children:(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-dart",metastring:'title="Usage"',children:"Future<void> initWeb3Auth() async {\n  final themeMap = HashMap<String, String>();\n  themeMap['primary'] = \"#229954\";\n\n  // highlight-start\n  final loginConfig = new HashMap<String, LoginConfigItem>();\n  loginConfig['google'] = LoginConfigItem(\n    verifier: \"verifier-name\", // get it from web3auth dashboard\n    typeOfLogin: TypeOfLogin.google,\n    clientId: \"google_client_id\" // google's client id\n  );\n  // highlight-end\n\n  Uri redirectUrl;\n  if (Platform.isAndroid) {\n    redirectUrl = Uri.parse('{SCHEME}://{HOST}/auth');\n    // w3a://com.example.w3aflutter/auth\n  } else if (Platform.isIOS) {\n    redirectUrl = Uri.parse('{bundleId}://auth');\n    // com.example.w3aflutter://openlogin\n  } else {\n    throw UnKnownException('Unknown platform');\n  }\n\n  await Web3AuthFlutter.init(\n    Web3AuthOptions(\n      clientId: \"WEB3AUTH_CLIENT_ID\",\n      network: Network.sapphire_mainnet,\n      redirectUrl: redirectUrl,\n      // highlight-next-line\n      loginConfig: loginConfig\n    ),\n  );\n}\n\n// Login\nfinal Web3AuthResponse response = await Web3AuthFlutter.login(\n  // highlight-next-line\n  LoginParams(loginProvider: Provider.google)\n);\n"})})}),(0,t.jsx)(o.Z,{value:"facebook",children:(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-dart",metastring:'title="Usage"',children:"Future<void> initWeb3Auth() async {\n  final themeMap = HashMap<String, String>();\n  themeMap['primary'] = \"#229954\";\n\n  // highlight-start\n  final loginConfig = new HashMap<String, LoginConfigItem>();\n  loginConfig['facebook'] = LoginConfigItem(\n    verifier: \"verifier-name\", // get it from web3auth dashboard\n    typeOfLogin: TypeOfLogin.facebook,\n    clientId: \"facebook_client_id\" // facebook's client id\n  );\n  // highlight-end\n\n  Uri redirectUrl;\n  if (Platform.isAndroid) {\n    redirectUrl = Uri.parse('{SCHEME}://{HOST}/auth');\n    // w3a://com.example.w3aflutter/auth\n  } else if (Platform.isIOS) {\n    redirectUrl = Uri.parse('{bundleId}://auth');\n    // com.example.w3aflutter://openlogin\n  } else {\n    throw UnKnownException('Unknown platform');\n  }\n\n  await Web3AuthFlutter.init(\n    Web3AuthOptions(\n      clientId: \"WEB3AUTH_CLIENT_ID\",\n      network: Network.testnet,\n      redirectUrl: redirectUrl,\n      // highlight-next-line\n      loginConfig: loginConfig\n    ),\n  );\n}\n\n// Login\nfinal Web3AuthResponse response = await Web3AuthFlutter.login(\n  // highlight-next-line\n  LoginParams(loginProvider: Provider.facebook)\n);\n"})})}),(0,t.jsx)(o.Z,{value:"jwt",children:(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-dart",metastring:'title="Usage"',children:"Future<void> initWeb3Auth() async {\n  final themeMap = HashMap<String, String>();\n  themeMap['primary'] = \"#229954\";\n\n  // highlight-start\n  final loginConfig = new HashMap<String, LoginConfigItem>();\n  loginConfig['jwt'] = LoginConfigItem(\n    verifier: \"verifier-name\", // get it from web3auth dashboard\n    typeOfLogin: TypeOfLogin.jwt,\n    clientId: \"web3auth_client_id\" // web3auth's plug and play client id\n  );\n  // highlight-end\n\n  Uri redirectUrl;\n  if (Platform.isAndroid) {\n    redirectUrl = Uri.parse('{SCHEME}://{HOST}/auth');\n    // w3a://com.example.w3aflutter/auth\n  } else if (Platform.isIOS) {\n    redirectUrl = Uri.parse('{bundleId}://auth');\n    // com.example.w3aflutter://openlogin\n  } else {\n    throw UnKnownException('Unknown platform');\n  }\n\n  await Web3AuthFlutter.init(\n    Web3AuthOptions(\n      clientId: \"WEB3AUTH_CLIENT_ID\",\n      network: Network.testnet,\n      redirectUrl: redirectUrl,\n      // highlight-next-line\n      loginConfig: loginConfig\n    ),\n  );\n}\n\n// Login\nfinal Web3AuthResponse response = await Web3AuthFlutter.login(\n  LoginParams(\n    // highlight-start\n    loginProvider: Provider.jwt,\n    extraLoginOptions: ExtraLoginOptions(\n      id_token: \"YOUR_JWT_TOKEN\"\n    )\n    // highlight-end\n  )\n);\n"})})})]}),"\n",(0,t.jsxs)(n.h2,{id:"extraloginoptions-for-special-login-methods",children:[(0,t.jsx)(n.code,{children:"ExtraLoginOptions"})," for special login methods"]}),"\n",(0,t.jsxs)(n.p,{children:["Additional to the ",(0,t.jsx)(n.code,{children:"LoginConfig"})," you can pass extra options to the ",(0,t.jsx)(n.code,{children:"login"})," function to configure the login flow for cases requiring additional info for\nenabling login. The ",(0,t.jsx)(n.code,{children:"ExtraLoginOptions"})," accepts the following parameters:"]}),"\n",(0,t.jsxs)(l.Z,{defaultValue:"table",values:[{label:"Table",value:"table"},{label:"Interface",value:"interface"}],children:[(0,t.jsx)(o.Z,{value:"table",children:(0,t.jsxs)(n.table,{children:[(0,t.jsx)(n.thead,{children:(0,t.jsxs)(n.tr,{children:[(0,t.jsx)(n.th,{children:"Parameter"}),(0,t.jsx)(n.th,{children:"Type"}),(0,t.jsx)(n.th,{children:"Description"})]})}),(0,t.jsxs)(n.tbody,{children:[(0,t.jsxs)(n.tr,{children:[(0,t.jsx)(n.td,{children:(0,t.jsx)(n.code,{children:"domain"})}),(0,t.jsx)(n.td,{children:(0,t.jsx)(n.code,{children:"string"})}),(0,t.jsxs)(n.td,{children:["Your Auth0 account domain such as ",(0,t.jsx)(n.code,{children:"example.auth0.com"})," or ",(0,t.jsx)(n.code,{children:"example.mycompany.com"})," etc."]})]}),(0,t.jsxs)(n.tr,{children:[(0,t.jsx)(n.td,{children:(0,t.jsx)(n.code,{children:"client_id"})}),(0,t.jsx)(n.td,{children:(0,t.jsx)(n.code,{children:"string"})}),(0,t.jsxs)(n.td,{children:["The Client ID found on your Auth0 Application settings page. ",(0,t.jsx)(n.strong,{children:"Use web3auth client id in case of custom JWT login."})]})]}),(0,t.jsxs)(n.tr,{children:[(0,t.jsx)(n.td,{children:(0,t.jsx)(n.code,{children:"redirect_uri"})}),(0,t.jsx)(n.td,{children:(0,t.jsx)(n.code,{children:"string"})}),(0,t.jsx)(n.td,{children:"The default URL where Auth0 will redirect your browser to with the authentication result."})]}),(0,t.jsxs)(n.tr,{children:[(0,t.jsx)(n.td,{children:(0,t.jsx)(n.code,{children:"leeway"})}),(0,t.jsx)(n.td,{children:(0,t.jsx)(n.code,{children:"number"})}),(0,t.jsx)(n.td,{children:"The value in seconds used to account for clock skew in JWT expirations."})]}),(0,t.jsxs)(n.tr,{children:[(0,t.jsx)(n.td,{children:(0,t.jsx)(n.code,{children:"verifierIdField"})}),(0,t.jsx)(n.td,{children:(0,t.jsx)(n.code,{children:"string"})}),(0,t.jsx)(n.td,{children:"The field in jwt token which maps to verifier id."})]}),(0,t.jsxs)(n.tr,{children:[(0,t.jsx)(n.td,{children:(0,t.jsx)(n.code,{children:"isVerifierIdCaseSensitive"})}),(0,t.jsx)(n.td,{children:(0,t.jsx)(n.code,{children:"boolean"})}),(0,t.jsxs)(n.td,{children:["Whether the verifier id field is case sensitive. Defaults to ",(0,t.jsx)(n.code,{children:"true"})]})]})]})]})}),(0,t.jsx)(o.Z,{value:"interface",children:(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-dart",children:'class ExtraLoginOptions {\n  final Map? additionalParams;\n  final String? domain;\n  final String? client_id;\n  final String? leeway;\n  final String? verifierIdField;\n  final bool? isVerifierIdCaseSensitive;\n  final Display? display;\n  final Prompt? prompt;\n  final String? max_age;\n  final String? ui_locales;\n  final String? id_token_hint;\n  final String? id_token;\n  final String? login_hint;\n  final String? acr_values;\n  final String? scope;\n  final String? audience;\n  final String? connection;\n  final String? state;\n  final String? response_type;\n  final String? nonce;\n  final String? redirect_uri;\n\n  ExtraLoginOptions({\n    this.additionalParams = const {},\n    this.domain,\n    this.client_id,\n    this.leeway,\n    this.verifierIdField,\n    this.isVerifierIdCaseSensitive,\n    this.display,\n    this.prompt,\n    this.max_age,\n    this.ui_locales,\n    this.id_token_hint,\n    this.id_token,\n    this.login_hint,\n    this.acr_values,\n    this.scope,\n    this.audience,\n    this.connection,\n    this.state,\n    this.response_type,\n    this.nonce,\n    this.redirect_uri,\n  });\n\n  Map<String, dynamic> toJson() => {\n    "additionalParams": additionalParams,\n    "domain": domain,\n    "client_id": client_id,\n    "leeway": leeway,\n    "verifierIdField": verifierIdField,\n    "isVerifierIdCaseSensitive": isVerifierIdCaseSensitive,\n    "display": display?.name,\n    "prompt": prompt?.name,\n    "max_age": max_age,\n    "ui_locales": ui_locales,\n    "id_token_hint": id_token_hint,\n    "id_token": id_token,\n    "login_hint": login_hint,\n    "acr_values": acr_values,\n    "scope": scope,\n    "audience": audience,\n    "connection": connection,\n    "state": state,\n    "response_type": response_type,\n    "nonce": nonce,\n    "redirect_uri": redirect_uri,\n  };\n}\n'})})})]}),"\n",(0,t.jsx)(n.h3,{id:"using-auth0-login",children:"Using Auth0 Login"}),"\n",(0,t.jsxs)(n.p,{children:["Auth0 has a special login flow, called the SPA flow. This flow requires a ",(0,t.jsx)(n.code,{children:"client_id"})," and ",(0,t.jsx)(n.code,{children:"domain"})," to be passed, and Web3Auth will get the JWT\n",(0,t.jsx)(n.code,{children:"id_token"})," from Auth0 directly. You can pass these configurations in the ",(0,t.jsx)(n.code,{children:"ExtraLoginOptions"})," object in the ",(0,t.jsx)(n.code,{children:"login"})," function."]}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-dart",children:'Future<void> initWeb3Auth() async {\n  final themeMap = HashMap<String, String>();\n  themeMap[\'primary\'] = "#229954";\n\n  // highlight-start\n  final loginConfig = new HashMap<String, LoginConfigItem>();\n  loginConfig[\'jwt\'] = LoginConfigItem(\n    verifier: "verifier-name", // get it from web3auth dashboard for auth0 configuration\n    typeOfLogin: TypeOfLogin.jwt,\n    clientId: "auth0_client_id" // get it from auth0 dashboard\n  );\n  // highlight-end\n\n  Uri redirectUrl;\n  if (Platform.isAndroid) {\n    redirectUrl = Uri.parse(\'{SCHEME}://{HOST}/auth\');\n    // w3a://com.example.w3aflutter/auth\n  } else if (Platform.isIOS) {\n    redirectUrl = Uri.parse(\'{bundleId}://auth\');\n    // com.example.w3aflutter://openlogin\n  } else {\n    throw UnKnownException(\'Unknown platform\');\n  }\n\n  await Web3AuthFlutter.init(\n    Web3AuthOptions(\n      clientId: "WEB3AUTH_CLIENT_ID",\n      network: Network.sapphire_mainnet,\n      redirectUrl: redirectUrl,\n      // highlight-next-line\n      loginConfig: loginConfig,\n    ),\n  );\n}\n\n// Login\nfinal Web3AuthResponse response = await Web3AuthFlutter.login(\n  LoginParams(\n    // highlight-start\n    loginProvider: Provider.jwt,\n    extraLoginOptions: ExtraLoginOptions(\n      domain: "https://tenant-name.us.auth0.com", // Domain of your auth0 app\n      verifierIdField: "sub", // The field in jwt token which maps to verifier id.\n    )\n    // highlight-end\n  )\n);\n'})}),"\n",(0,t.jsx)(n.h3,{id:"custom-jwt-login",children:"Custom JWT Login"}),"\n",(0,t.jsxs)(n.p,{children:["If you're using any other provider like Firebase, AWS Cognito or deploying your own Custom JWT server, you need to put the jwt token into the\n",(0,t.jsx)(n.code,{children:"id_token"})," parameter of the ",(0,t.jsx)(n.code,{children:"ExtraLoginOptions"}),"."]}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-dart",children:"Future<void> initWeb3Auth() async {\n  final themeMap = HashMap<String, String>();\n  themeMap['primary'] = \"#229954\";\n\n  // highlight-start\n  final loginConfig = new HashMap<String, LoginConfigItem>();\n  loginConfig['jwt'] = LoginConfigItem(\n    verifier: \"verifier-name\", // get it from web3auth dashboard\n    typeOfLogin: TypeOfLogin.jwt,\n  );\n  // highlight-end\n\n  Uri redirectUrl;\n  if (Platform.isAndroid) {\n    redirectUrl = Uri.parse('{SCHEME}://{HOST}/auth');\n    // w3a://com.example.w3aflutter/auth\n  } else if (Platform.isIOS) {\n    redirectUrl = Uri.parse('{bundleId}://auth');\n    // com.example.w3aflutter://openlogin\n  } else {\n    throw UnKnownException('Unknown platform');\n  }\n\n  await Web3AuthFlutter.init(\n    Web3AuthOptions(\n      clientId: 'WEB3AUTH_CLIENT_ID',\n      network: Network.sapphire_mainnet,\n      redirectUrl: redirectUrl,\n      // highlight-next-line\n      loginConfig: loginConfig,\n    ),\n  );\n}\n\n// Login\nfinal Web3AuthResponse response = await Web3AuthFlutter.login(\n  LoginParams(\n    // highlight-start\n    loginProvider: Provider.jwt,\n    extraLoginOptions: ExtraLoginOptions(\n      id_token: \"YOUR_ID_TOKEN\",\n    )\n    // highlight-end\n  )\n);\n"})}),"\n",(0,t.jsx)(n.h3,{id:"email-passwordless",children:"Email Passwordless"}),"\n",(0,t.jsxs)(n.p,{children:["To use the ",(0,t.jsx)(n.code,{children:"EMAIL_PASSWORDLESS"})," login, you need to put the email into the ",(0,t.jsx)(n.code,{children:"login_hint"})," parameter of the ",(0,t.jsx)(n.code,{children:"ExtraLoginOptions"}),". By default, the login flow\nwill be ",(0,t.jsx)(n.code,{children:"code"})," flow, if you want to use the ",(0,t.jsx)(n.code,{children:"link"})," flow, you need to put ",(0,t.jsx)(n.code,{children:"flow_type"})," into the ",(0,t.jsx)(n.code,{children:"additionalParams"})," parameter of the ",(0,t.jsx)(n.code,{children:"ExtraLoginOptions"}),"."]}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-dart",children:"Future<void> initWeb3Auth() async {\n  final themeMap = HashMap<String, String>();\n  themeMap['primary'] = \"#229954\";\n\n  final additionalParams = HashMap<String, String>();\n  additionalParams['flow_type'] = \"link\"; // default is 'code'\n\n  Uri redirectUrl;\n  if (Platform.isAndroid) {\n    redirectUrl = Uri.parse('{SCHEME}://{HOST}/auth');\n    // w3a://com.example.w3aflutter/auth\n  } else if (Platform.isIOS) {\n    redirectUrl = Uri.parse('{bundleId}://auth');\n    // com.example.w3aflutter://openlogin\n  } else {\n    throw UnKnownException('Unknown platform');\n  }\n\n  await Web3AuthFlutter.init(\n    Web3AuthOptions(\n      clientId: \"WEB3AUTH_CLIENT_ID\",\n      network: Network.testnet,\n      redirectUrl: redirectUrl,\n    ),\n  );\n}\n\n// Login\nfinal Web3AuthResponse response = await Web3AuthFlutter.login(\n  LoginParams(loginProvider: Provider.email_passwordless,\n    // highlight-start\n    extraLoginOptions: ExtraLoginOptions(\n      login_hint: \"hello@web3auth.io\",\n      additionalParams: additionalParams\n    ),\n    // highlight-end\n  ),\n);\n"})})]})}function g(e={}){const{wrapper:n}={...(0,r.a)(),...e.components};return n?(0,t.jsx)(n,{...e,children:(0,t.jsx)(u,{...e})}):u(e)}},85162:(e,n,i)=>{i.d(n,{Z:()=>l});i(67294);var t=i(36905);const r={tabItem:"tabItem_Ymn6"};var o=i(85893);function l(e){let{children:n,hidden:i,className:l}=e;return(0,o.jsx)("div",{role:"tabpanel",className:(0,t.Z)(r.tabItem,l),hidden:i,children:n})}},74866:(e,n,i)=>{i.d(n,{Z:()=>y});var t=i(67294),r=i(36905),o=i(12466),l=i(16550),s=i(20469),a=i(91980),d=i(67392),h=i(50012);function c(e){return t.Children.toArray(e).filter((e=>"\n"!==e)).map((e=>{if(!e||(0,t.isValidElement)(e)&&function(e){const{props:n}=e;return!!n&&"object"==typeof n&&"value"in n}(e))return e;throw new Error(`Docusaurus error: Bad <Tabs> child <${"string"==typeof e.type?e.type:e.type.name}>: all children of the <Tabs> component should be <TabItem>, and every <TabItem> should have a unique "value" prop.`)}))?.filter(Boolean)??[]}function u(e){const{values:n,children:i}=e;return(0,t.useMemo)((()=>{const e=n??function(e){return c(e).map((e=>{let{props:{value:n,label:i,attributes:t,default:r}}=e;return{value:n,label:i,attributes:t,default:r}}))}(i);return function(e){const n=(0,d.l)(e,((e,n)=>e.value===n.value));if(n.length>0)throw new Error(`Docusaurus error: Duplicate values "${n.map((e=>e.value)).join(", ")}" found in <Tabs>. Every value needs to be unique.`)}(e),e}),[n,i])}function g(e){let{value:n,tabValues:i}=e;return i.some((e=>e.value===n))}function f(e){let{queryString:n=!1,groupId:i}=e;const r=(0,l.k6)(),o=function(e){let{queryString:n=!1,groupId:i}=e;if("string"==typeof n)return n;if(!1===n)return null;if(!0===n&&!i)throw new Error('Docusaurus error: The <Tabs> component groupId prop is required if queryString=true, because this value is used as the search param name. You can also provide an explicit value such as queryString="my-search-param".');return i??null}({queryString:n,groupId:i});return[(0,a._X)(o),(0,t.useCallback)((e=>{if(!o)return;const n=new URLSearchParams(r.location.search);n.set(o,e),r.replace({...r.location,search:n.toString()})}),[o,r])]}function p(e){const{defaultValue:n,queryString:i=!1,groupId:r}=e,o=u(e),[l,a]=(0,t.useState)((()=>function(e){let{defaultValue:n,tabValues:i}=e;if(0===i.length)throw new Error("Docusaurus error: the <Tabs> component requires at least one <TabItem> children component");if(n){if(!g({value:n,tabValues:i}))throw new Error(`Docusaurus error: The <Tabs> has a defaultValue "${n}" but none of its children has the corresponding value. Available values are: ${i.map((e=>e.value)).join(", ")}. If you intend to show no default tab, use defaultValue={null} instead.`);return n}const t=i.find((e=>e.default))??i[0];if(!t)throw new Error("Unexpected error: 0 tabValues");return t.value}({defaultValue:n,tabValues:o}))),[d,c]=f({queryString:i,groupId:r}),[p,m]=function(e){let{groupId:n}=e;const i=function(e){return e?`docusaurus.tab.${e}`:null}(n),[r,o]=(0,h.Nk)(i);return[r,(0,t.useCallback)((e=>{i&&o.set(e)}),[i,o])]}({groupId:r}),x=(()=>{const e=d??p;return g({value:e,tabValues:o})?e:null})();(0,s.Z)((()=>{x&&a(x)}),[x]);return{selectedValue:l,selectValue:(0,t.useCallback)((e=>{if(!g({value:e,tabValues:o}))throw new Error(`Can't select invalid tab value=${e}`);a(e),c(e),m(e)}),[c,m,o]),tabValues:o}}var m=i(72389);const x={tabList:"tabList__CuJ",tabItem:"tabItem_LNqP"};var j=i(85893);function b(e){let{className:n,block:i,selectedValue:t,selectValue:l,tabValues:s}=e;const a=[],{blockElementScrollPositionUntilNextRender:d}=(0,o.o5)(),h=e=>{const n=e.currentTarget,i=a.indexOf(n),r=s[i].value;r!==t&&(d(n),l(r))},c=e=>{let n=null;switch(e.key){case"Enter":h(e);break;case"ArrowRight":{const i=a.indexOf(e.currentTarget)+1;n=a[i]??a[0];break}case"ArrowLeft":{const i=a.indexOf(e.currentTarget)-1;n=a[i]??a[a.length-1];break}}n?.focus()};return(0,j.jsx)("ul",{role:"tablist","aria-orientation":"horizontal",className:(0,r.Z)("tabs",{"tabs--block":i},n),children:s.map((e=>{let{value:n,label:i,attributes:o}=e;return(0,j.jsx)("li",{role:"tab",tabIndex:t===n?0:-1,"aria-selected":t===n,ref:e=>a.push(e),onKeyDown:c,onClick:h,...o,className:(0,r.Z)("tabs__item",x.tabItem,o?.className,{"tabs__item--active":t===n}),children:i??n},n)}))})}function w(e){let{lazy:n,children:i,selectedValue:r}=e;const o=(Array.isArray(i)?i:[i]).filter(Boolean);if(n){const e=o.find((e=>e.props.value===r));return e?(0,t.cloneElement)(e,{className:"margin-top--md"}):null}return(0,j.jsx)("div",{className:"margin-top--md",children:o.map(((e,n)=>(0,t.cloneElement)(e,{key:n,hidden:e.props.value!==r})))})}function v(e){const n=p(e);return(0,j.jsxs)("div",{className:(0,r.Z)("tabs-container",x.tabList),children:[(0,j.jsx)(b,{...e,...n}),(0,j.jsx)(w,{...e,...n})]})}function y(e){const n=(0,m.Z)();return(0,j.jsx)(v,{...e,children:c(e.children)},String(n))}},11151:(e,n,i)=>{i.d(n,{Z:()=>s,a:()=>l});var t=i(67294);const r={},o=t.createContext(r);function l(e){const n=t.useContext(o);return t.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function s(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(r):e.components||r:l(e.components),t.createElement(o.Provider,{value:n},e.children)}}}]);