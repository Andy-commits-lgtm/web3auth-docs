"use strict";(self.webpackChunkweb3auth_docs=self.webpackChunkweb3auth_docs||[]).push([[18186],{22053:(e,r,n)=>{n.r(r),n.d(r,{assets:()=>d,contentTitle:()=>i,default:()=>h,frontMatter:()=>l,metadata:()=>c,toc:()=>u});var t=n(85893),o=n(11151),s=n(74866),a=n(85162);const l={title:"PnP React Native - v3 to v4",displayed_sidebar:"docs",description:"PnP React Native SDK - v3 to v4 | Documentation - Web3Auth"},i=void 0,c={id:"pnp/migration-guides/rn-v3-to-v4",title:"PnP React Native - v3 to v4",description:"PnP React Native SDK - v3 to v4 | Documentation - Web3Auth",source:"@site/docs/pnp/migration-guides/rn-v3-to-v4.mdx",sourceDirName:"pnp/migration-guides",slug:"/pnp/migration-guides/rn-v3-to-v4",permalink:"/docs/pnp/migration-guides/rn-v3-to-v4",draft:!1,unlisted:!1,editUrl:"https://github.com/web3auth/web3auth-docs/edit/master/docs/pnp/migration-guides/rn-v3-to-v4.mdx",tags:[],version:"current",frontMatter:{title:"PnP React Native - v3 to v4",displayed_sidebar:"docs",description:"PnP React Native SDK - v3 to v4 | Documentation - Web3Auth"},sidebar:"docs",previous:{title:"v5 to v6",permalink:"/docs/pnp/migration-guides/no-modal-v5-to-v6"},next:{title:"PnP React Native - v4 to v5",permalink:"/docs/pnp/migration-guides/rn-v4-to-v5"}},d={},u=[{value:"Third parameter to web3auth constructor",id:"third-parameter-to-web3auth-constructor",level:2},{value:"In Expo-managed workflow",id:"in-expo-managed-workflow",level:3},{value:"In Bare React native workflow",id:"in-bare-react-native-workflow",level:3},{value:"Polyfilling required are different",id:"polyfilling-required-are-different",level:2},{value:"For Bare React Native workflow",id:"for-bare-react-native-workflow",level:3},{value:"For Expo managed workflow",id:"for-expo-managed-workflow",level:3},{value:"<code>web3auth.login()</code> does not return any response",id:"web3authlogin-does-not-return-any-response",level:2}];function p(e){const r={admonition:"admonition",code:"code",h2:"h2",h3:"h3",p:"p",pre:"pre",...(0,o.a)(),...e.components};return(0,t.jsxs)(t.Fragment,{children:[(0,t.jsx)(r.h2,{id:"third-parameter-to-web3auth-constructor",children:"Third parameter to web3auth constructor"}),"\n",(0,t.jsxs)(r.p,{children:["To introduce session management without storing the private key in the device, a new parameter is introduced to the web3auth constructor. This is the\n",(0,t.jsx)(r.code,{children:"Storage"})," parameter."]}),"\n",(0,t.jsx)(r.h3,{id:"in-expo-managed-workflow",children:"In Expo-managed workflow"}),"\n",(0,t.jsxs)(r.p,{children:["When using our SDK with an Expo-based React Native app (aka managed workflow), you have to install the ",(0,t.jsx)(r.code,{children:"expo-web-browser"})," package as a ",(0,t.jsx)(r.code,{children:"WebBrowser"}),"\nimplementation. You also need to install ",(0,t.jsx)(r.code,{children:"expo-secure-store"})," to store the user's session."]}),"\n",(0,t.jsx)(r.pre,{children:(0,t.jsx)(r.code,{className:"language-bash",children:"expo install expo-web-browser expo-secure-store\n"})}),"\n",(0,t.jsx)(r.pre,{children:(0,t.jsx)(r.code,{className:"language-tsx",children:'import * as WebBrowser from "expo-web-browser";\nimport * as SecureStore from "expo-secure-store";\nimport Web3Auth, { LOGIN_PROVIDER, OPENLOGIN_NETWORK } from "@web3auth/react-native-sdk";\n\nconst clientId = "YOUR WEB3AUTH CLIENT ID";\n\nconst web3auth = new Web3Auth(WebBrowser, SecureStore, {\n  clientId,\n  network: OPENLOGIN_NETWORK.TESTNET, // or other networks\n});\n'})}),"\n",(0,t.jsx)(r.h3,{id:"in-bare-react-native-workflow",children:"In Bare React native workflow"}),"\n",(0,t.jsxs)(r.p,{children:["Install Web3Auth's React Native SDK in your React Native project. When using our SDK with a bare workflow React Native app, you have to install a\n",(0,t.jsx)(r.code,{children:"WebBrowser"})," implementation made by us and a ",(0,t.jsx)(r.code,{children:"Storage"})," implementation provided by react-native."]}),"\n",(0,t.jsxs)(s.Z,{groupId:"npm2yarn",children:[(0,t.jsx)(a.Z,{value:"npm",children:(0,t.jsx)(r.pre,{children:(0,t.jsx)(r.code,{className:"language-bash",children:"npm install --save @toruslabs/react-native-web-browser react-native-encrypted-storage\n"})})}),(0,t.jsx)(a.Z,{value:"yarn",label:"Yarn",children:(0,t.jsx)(r.pre,{children:(0,t.jsx)(r.code,{className:"language-bash",children:"yarn add @toruslabs/react-native-web-browser react-native-encrypted-storage\n"})})}),(0,t.jsx)(a.Z,{value:"pnpm",label:"pnpm",children:(0,t.jsx)(r.pre,{children:(0,t.jsx)(r.code,{className:"language-bash",children:"pnpm add @toruslabs/react-native-web-browser react-native-encrypted-storage\n"})})})]}),"\n",(0,t.jsx)(r.pre,{children:(0,t.jsx)(r.code,{className:"language-tsx",children:'import * as WebBrowser from "@toruslabs/react-native-web-browser";\nimport EncryptedStorage from "react-native-encrypted-storage";\nimport Web3Auth, { LOGIN_PROVIDER, OPENLOGIN_NETWORK } from "@web3auth/react-native-sdk";\n\nconst clientId = "YOUR_WEB3AUTH_CLIENT_ID";\n\nconst web3auth = new Web3Auth(WebBrowser, EncryptedStorage, {\n  clientId,\n  network: OPENLOGIN_NETWORK.TESTNET, // or other networks\n});\n'})}),"\n",(0,t.jsx)(r.h2,{id:"polyfilling-required-are-different",children:"Polyfilling required are different"}),"\n",(0,t.jsx)(r.h3,{id:"for-bare-react-native-workflow",children:"For Bare React Native workflow"}),"\n",(0,t.jsxs)(r.p,{children:["Add ",(0,t.jsx)(r.code,{children:"globals.js"})," file to your project and import it into your ",(0,t.jsx)(r.code,{children:"index.js"})," file."]}),"\n",(0,t.jsx)(r.pre,{children:(0,t.jsx)(r.code,{className:"language-tsx",metastring:'title="globals.js"',children:'global.Buffer = require("buffer").Buffer;\n\n// Needed so that \'stream-http\' chooses the right default protocol.\nglobal.location = {\n  protocol: "file:",\n};\n\nglobal.process.version = "v16.0.0";\nif (!global.process.version) {\n  global.process = require("process");\n  console.log({ process: global.process });\n}\n\nprocess.browser = true;\n'})}),"\n",(0,t.jsx)(r.pre,{children:(0,t.jsx)(r.code,{className:"language-tsx",metastring:'title="index.js"',children:'import { AppRegistry } from "react-native";\n// highlight-next-line\nimport "./globals";\nimport App from "./App";\nimport { name as appName } from "./app.json";\nconsole.log("index.js");\nAppRegistry.registerComponent(appName, () => App);\n'})}),"\n",(0,t.jsxs)(r.p,{children:["Then, add the following to your ",(0,t.jsx)(r.code,{children:"metro-config.js"})," file."]}),"\n",(0,t.jsxs)(r.admonition,{type:"info",children:[(0,t.jsxs)(r.p,{children:["Install ",(0,t.jsx)(r.code,{children:"empty-module"}),", ",(0,t.jsx)(r.code,{children:"crypto-browserify"})," and ",(0,t.jsx)(r.code,{children:"readable-stream"})," packages."]}),(0,t.jsxs)(s.Z,{groupId:"npm2yarn",children:[(0,t.jsx)(a.Z,{value:"npm",children:(0,t.jsx)(r.pre,{children:(0,t.jsx)(r.code,{className:"language-bash",children:"npm install --save empty-module crypto-browserify readable-stream\n"})})}),(0,t.jsx)(a.Z,{value:"yarn",label:"Yarn",children:(0,t.jsx)(r.pre,{children:(0,t.jsx)(r.code,{className:"language-bash",children:"yarn add empty-module crypto-browserify readable-stream\n"})})}),(0,t.jsx)(a.Z,{value:"pnpm",label:"pnpm",children:(0,t.jsx)(r.pre,{children:(0,t.jsx)(r.code,{className:"language-bash",children:"pnpm add empty-module crypto-browserify readable-stream\n"})})})]})]}),"\n",(0,t.jsx)(r.pre,{children:(0,t.jsx)(r.code,{className:"language-tsx",metastring:'title="metro.config.js"',children:'const { getDefaultConfig } = require("metro-config");\n\nmodule.exports = (async () => {\n  const {\n    resolver: { sourceExts, assetExts },\n  } = await getDefaultConfig(__dirname);\n\n  const defaultSourceExts = [...sourceExts, "svg", "mjs", "cjs"];\n\n  return {\n    resolver: {\n      extraNodeModules: {\n        assert: require.resolve("empty-module"), // assert can be polyfilled here if needed\n        http: require.resolve("empty-module"), // stream-http can be polyfilled here if needed\n        https: require.resolve("empty-module"), // https-browserify can be polyfilled here if needed\n        os: require.resolve("empty-module"), // os-browserify can be polyfilled here if needed\n        url: require.resolve("empty-module"), // url can be polyfilled here if needed\n        zlib: require.resolve("empty-module"), // browserify-zlib can be polyfilled here if needed\n        path: require.resolve("empty-module"),\n        crypto: require.resolve("crypto-browserify"),\n        stream: require.resolve("readable-stream"),\n      },\n\n      assetExts: assetExts.filter((ext) => ext !== "svg"),\n\n      sourceExts: process.env.TEST_REACT_NATIVE ? ["e2e.js"].concat(defaultSourceExts) : defaultSourceExts,\n    },\n    transformer: {\n      getTransformOptions: async () => ({\n        transform: {\n          experimentalImportSupport: false,\n          inlineRequires: true,\n        },\n      }),\n    },\n  };\n})();\n'})}),"\n",(0,t.jsx)(r.h3,{id:"for-expo-managed-workflow",children:"For Expo managed workflow"}),"\n",(0,t.jsxs)(r.p,{children:["Before running ",(0,t.jsx)(r.code,{children:"npm run ios"})," or ",(0,t.jsx)(r.code,{children:"npm run android"})," in your Expo-managed workflow project, run the following command."]}),"\n",(0,t.jsx)(r.pre,{children:(0,t.jsx)(r.code,{className:"language-bash",children:"npx expo prebuild\n"})}),"\n",(0,t.jsx)(r.p,{children:"This generates the native folder structure for your project, just like you would have in a bare workflow project. This is required for the polyfills\nto work."}),"\n",(0,t.jsxs)(r.p,{children:["Create a ",(0,t.jsx)(r.code,{children:"globals.js"})," file in your project and import it into your ",(0,t.jsx)(r.code,{children:"index.js"})," file."]}),"\n",(0,t.jsx)(r.pre,{children:(0,t.jsx)(r.code,{className:"language-tsx",metastring:'title="globals.js"',children:'global.Buffer = require("buffer").Buffer;\n\n// Needed so that \'stream-http\' chooses the right default protocol.\nglobal.location = {\n  protocol: "file:",\n};\n\nglobal.process.version = "v16.0.0";\nif (!global.process.version) {\n  global.process = require("process");\n  console.log({ process: global.process });\n}\n\nprocess.browser = true;\n'})}),"\n",(0,t.jsxs)(r.p,{children:["Then add this line to your ",(0,t.jsx)(r.code,{children:"index.js"})," file."]}),"\n",(0,t.jsx)(r.pre,{children:(0,t.jsx)(r.code,{className:"language-tsx",metastring:'title="index.js"',children:'import "./globals";\n'})}),"\n",(0,t.jsx)(r.p,{children:"Once you have done the above, create a new metro.config.js file in your project and add the following to it."}),"\n",(0,t.jsxs)(r.admonition,{type:"info",children:[(0,t.jsxs)(r.p,{children:["Install ",(0,t.jsx)(r.code,{children:"@expo/metro-config"}),", ",(0,t.jsx)(r.code,{children:"empty-module"}),", ",(0,t.jsx)(r.code,{children:"crypto-browserify"})," and ",(0,t.jsx)(r.code,{children:"readable-stream"})," packages."]}),(0,t.jsxs)(s.Z,{groupId:"npm2yarn",children:[(0,t.jsx)(a.Z,{value:"npm",children:(0,t.jsx)(r.pre,{children:(0,t.jsx)(r.code,{className:"language-bash",children:"npm install --save @expo/metro-config empty-module crypto-browserify readable-stream\n"})})}),(0,t.jsx)(a.Z,{value:"yarn",label:"Yarn",children:(0,t.jsx)(r.pre,{children:(0,t.jsx)(r.code,{className:"language-bash",children:"yarn add @expo/metro-config empty-module crypto-browserify readable-stream\n"})})}),(0,t.jsx)(a.Z,{value:"pnpm",label:"pnpm",children:(0,t.jsx)(r.pre,{children:(0,t.jsx)(r.code,{className:"language-bash",children:"pnpm add @expo/metro-config empty-module crypto-browserify readable-stream\n"})})})]})]}),"\n",(0,t.jsx)(r.pre,{children:(0,t.jsx)(r.code,{className:"language-tsx",metastring:'title="metro.config.js"',children:'const { getDefaultConfig } = require("expo/metro-config");\n\nmodule.exports = (async () => {\n  const {\n    resolver: { sourceExts, assetExts },\n  } = await getDefaultConfig(__dirname);\n\n  const defaultSourceExts = [...sourceExts, "svg", "mjs", "cjs"];\n\n  return {\n    resolver: {\n      extraNodeModules: {\n        assert: require.resolve("empty-module"), // assert can be polyfilled here if needed\n        http: require.resolve("empty-module"), // stream-http can be polyfilled here if needed\n        https: require.resolve("empty-module"), // https-browserify can be polyfilled here if needed\n        os: require.resolve("empty-module"), // os-browserify can be polyfilled here if needed\n        url: require.resolve("empty-module"), // url can be polyfilled here if needed\n        zlib: require.resolve("empty-module"), // browserify-zlib can be polyfilled here if needed\n        process: require.resolve("empty-module"), // process can be polyfilled here if needed\n        path: require.resolve("empty-module"),\n        crypto: require.resolve("crypto-browserify"),\n        stream: require.resolve("readable-stream"),\n      },\n\n      assetExts: assetExts.filter((ext) => ext !== "svg"),\n\n      sourceExts: process.env.TEST_REACT_NATIVE ? ["e2e.js"].concat(defaultSourceExts) : defaultSourceExts,\n    },\n    transformer: {\n      getTransformOptions: async () => ({\n        transform: {\n          experimentalImportSupport: false,\n          inlineRequires: true,\n        },\n      }),\n    },\n  };\n})();\n'})}),"\n",(0,t.jsxs)(r.h2,{id:"web3authlogin-does-not-return-any-response",children:[(0,t.jsx)(r.code,{children:"web3auth.login()"})," does not return any response"]}),"\n",(0,t.jsxs)(r.p,{children:["Previous versions of the SDK returned a response object with the ",(0,t.jsx)(r.code,{children:"login()"})," method. This is no longer the case. The ",(0,t.jsx)(r.code,{children:"login()"})," method now returns a\n",(0,t.jsx)(r.code,{children:"Promise<void>"}),". You can use the getters such as the ",(0,t.jsx)(r.code,{children:"web3auth.privKey()"})," to get the private key of the user (default is ",(0,t.jsx)(r.code,{children:"secp256k1"})," key). Or use\n",(0,t.jsx)(r.code,{children:"web3auth.ed25519Key()"})," to get the ",(0,t.jsx)(r.code,{children:"ed25519"})," key. Lastly, for userInfo, instead of accessing the object properties directly you can use the\n",(0,t.jsx)(r.code,{children:"web3auth.userInfo()"}),". Types for the react-native PnP SDK."]}),"\n",(0,t.jsx)(r.pre,{children:(0,t.jsx)(r.code,{className:"language-tsx",children:'import { EncryptedStorage } from "./types/IEncryptedStorage";\nimport { SecureStore } from "./types/IExpoSecureStore";\nimport { IWeb3Auth, SdkInitParams, SdkLoginParams, State } from "./types/interface";\nimport { IWebBrowser } from "./types/IWebBrowser";\ndeclare class Web3Auth implements IWeb3Auth {\n  private initParams;\n  private webBrowser;\n  private keyStore;\n  private state;\n  private sessionManager;\n  constructor(webBrowser: IWebBrowser, storage: SecureStore | EncryptedStorage, initParams: SdkInitParams);\n  get privKey(): string;\n  get ed25519Key(): string;\n  init(): Promise<void>;\n  login(options: SdkLoginParams): Promise<void>;\n  logout(): Promise<void>;\n  userInfo(): State["userInfo"];\n  private _syncState;\n  private request;\n  private _authorizeSession;\n}\nexport default Web3Auth;\n'})}),"\n",(0,t.jsx)(r.p,{children:"Check out our react-native PnP examples in the PnP examples repo to know how to use the new SDK methods."})]})}function h(e={}){const{wrapper:r}={...(0,o.a)(),...e.components};return r?(0,t.jsx)(r,{...e,children:(0,t.jsx)(p,{...e})}):p(e)}},85162:(e,r,n)=>{n.d(r,{Z:()=>a});n(67294);var t=n(36905);const o={tabItem:"tabItem_Ymn6"};var s=n(85893);function a(e){let{children:r,hidden:n,className:a}=e;return(0,s.jsx)("div",{role:"tabpanel",className:(0,t.Z)(o.tabItem,a),hidden:n,children:r})}},74866:(e,r,n)=>{n.d(r,{Z:()=>j});var t=n(67294),o=n(36905),s=n(12466),a=n(16550),l=n(20469),i=n(91980),c=n(67392),d=n(50012);function u(e){return t.Children.toArray(e).filter((e=>"\n"!==e)).map((e=>{if(!e||(0,t.isValidElement)(e)&&function(e){const{props:r}=e;return!!r&&"object"==typeof r&&"value"in r}(e))return e;throw new Error(`Docusaurus error: Bad <Tabs> child <${"string"==typeof e.type?e.type:e.type.name}>: all children of the <Tabs> component should be <TabItem>, and every <TabItem> should have a unique "value" prop.`)}))?.filter(Boolean)??[]}function p(e){const{values:r,children:n}=e;return(0,t.useMemo)((()=>{const e=r??function(e){return u(e).map((e=>{let{props:{value:r,label:n,attributes:t,default:o}}=e;return{value:r,label:n,attributes:t,default:o}}))}(n);return function(e){const r=(0,c.l)(e,((e,r)=>e.value===r.value));if(r.length>0)throw new Error(`Docusaurus error: Duplicate values "${r.map((e=>e.value)).join(", ")}" found in <Tabs>. Every value needs to be unique.`)}(e),e}),[r,n])}function h(e){let{value:r,tabValues:n}=e;return n.some((e=>e.value===r))}function m(e){let{queryString:r=!1,groupId:n}=e;const o=(0,a.k6)(),s=function(e){let{queryString:r=!1,groupId:n}=e;if("string"==typeof r)return r;if(!1===r)return null;if(!0===r&&!n)throw new Error('Docusaurus error: The <Tabs> component groupId prop is required if queryString=true, because this value is used as the search param name. You can also provide an explicit value such as queryString="my-search-param".');return n??null}({queryString:r,groupId:n});return[(0,i._X)(s),(0,t.useCallback)((e=>{if(!s)return;const r=new URLSearchParams(o.location.search);r.set(s,e),o.replace({...o.location,search:r.toString()})}),[s,o])]}function f(e){const{defaultValue:r,queryString:n=!1,groupId:o}=e,s=p(e),[a,i]=(0,t.useState)((()=>function(e){let{defaultValue:r,tabValues:n}=e;if(0===n.length)throw new Error("Docusaurus error: the <Tabs> component requires at least one <TabItem> children component");if(r){if(!h({value:r,tabValues:n}))throw new Error(`Docusaurus error: The <Tabs> has a defaultValue "${r}" but none of its children has the corresponding value. Available values are: ${n.map((e=>e.value)).join(", ")}. If you intend to show no default tab, use defaultValue={null} instead.`);return r}const t=n.find((e=>e.default))??n[0];if(!t)throw new Error("Unexpected error: 0 tabValues");return t.value}({defaultValue:r,tabValues:s}))),[c,u]=m({queryString:n,groupId:o}),[f,b]=function(e){let{groupId:r}=e;const n=function(e){return e?`docusaurus.tab.${e}`:null}(r),[o,s]=(0,d.Nk)(n);return[o,(0,t.useCallback)((e=>{n&&s.set(e)}),[n,s])]}({groupId:o}),g=(()=>{const e=c??f;return h({value:e,tabValues:s})?e:null})();(0,l.Z)((()=>{g&&i(g)}),[g]);return{selectedValue:a,selectValue:(0,t.useCallback)((e=>{if(!h({value:e,tabValues:s}))throw new Error(`Can't select invalid tab value=${e}`);i(e),u(e),b(e)}),[u,b,s]),tabValues:s}}var b=n(72389);const g={tabList:"tabList__CuJ",tabItem:"tabItem_LNqP"};var x=n(85893);function v(e){let{className:r,block:n,selectedValue:t,selectValue:a,tabValues:l}=e;const i=[],{blockElementScrollPositionUntilNextRender:c}=(0,s.o5)(),d=e=>{const r=e.currentTarget,n=i.indexOf(r),o=l[n].value;o!==t&&(c(r),a(o))},u=e=>{let r=null;switch(e.key){case"Enter":d(e);break;case"ArrowRight":{const n=i.indexOf(e.currentTarget)+1;r=i[n]??i[0];break}case"ArrowLeft":{const n=i.indexOf(e.currentTarget)-1;r=i[n]??i[i.length-1];break}}r?.focus()};return(0,x.jsx)("ul",{role:"tablist","aria-orientation":"horizontal",className:(0,o.Z)("tabs",{"tabs--block":n},r),children:l.map((e=>{let{value:r,label:n,attributes:s}=e;return(0,x.jsx)("li",{role:"tab",tabIndex:t===r?0:-1,"aria-selected":t===r,ref:e=>i.push(e),onKeyDown:u,onClick:d,...s,className:(0,o.Z)("tabs__item",g.tabItem,s?.className,{"tabs__item--active":t===r}),children:n??r},r)}))})}function y(e){let{lazy:r,children:n,selectedValue:o}=e;const s=(Array.isArray(n)?n:[n]).filter(Boolean);if(r){const e=s.find((e=>e.props.value===o));return e?(0,t.cloneElement)(e,{className:"margin-top--md"}):null}return(0,x.jsx)("div",{className:"margin-top--md",children:s.map(((e,r)=>(0,t.cloneElement)(e,{key:r,hidden:e.props.value!==o})))})}function w(e){const r=f(e);return(0,x.jsxs)("div",{className:(0,o.Z)("tabs-container",g.tabList),children:[(0,x.jsx)(v,{...e,...r}),(0,x.jsx)(y,{...e,...r})]})}function j(e){const r=(0,b.Z)();return(0,x.jsx)(w,{...e,children:u(e.children)},String(r))}},11151:(e,r,n)=>{n.d(r,{Z:()=>l,a:()=>a});var t=n(67294);const o={},s=t.createContext(o);function a(e){const r=t.useContext(s);return t.useMemo((function(){return"function"==typeof e?e(r):{...r,...e}}),[r,e])}function l(e){let r;return r=e.disableParentContext?"function"==typeof e.components?e.components(o):e.components||o:a(e.components),t.createElement(s.Provider,{value:r},e.children)}}}]);