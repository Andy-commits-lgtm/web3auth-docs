"use strict";(self.webpackChunkweb3auth_docs=self.webpackChunkweb3auth_docs||[]).push([[81728],{25066:(e,i,r)=>{r.r(i),r.d(i,{assets:()=>o,contentTitle:()=>d,default:()=>h,frontMatter:()=>s,metadata:()=>l,toc:()=>c});var t=r(85893),n=r(11151);const s={title:"Initializing Web3auth CoreKit tKey iOS SDK",sidebar_label:"Initialize",displayed_sidebar:"sdk",description:"Web3Auth CoreKit tKey iOS SDK - Initiatize | Documentation - Web3Auth"},d=void 0,l={id:"sdk/core-kit/tkey-ios/initialize",title:"Initializing Web3auth CoreKit tKey iOS SDK",description:"Web3Auth CoreKit tKey iOS SDK - Initiatize | Documentation - Web3Auth",source:"@site/docs/sdk/core-kit/tkey-ios/initialize.mdx",sourceDirName:"sdk/core-kit/tkey-ios",slug:"/sdk/core-kit/tkey-ios/initialize",permalink:"/docs/sdk/core-kit/tkey-ios/initialize",draft:!1,unlisted:!1,editUrl:"https://github.com/web3auth/web3auth-docs/edit/master/docs/sdk/core-kit/tkey-ios/initialize.mdx",tags:[],version:"current",frontMatter:{title:"Initializing Web3auth CoreKit tKey iOS SDK",sidebar_label:"Initialize",displayed_sidebar:"sdk",description:"Web3Auth CoreKit tKey iOS SDK - Initiatize | Documentation - Web3Auth"},sidebar:"sdk",previous:{title:"Install",permalink:"/docs/sdk/core-kit/tkey-ios/install"},next:{title:"Usage",permalink:"/docs/sdk/core-kit/tkey-ios/usage"}},o={},c=[{value:"Configuring Service Provider",id:"configuring-service-provider",level:2},{value:"Installation",id:"installation",level:3},{value:"Swift Package Manager",id:"swift-package-manager",level:4},{value:"Add the CustomAuth Swift SDK to your project",id:"add-the-customauth-swift-sdk-to-your-project",level:5},{value:"Cocoapods",id:"cocoapods",level:4},{value:"Initialization",id:"initialization",level:3},{value:"<code>SubVerifierDetails</code>",id:"subverifierdetails",level:4},{value:"<code>CustomAuth</code>",id:"customauth",level:4},{value:"Initializing Service Provider",id:"initializing-service-provider",level:2},{value:"Instantiating tKey",id:"instantiating-tkey",level:2},{value:"Parameters",id:"parameters",level:3},{value:"Example",id:"example",level:3}];function a(e){const i={a:"a",code:"code",h2:"h2",h3:"h3",h4:"h4",h5:"h5",li:"li",ol:"ol",p:"p",pre:"pre",strong:"strong",table:"table",tbody:"tbody",td:"td",th:"th",thead:"thead",tr:"tr",ul:"ul",...(0,n.a)(),...e.components};return(0,t.jsxs)(t.Fragment,{children:[(0,t.jsx)(i.p,{children:"Once you have installed the Web3Auth Core Kit tKey SDK, the next step is to initialize it. This involves a few steps, such as initiating the tKey SDK\nwith the service provider and modules."}),"\n",(0,t.jsxs)(i.ul,{children:["\n",(0,t.jsx)(i.li,{children:(0,t.jsx)(i.a,{href:"#configuring-service-provider",children:"Configuration of Service Provider"})}),"\n",(0,t.jsx)(i.li,{children:(0,t.jsx)(i.a,{href:"#initializing-service-provider",children:"Initializing Service Provider"})}),"\n",(0,t.jsx)(i.li,{children:(0,t.jsx)(i.a,{href:"#instantiating-tkey",children:"Instantiation of tKey"})}),"\n"]}),"\n",(0,t.jsx)(i.h2,{id:"configuring-service-provider",children:"Configuring Service Provider"}),"\n",(0,t.jsxs)(i.p,{children:["Service Provider in ",(0,t.jsx)(i.code,{children:"tKey"})," generates a ",(0,t.jsx)(i.a,{href:"/sdk/core-kit/tkey",children:(0,t.jsx)(i.strong,{children:"Share A"})}),", i.e., the private key share managed by a wallet service provider via their\nauthentication flows. This share in our ",(0,t.jsx)(i.a,{href:"/infrastructure/",children:"wallet infrastructure"})," refers to the social login aspect, where we associate a private key\nshare with the user's social login, enabling the seamless login experience."]}),"\n",(0,t.jsxs)(i.p,{children:["To configure your service provider, you must use ",(0,t.jsx)(i.a,{href:"https://github.com/torusresearch/customauth-swift-sdk",children:"CustomAuth Swift SDK"}),". Please note that this\nSDK is not automatically installed with tKey iOS SDK, so you must install it first."]}),"\n",(0,t.jsx)(i.p,{children:(0,t.jsx)(i.strong,{children:"Usage of CustomAuth Swift SDK"})}),"\n",(0,t.jsx)(i.h3,{id:"installation",children:"Installation"}),"\n",(0,t.jsx)(i.h4,{id:"swift-package-manager",children:"Swift Package Manager"}),"\n",(0,t.jsx)(i.h5,{id:"add-the-customauth-swift-sdk-to-your-project",children:"Add the CustomAuth Swift SDK to your project"}),"\n",(0,t.jsxs)(i.ol,{children:["\n",(0,t.jsxs)(i.li,{children:["\n",(0,t.jsxs)(i.p,{children:["In Xcode, with your app project open, navigate to ",(0,t.jsx)(i.strong,{children:"File > Add Packages"}),"."]}),"\n"]}),"\n",(0,t.jsxs)(i.li,{children:["\n",(0,t.jsx)(i.p,{children:"When prompted, add the CustomAuth Swift SDK repository:"}),"\n",(0,t.jsx)(i.pre,{children:(0,t.jsx)(i.code,{className:"language-sh",children:"https://github.com/torusresearch/customauth-swift-sdk\n"})}),"\n",(0,t.jsxs)(i.p,{children:["From the ",(0,t.jsx)(i.code,{children:"Dependency Rule"})," dropdown, select ",(0,t.jsx)(i.code,{children:"Exact Version"})," and enter ",(0,t.jsx)(i.code,{children:"6.0.1"})," as the version."]}),"\n"]}),"\n",(0,t.jsxs)(i.li,{children:["\n",(0,t.jsx)(i.p,{children:"When finished, Xcode will automatically begin resolving and downloading your dependencies in the background."}),"\n"]}),"\n"]}),"\n",(0,t.jsx)(i.h4,{id:"cocoapods",children:"Cocoapods"}),"\n",(0,t.jsx)(i.pre,{children:(0,t.jsx)(i.code,{className:"language-sh",children:"pod 'CustomAuth', '~> 6.0.1'\n"})}),"\n",(0,t.jsx)(i.h3,{id:"initialization",children:"Initialization"}),"\n",(0,t.jsx)(i.p,{children:"Initalize the SDK depending on the login you require."}),"\n",(0,t.jsx)(i.pre,{children:(0,t.jsx)(i.code,{className:"language-swift",children:'import CustomAuth\n\nlet sub = SubVerifierDetails(\n  loginType: .web, // default .web\n  loginProvider: <typeOfLogin>, // .google,\n  clientId: "<your-client-id>",\n  verifierName: "<verifier-name>",\n  redirectURL: "<your-redirect-url>",\n  browserRedirectURL: "<your-browser-redirect-url>")\n\nlet tdsdk = CustomAuth(\n  aggregateVerifierType: "<type-of-verifier>", // singleLogin, singleIdVerifier supported\n  aggregateVerifierName: "<verifier-name>", // Web3Auth Custom verifier name\n  subVerifierDetails: [sub],\n  network: .TESTNET)\n'})}),"\n",(0,t.jsx)(i.h4,{id:"subverifierdetails",children:(0,t.jsx)(i.code,{children:"SubVerifierDetails"})}),"\n",(0,t.jsxs)(i.table,{children:[(0,t.jsx)(i.thead,{children:(0,t.jsxs)(i.tr,{children:[(0,t.jsx)(i.th,{children:"Parameter"}),(0,t.jsx)(i.th,{children:"Type"}),(0,t.jsx)(i.th,{children:"Mandatory"}),(0,t.jsx)(i.th,{children:"Description"})]})}),(0,t.jsxs)(i.tbody,{children:[(0,t.jsxs)(i.tr,{children:[(0,t.jsx)(i.td,{children:(0,t.jsx)(i.code,{children:"loginType"})}),(0,t.jsx)(i.td,{children:"SubVerifierType"}),(0,t.jsx)(i.td,{children:"No"}),(0,t.jsxs)(i.td,{children:["loginType to be used. [ ",(0,t.jsx)(i.code,{children:"web"}),": default, ",(0,t.jsx)(i.code,{children:"installed"}),"]"]})]}),(0,t.jsxs)(i.tr,{children:[(0,t.jsx)(i.td,{children:(0,t.jsx)(i.code,{children:"loginProvider"})}),(0,t.jsx)(i.td,{children:"LoginProviders"}),(0,t.jsx)(i.td,{children:"Yes"}),(0,t.jsxs)(i.td,{children:["loginProvider to be used. [ ",(0,t.jsx)(i.code,{children:"google"}),", ",(0,t.jsx)(i.code,{children:"facebook"}),", ",(0,t.jsx)(i.code,{children:"twitch"}),", ",(0,t.jsx)(i.code,{children:"reddit"}),", ",(0,t.jsx)(i.code,{children:"discord"}),", ",(0,t.jsx)(i.code,{children:"apple"}),", ",(0,t.jsx)(i.code,{children:"github"}),", ",(0,t.jsx)(i.code,{children:"linkedin"}),", ",(0,t.jsx)(i.code,{children:"kakao"}),", ",(0,t.jsx)(i.code,{children:"twitter"}),", ",(0,t.jsx)(i.code,{children:"weibo"}),", ",(0,t.jsx)(i.code,{children:"line"}),", ",(0,t.jsx)(i.code,{children:"wechat"}),", ",(0,t.jsx)(i.code,{children:"email_password"}),", and ",(0,t.jsx)(i.code,{children:"jwt"})," ]"]})]}),(0,t.jsxs)(i.tr,{children:[(0,t.jsx)(i.td,{children:(0,t.jsx)(i.code,{children:"clientId"})}),(0,t.jsx)(i.td,{children:"String"}),(0,t.jsx)(i.td,{children:"Yes"}),(0,t.jsx)(i.td,{children:"login provider's client Id."})]}),(0,t.jsxs)(i.tr,{children:[(0,t.jsx)(i.td,{children:(0,t.jsx)(i.code,{children:"verifier"})}),(0,t.jsx)(i.td,{children:"String"}),(0,t.jsx)(i.td,{children:"Yes"}),(0,t.jsx)(i.td,{children:"Web3Auth verifier name"})]}),(0,t.jsxs)(i.tr,{children:[(0,t.jsx)(i.td,{children:(0,t.jsx)(i.code,{children:"redirectURL"})}),(0,t.jsx)(i.td,{children:"String"}),(0,t.jsx)(i.td,{children:"Yes"}),(0,t.jsxs)(i.td,{children:["It refers to a url for the login flow to redirect into your app, it should have a scheme that is registered by your app, for example ",(0,t.jsx)(i.code,{children:"com.mycompany.myapp://redirect"})]})]}),(0,t.jsxs)(i.tr,{children:[(0,t.jsx)(i.td,{children:(0,t.jsx)(i.code,{children:"browserRedirectURL"})}),(0,t.jsx)(i.td,{children:"String"}),(0,t.jsx)(i.td,{children:"No"}),(0,t.jsxs)(i.td,{children:["It refers to a page that the browser should use in the login flow, it should have a http or https scheme. e.g. ",(0,t.jsx)(i.code,{children:"https://scripts.toruswallet.io/redirect.html"})]})]}),(0,t.jsxs)(i.tr,{children:[(0,t.jsx)(i.td,{children:(0,t.jsx)(i.code,{children:"jwtParams"})}),(0,t.jsx)(i.td,{children:"String"}),(0,t.jsx)(i.td,{children:"No"}),(0,t.jsx)(i.td,{children:"Additional JWT parameters to be passed."})]}),(0,t.jsxs)(i.tr,{children:[(0,t.jsx)(i.td,{children:(0,t.jsx)(i.code,{children:"urlSession"})}),(0,t.jsx)(i.td,{children:"URLSession"}),(0,t.jsx)(i.td,{children:"No"}),(0,t.jsx)(i.td,{children:"Custom URLSession to be used."})]})]})]}),"\n",(0,t.jsx)(i.h4,{id:"customauth",children:(0,t.jsx)(i.code,{children:"CustomAuth"})}),"\n",(0,t.jsxs)(i.table,{children:[(0,t.jsx)(i.thead,{children:(0,t.jsxs)(i.tr,{children:[(0,t.jsx)(i.th,{children:"Parameter"}),(0,t.jsx)(i.th,{children:"Type"}),(0,t.jsx)(i.th,{children:"Mandatory"}),(0,t.jsx)(i.th,{children:"Description"})]})}),(0,t.jsxs)(i.tbody,{children:[(0,t.jsxs)(i.tr,{children:[(0,t.jsx)(i.td,{children:(0,t.jsx)(i.code,{children:"aggregateVerifierType"})}),(0,t.jsx)(i.td,{children:"String"}),(0,t.jsx)(i.td,{children:"Yes"}),(0,t.jsx)(i.td,{children:"Type of the aggregate verifier."})]}),(0,t.jsxs)(i.tr,{children:[(0,t.jsx)(i.td,{children:(0,t.jsx)(i.code,{children:"aggregateVerifier"})}),(0,t.jsx)(i.td,{children:"String"}),(0,t.jsx)(i.td,{children:"Yes"}),(0,t.jsx)(i.td,{children:"Name of the aggregate verifier."})]}),(0,t.jsxs)(i.tr,{children:[(0,t.jsx)(i.td,{children:(0,t.jsx)(i.code,{children:"subVerifierDetails"})}),(0,t.jsxs)(i.td,{children:["[",(0,t.jsx)(i.code,{children:"SubVerifierDetails"}),"]"]}),(0,t.jsx)(i.td,{children:"Yes"}),(0,t.jsx)(i.td,{children:"Array of SubVerifierDetails."})]}),(0,t.jsxs)(i.tr,{children:[(0,t.jsx)(i.td,{children:(0,t.jsx)(i.code,{children:"network"})}),(0,t.jsx)(i.td,{children:"Network"}),(0,t.jsx)(i.td,{children:"Yes"}),(0,t.jsxs)(i.td,{children:["Network to be used. [ ",(0,t.jsx)(i.code,{children:"MAINNET"}),", ",(0,t.jsx)(i.code,{children:"TESTNET"}),", ",(0,t.jsx)(i.code,{children:"CYAN"}),", ",(0,t.jsx)(i.code,{children:"AQUA"}),"]"]})]})]})]}),"\n",(0,t.jsx)(i.h2,{id:"initializing-service-provider",children:"Initializing Service Provider"}),"\n",(0,t.jsxs)(i.ol,{children:["\n",(0,t.jsxs)(i.li,{children:[(0,t.jsx)(i.code,{children:"triggerLogin()"})," returns a promise that resolve with a Dictionary that contain at least ",(0,t.jsx)(i.code,{children:"privateKey"})," and ",(0,t.jsx)(i.code,{children:"publicAddress"})," field."]}),"\n",(0,t.jsxs)(i.li,{children:["Initialize the service provider with the privateKey retrived by the result of ",(0,t.jsx)(i.code,{children:"triggerLogin()"}),"."]}),"\n"]}),"\n",(0,t.jsx)(i.pre,{children:(0,t.jsx)(i.code,{className:"language-swift",children:'tdsdk.triggerLogin(controller: <UIViewController>?, browserType: <method-of-opening-browser>, modalPresentationStyle: <style-of-modal>).done{ data in\n    print("private key rebuild", data)\n    let key = data["privateKey"]\n    // highlight-next-line\n    service_provider = try! ServiceProvider(enable_logging: true, postbox_key: key)\n}.catch{ err in\n    print(err)\n}\n'})}),"\n",(0,t.jsx)(i.h2,{id:"instantiating-tkey",children:"Instantiating tKey"}),"\n",(0,t.jsx)(i.pre,{children:(0,t.jsx)(i.code,{className:"language-swift",children:"let thresholdKey = try? ThresholdKey(\n  storage_layer: storage_layer,\n  service_provider: service_provider,\n  enable_logging: true,\n  manual_sync: false)\n"})}),"\n",(0,t.jsx)(i.h3,{id:"parameters",children:"Parameters"}),"\n",(0,t.jsxs)(i.table,{children:[(0,t.jsx)(i.thead,{children:(0,t.jsxs)(i.tr,{children:[(0,t.jsx)(i.th,{children:"Parameter"}),(0,t.jsx)(i.th,{children:"Type"}),(0,t.jsx)(i.th,{children:"Description"}),(0,t.jsx)(i.th,{children:"Mandatory"})]})}),(0,t.jsxs)(i.tbody,{children:[(0,t.jsxs)(i.tr,{children:[(0,t.jsx)(i.td,{children:(0,t.jsx)(i.code,{children:"metadata"})}),(0,t.jsx)(i.td,{children:(0,t.jsx)(i.code,{children:"Metadata"})}),(0,t.jsx)(i.td,{children:"Metadata object containing the metadata details of tKey."}),(0,t.jsx)(i.td,{children:"No"})]}),(0,t.jsxs)(i.tr,{children:[(0,t.jsx)(i.td,{children:(0,t.jsx)(i.code,{children:"shares"})}),(0,t.jsx)(i.td,{children:(0,t.jsx)(i.code,{children:"ShareStorePolyIdIndexMap"})}),(0,t.jsx)(i.td,{children:"Array of ShareStore with PolyId."}),(0,t.jsx)(i.td,{children:"No"})]}),(0,t.jsxs)(i.tr,{children:[(0,t.jsx)(i.td,{children:(0,t.jsx)(i.code,{children:"storage_layer"})}),(0,t.jsx)(i.td,{children:(0,t.jsx)(i.code,{children:"StorageLayer"})}),(0,t.jsx)(i.td,{children:"Takes in the Storage Provider Instance"}),(0,t.jsx)(i.td,{children:"No"})]}),(0,t.jsxs)(i.tr,{children:[(0,t.jsx)(i.td,{children:(0,t.jsx)(i.code,{children:"service_provider"})}),(0,t.jsx)(i.td,{children:(0,t.jsx)(i.code,{children:"ServiceProvider"})}),(0,t.jsx)(i.td,{children:"Takes in the Service Provider Instance"}),(0,t.jsx)(i.td,{children:"No"})]}),(0,t.jsxs)(i.tr,{children:[(0,t.jsx)(i.td,{children:(0,t.jsx)(i.code,{children:"local_matadata_transitions"})}),(0,t.jsx)(i.td,{children:(0,t.jsx)(i.code,{children:"Metadata"})}),(0,t.jsx)(i.td,{children:"Local metadata transitions"}),(0,t.jsx)(i.td,{children:"No"})]}),(0,t.jsxs)(i.tr,{children:[(0,t.jsx)(i.td,{children:(0,t.jsx)(i.code,{children:"enable_logging"})}),(0,t.jsx)(i.td,{children:(0,t.jsx)(i.code,{children:"Bool"})}),(0,t.jsx)(i.td,{children:"This option is used to specify whether to enable logging or not."}),(0,t.jsx)(i.td,{children:"No"})]}),(0,t.jsxs)(i.tr,{children:[(0,t.jsx)(i.td,{children:(0,t.jsx)(i.code,{children:"manual_sync"})}),(0,t.jsx)(i.td,{children:(0,t.jsx)(i.code,{children:"Bool"})}),(0,t.jsx)(i.td,{children:"manual sync provides atomicity to your tkey share. If manual_sync is true, you should sync your local metadata transitions manually to your storage_layer, which means your storage layer doesn\u2019t know the local changes of your tkey unless you manually sync, gives atomicity. Otherwise, If manual_sync is false, then your local metadata changes will be synced automatically to your storage layer. If manual_sync = true and want to synchronize manually, you need to call sync_local_metadata_transitions() manually."}),(0,t.jsx)(i.td,{children:"No"})]})]})]}),"\n",(0,t.jsx)(i.h3,{id:"example",children:"Example"}),"\n",(0,t.jsx)(i.pre,{children:(0,t.jsx)(i.code,{className:"language-swift",children:'guard let postboxkey = userData["privateKey"] as? String else {\n  alertContent = "Failed to get postboxkey"\n  return\n}\n\nguard let storage_layer = try? StorageLayer(enable_logging: true, host_url: "https://metadata.tor.us", server_time_offset: 2) else {\n  alertContent = "Failed to create storage layer"\n  return\n}\n\nguard let service_provider = try? ServiceProvider(enable_logging: true, postbox_key: postboxkey) else {\n  alertContent = "Failed to create service provider"\n  return\n}\n\nguard let thresholdKey = try? ThresholdKey(\n  storage_layer: storage_layer,\n  service_provider: service_provider,\n  enable_logging: true,\n  manual_sync: false) else {\n    alertContent = "Failed to create threshold key"\n    return\n  }\n\nthreshold_key = thresholdKey\n'})})]})}function h(e={}){const{wrapper:i}={...(0,n.a)(),...e.components};return i?(0,t.jsx)(i,{...e,children:(0,t.jsx)(a,{...e})}):a(e)}},11151:(e,i,r)=>{r.d(i,{Z:()=>l,a:()=>d});var t=r(67294);const n={},s=t.createContext(n);function d(e){const i=t.useContext(s);return t.useMemo((function(){return"function"==typeof e?e(i):{...i,...e}}),[i,e])}function l(e){let i;return i=e.disableParentContext?"function"==typeof e.components?e.components(n):e.components||n:d(e.components),t.createElement(s.Provider,{value:i},e.children)}}}]);