"use strict";(self.webpackChunkweb3auth_docs=self.webpackChunkweb3auth_docs||[]).push([[13278],{42350:(e,n,t)=>{t.d(n,{ZP:()=>l});var o=t(85893),r=t(11151),i=t(85162),s=t(74866);function a(e){const n={a:"a",code:"code",pre:"pre",table:"table",tbody:"tbody",td:"td",th:"th",thead:"thead",tr:"tr",...(0,r.a)(),...e.components};return(0,o.jsxs)(s.Z,{defaultValue:"table",values:[{label:"Table",value:"table"},{label:"Type Declaration",value:"type"}],children:[(0,o.jsx)(i.Z,{value:"table",children:(0,o.jsxs)(n.table,{children:[(0,o.jsx)(n.thead,{children:(0,o.jsxs)(n.tr,{children:[(0,o.jsx)(n.th,{children:"Variable"}),(0,o.jsx)(n.th,{children:"Type"}),(0,o.jsx)(n.th,{children:"Description"}),(0,o.jsx)(n.th,{children:"Mandatory"}),(0,o.jsx)(n.th,{children:"Default Value"})]})}),(0,o.jsxs)(n.tbody,{children:[(0,o.jsxs)(n.tr,{children:[(0,o.jsx)(n.td,{children:(0,o.jsx)(n.code,{children:"clientId?"})}),(0,o.jsx)(n.td,{children:(0,o.jsx)(n.code,{children:"string"})}),(0,o.jsxs)(n.td,{children:["Client ID for web3auth. Obtain your ",(0,o.jsx)(n.code,{children:"clientId"})," from the ",(0,o.jsx)(n.a,{href:"https://dashboard.web3auth.io/",children:"Web3Auth Developer Dashboard"}),". Not required if you're passing the clientId in the web3auth core constructor."]}),(0,o.jsx)(n.td,{children:"No"}),(0,o.jsx)(n.td,{children:"N/A"})]}),(0,o.jsxs)(n.tr,{children:[(0,o.jsx)(n.td,{children:(0,o.jsx)(n.code,{children:"network"})}),(0,o.jsxs)(n.td,{children:[(0,o.jsx)(n.code,{children:"enum"})," (",(0,o.jsx)(n.code,{children:"testnet"}),", ",(0,o.jsx)(n.code,{children:"mainnet"}),", ",(0,o.jsx)(n.code,{children:"cyan"}),", ",(0,o.jsx)(n.code,{children:"aqua"}),", )"]}),(0,o.jsxs)(n.td,{children:["Network specifies the openlogin iframe url url to be used. ",(0,o.jsxs)("ul",{children:[(0,o.jsxs)("li",{children:[(0,o.jsx)(n.code,{children:"'mainnet'"}),": ",(0,o.jsx)(n.a,{href:"https://app.openlogin.com",children:"https://app.openlogin.com"})," will be used which is the production version."]}),(0,o.jsxs)("li",{children:[(0,o.jsx)(n.code,{children:"'cyan'"}),": ",(0,o.jsx)(n.a,{href:"https://cyan.openlogin.com",children:"https://cyan.openlogin.com"})," will be used which is the production cyan version."]}),(0,o.jsxs)("li",{children:[(0,o.jsx)(n.code,{children:"'testnet'"}),": ",(0,o.jsx)(n.a,{href:"https://beta.openlogin.com",children:"https://beta.openlogin.com"})," will be used which is the beta version."]})]})]}),(0,o.jsx)(n.td,{children:"Yes"}),(0,o.jsx)(n.td,{children:"N/A"})]}),(0,o.jsxs)(n.tr,{children:[(0,o.jsx)(n.td,{children:(0,o.jsx)(n.code,{children:"redirectUrl?"})}),(0,o.jsx)(n.td,{children:(0,o.jsx)(n.code,{children:"string"})}),(0,o.jsxs)(n.td,{children:["redirectUrl is the dapp's url where user will be redirected after login. Register this url on the ",(0,o.jsx)(n.a,{href:"https://dashboard.web3auth.io/",children:"Web3Auth Developer Dashboard"})," else initialization will give error."]}),(0,o.jsx)(n.td,{children:"No"}),(0,o.jsx)(n.td,{children:"N/A"})]}),(0,o.jsxs)(n.tr,{children:[(0,o.jsx)(n.td,{children:(0,o.jsx)(n.code,{children:"uxMode?"})}),(0,o.jsxs)(n.td,{children:[(0,o.jsx)(n.code,{children:"enum"})," (",(0,o.jsx)(n.code,{children:"popup"})," and ",(0,o.jsx)(n.code,{children:"redirect"})," )"]}),(0,o.jsxs)(n.td,{children:["Two uxModes are supported: ",(0,o.jsxs)("ul",{children:[(0,o.jsxs)("li",{children:[" ",(0,o.jsx)(n.code,{children:"'POPUP'"}),": In this uxMode, a popup will be shown to user for login."]}),(0,o.jsxs)("li",{children:[(0,o.jsx)(n.code,{children:"'REDIRECT'"}),": In this uxMode, user will be redirected to a new window tab for login."]})]})]}),(0,o.jsx)(n.td,{children:"No"}),(0,o.jsx)(n.td,{children:(0,o.jsx)(n.code,{children:"'POPUP'"})})]}),(0,o.jsxs)(n.tr,{children:[(0,o.jsx)(n.td,{children:(0,o.jsx)(n.code,{children:"replaceUrlOnRedirect?"})}),(0,o.jsx)(n.td,{children:(0,o.jsx)(n.code,{children:"boolean"})}),(0,o.jsx)(n.td,{children:"replaceUrlOnRedirect removes the params from the redirected url after login"}),(0,o.jsx)(n.td,{children:"No"}),(0,o.jsx)(n.td,{children:(0,o.jsx)(n.code,{children:"true"})})]}),(0,o.jsxs)(n.tr,{children:[(0,o.jsx)(n.td,{children:(0,o.jsx)(n.code,{children:"loginConfig?"})}),(0,o.jsx)(n.td,{children:(0,o.jsx)(n.code,{children:"LoginConfig"})}),(0,o.jsx)(n.td,{children:"loginConfig enables you to pass your own login verifiers configuration for various loginProviders. loginConfig is key value map where each key should be a valid loginProvider and value should be custom configuration for that loginProvider."}),(0,o.jsx)(n.td,{children:"No"}),(0,o.jsx)(n.td,{children:"N/A"})]}),(0,o.jsxs)(n.tr,{children:[(0,o.jsx)(n.td,{children:(0,o.jsx)(n.code,{children:"whiteLabel?"})}),(0,o.jsx)(n.td,{children:(0,o.jsx)(n.code,{children:"WhiteLabelData"})}),(0,o.jsx)(n.td,{children:"Options for whitelabling default openlogin modal."}),(0,o.jsx)(n.td,{children:"No"}),(0,o.jsx)(n.td,{children:"N/A"})]}),(0,o.jsxs)(n.tr,{children:[(0,o.jsx)(n.td,{children:(0,o.jsx)(n.code,{children:"useCoreKitKey?"})}),(0,o.jsx)(n.td,{children:(0,o.jsx)(n.code,{children:"boolean"})}),(0,o.jsxs)(n.td,{children:["Use ",(0,o.jsx)(n.code,{children:"useCoreKitKey"})," as ",(0,o.jsx)(n.code,{children:"true"}),", if you're using this SDK with the Single Factor Auth Web SDK"]}),(0,o.jsx)(n.td,{children:"No"}),(0,o.jsx)(n.td,{})]}),(0,o.jsxs)(n.tr,{children:[(0,o.jsx)(n.td,{children:(0,o.jsx)(n.code,{children:"mfaSettings?"})}),(0,o.jsx)(n.td,{children:(0,o.jsx)(n.code,{children:"MfaSettings"})}),(0,o.jsxs)(n.td,{children:["MFA Settings for the user. ",(0,o.jsx)(n.code,{children:"SCALE and above plan only feature."})]}),(0,o.jsx)(n.td,{children:"No"}),(0,o.jsx)(n.td,{children:"N/A"})]})]})]})}),(0,o.jsx)(i.Z,{value:"type",children:(0,o.jsx)(n.pre,{children:(0,o.jsx)(n.code,{className:"language-tsx",children:'adapterSettings?: MakeOptional<OpenLoginOptions, "clientId" | "network"> & {\n    useCoreKitKey?: boolean;\n};\n\nexport type OpenLoginOptions = {\n  /**\n   * You can get your clientId/projectId by registering your\n   * dapp on {@link "https://dashboard.web3auth.io"| developer dashboard}\n   */\n  clientId: string;\n  /**\n   * network specifies the openlogin sdk url to be used.\n   *\n   * - `\'mainnet\'`: https://app.openlogin.com will be used which is the production version.\n   * - `\'cyan\'`: https://cyan.openlogin.com will be used which is the production cyan version.\n   * - `\'testnet\'`: https://testing.openlogin.com will be used which is the testing version.\n   * - `\'development\'`: http://localhost:3000 will be used for development purpose.\n   */\n  network: OPENLOGIN_NETWORK_TYPE;\n  /**\n   * redirectUrl is the dapp\'s url where user will be redirected after login.\n   *\n   * @remarks\n   * Register this url at {@link "https://dashboard.web3auth.io"| developer dashboard}\n   * else initialization will give error.\n   */\n  redirectUrl?: string;\n  /**\n   * two uxModes are supported:-\n   * - `\'POPUP\'`: In this uxMode, a popup will be shown to user for login.\n   * - `\'REDIRECT\'`: In this uxMode, user will be redirected to a new window tab for login.\n   *\n   * @defaultValue `\'POPUP\'`\n   * @remarks\n   *\n   * Use of `\'REDIRECT\'` mode is recommended in browsers where popups might get blocked.\n   */\n  uxMode?: UX_MODE_TYPE;\n  /**\n   * replaceUrlOnRedirect removes the params from the redirected url after login\n   *\n   * @defaultValue true\n   */\n  replaceUrlOnRedirect?: boolean;\n  /**\n   * loginConfig enables you to pass your own login verifiers configuration for various\n   * loginProviders.\n   *\n   * loginConfig is key value map where each key should be a valid loginProvider and value\n   * should be custom configuration for that loginProvider\n   *\n   * @remarks\n   * You can deploy your own verifiers from {@link "https://dashboard.web3auth.io"| developer dashboard}\n   * to use here.\n   *\n   */\n  loginConfig?: LoginConfig;\n  /**\n   * options for whitelabling default openlogin modal.\n   */\n  whiteLabel?: WhiteLabelData;\n  /**\n   * setting to "local" will persist social login session accross browser tabs.\n   *\n   * @defaultValue "local"\n   */\n  storageKey?: "session" | "local";\n  /**\n   * How long should a login session last at a minimum in seconds\n   *\n   * @defaultValue 86400 seconds\n   * @remarks Max value of sessionTime can be 7 * 86400 (7 days)\n   */\n  sessionTime?: number;\n  /**\n   * This parameter will be used to enable mfa factors and set priority on UI listing.\n   * List of factors available\n   * backUpShareFactor | socialFactor | passwordFactor\n   * @defaultValue false\n   */\n  mfaSettings?: MfaSettings;\n};\n\nexport type LoginConfig = Record<string, {\n    verifier: string;\n    /**\n     * The type of login. Refer to enum `LOGIN_TYPE`\n     */\n    typeOfLogin: TypeOfLogin;\n    /**\n     * Display Name. If not provided, we use the default for openlogin app\n     */\n    name?: string;\n    /**\n     * Description for button. If provided, it renders as a full length button. else, icon button\n     */\n    description?: string;\n    /**\n     * Custom client_id. If not provided, we use the default for openlogin app\n     */\n    clientId?: string;\n    verifierSubIdentifier?: string;\n    /**\n     * Logo to be shown on mouse hover. If not provided, we use the default for openlogin app\n     */\n    logoHover?: string;\n    /**\n     * Logo to be shown on dark background (dark theme). If not provided, we use the default for openlogin app\n     */\n    logoLight?: string;\n    /**\n     * Logo to be shown on light background (light theme). If not provided, we use the default for openlogin app\n     */\n    logoDark?: string;\n    /**\n     * Show login button on the main list\n     */\n    mainOption?: boolean;\n    /**\n     * Whether to show the login button on modal or not\n     */\n    showOnModal?: boolean;\n    /**\n     * Whether to show the login button on desktop\n     */\n    showOnDesktop?: boolean;\n    /**\n     * Whether to show the login button on mobile\n     */\n    showOnMobile?: boolean;\n    /**\n     * If we are using social logins as a backup factor,\n     * then this option will be used to show the type of social login\n     * on the social backup login screen.\n     */\n    showOnSocialBackupFactor?: boolean;\n    /**\n     * Custom jwt parameters to configure the login. Useful for Auth0 configuration\n     */\n    jwtParameters?: JwtParameters;\n}>;\n\nexport type WhiteLabelData = {\n    /**\n     * App name to display in the UI\n     */\n    appName?: string;\n    /**\n     * App url\n     */\n    appUrl?: string;\n    /**\n     * App logo to use in light mode\n     */\n    logoLight?: string;\n    /**\n     * App logo to use in dark mode\n     */\n    logoDark?: string;\n    /**\n     * language which will be used by web3auth. app will use browser language if not specified. if language is not supported it will use "en"\n     * en: english\n     * de: german\n     * ja: japanese\n     * ko: korean\n     * zh: mandarin\n     * es: spanish\n     * fr: french\n     * pt: portuguese\n     * nl: dutch\n     *\n     * @defaultValue en\n     */\n    defaultLanguage?: LANGUAGE_TYPE;\n    /**\n     theme\n     *\n     * @defaultValue auto\n     */\n    mode?: THEME_MODE_TYPE;\n    /**\n     * Use logo loader\n     *\n     * @defaultValue false\n     */\n    useLogoLoader?: boolean;\n    /**\n     * Used to customize theme of the login modal with following options\n     * `\'primary\'` - To customize primary color of modal\'s content.\n     */\n    theme?: {\n        primary?: string;\n        gray?: string;\n        red?: string;\n        green?: string;\n        success?: string;\n        warning?: string;\n        error?: string;\n        info?: string;\n        white?: string;\n    };\n    /**\n     * Language specific link for terms and conditions on torus-website. See (examples/vue-app) to configure\n     * e.g.\n     * tncLink: {\n     *  en: "http://example.com/tnc/en",\n     *  ja: "http://example.com/tnc/ja",\n     * }\n     */\n    tncLink?: Partial<Record<LANGUAGE_TYPE, string>>;\n    /**\n     * Language specific link for privacy policy on torus-website. See (examples/vue-app) to configure\n     * e.g.\n     * privacyPolicy: {\n     *  en: "http://example.com/tnc/en",\n     *  ja: "http://example.com/tnc/ja",\n     * }\n     */\n    privacyPolicy?: Partial<Record<LANGUAGE_TYPE, string>>;\n};\n\nexport type MfaSettings = Partial<Record<MFA_FACTOR_TYPE, MFA_SETTINGS>>;\nexport declare const MFA_FACTOR: {\n    readonly DEVICE: "deviceShareFactor";\n    readonly BACKUP_SHARE: "backUpShareFactor";\n    readonly SOCIAL_BACKUP: "socialBackupFactor";\n    readonly PASSWORD: "passwordFactor";\n};\nexport type MFA_FACTOR_TYPE = (typeof MFA_FACTOR)[keyof typeof MFA_FACTOR];\nexport type MFA_SETTINGS = {\n    enable: boolean;\n    priority?: number;\n    mandatory?: boolean;\n};\n\n'})})})]})}function l(e={}){const{wrapper:n}={...(0,r.a)(),...e.components};return n?(0,o.jsx)(n,{...e,children:(0,o.jsx)(a,{...e})}):a(e)}},33043:(e,n,t)=>{t.d(n,{ZP:()=>l});var o=t(85893),r=t(11151),i=t(85162),s=t(74866);function a(e){const n={a:"a",code:"code",pre:"pre",strong:"strong",table:"table",tbody:"tbody",td:"td",th:"th",thead:"thead",tr:"tr",...(0,r.a)(),...e.components};return(0,o.jsxs)(s.Z,{defaultValue:"table",values:[{label:"Table",value:"table"},{label:"Type Declaration",value:"type"}],children:[(0,o.jsx)(i.Z,{value:"table",children:(0,o.jsxs)(n.table,{children:[(0,o.jsx)(n.thead,{children:(0,o.jsxs)(n.tr,{children:[(0,o.jsx)(n.th,{children:"Variable"}),(0,o.jsx)(n.th,{children:"Type"}),(0,o.jsx)(n.th,{children:"Description"}),(0,o.jsx)(n.th,{children:"Mandatory"})]})}),(0,o.jsxs)(n.tbody,{children:[(0,o.jsxs)(n.tr,{children:[(0,o.jsx)(n.td,{children:(0,o.jsx)(n.code,{children:"loginProvider"})}),(0,o.jsxs)(n.td,{children:[(0,o.jsx)(n.code,{children:"LOGIN_PROVIDER_TYPE"})," or ",(0,o.jsx)(n.code,{children:"CUSTOM_LOGIN_PROVIDER_TYPE"})," - ",(0,o.jsx)(n.code,{children:"GOOGLE"}),", ",(0,o.jsx)(n.code,{children:"FACEBOOK"}),", ",(0,o.jsx)(n.code,{children:"REDDIT"}),", ",(0,o.jsx)(n.code,{children:"DISCORD"}),", ",(0,o.jsx)(n.code,{children:"TWITCH"}),", ",(0,o.jsx)(n.code,{children:"APPLE"}),", ",(0,o.jsx)(n.code,{children:"LINE"}),", ",(0,o.jsx)(n.code,{children:"GITHUB"}),", ",(0,o.jsx)(n.code,{children:"KAKAO"}),", ",(0,o.jsx)(n.code,{children:"LINKEDIN"}),", ",(0,o.jsx)(n.code,{children:"TWITTER"}),", ",(0,o.jsx)(n.code,{children:"WEIBO"}),", ",(0,o.jsx)(n.code,{children:"WECHAT"}),", ",(0,o.jsx)(n.code,{children:"EMAIL_PASSWORDLESS"}),", ",(0,o.jsx)(n.code,{children:"SMS_PASSWORDLESS"}),", ",(0,o.jsx)(n.code,{children:"JWT"})]}),(0,o.jsxs)(n.td,{children:["Sets the oauth login method to be used. You can use any of the valid loginProvider from the supported list. ",(0,o.jsx)("br",{}),(0,o.jsx)("br",{})," The list of available options: ",(0,o.jsx)(n.code,{children:"google"}),", ",(0,o.jsx)(n.code,{children:"facebook"}),", ",(0,o.jsx)(n.code,{children:"reddit"}),", ",(0,o.jsx)(n.code,{children:"discord"}),", ",(0,o.jsx)(n.code,{children:"twitch"}),", ",(0,o.jsx)(n.code,{children:"apple"}),", ",(0,o.jsx)(n.code,{children:"line"}),", ",(0,o.jsx)(n.code,{children:"github"}),", ",(0,o.jsx)(n.code,{children:"kakao"}),", ",(0,o.jsx)(n.code,{children:"linkedin"}),", ",(0,o.jsx)(n.code,{children:"twitter"}),", ",(0,o.jsx)(n.code,{children:"weibo"}),", ",(0,o.jsx)(n.code,{children:"wechat"}),", ",(0,o.jsx)(n.code,{children:"email_passwordless"}),", ",(0,o.jsx)(n.code,{children:"sms_passwordless"}),", ",(0,o.jsx)(n.code,{children:"jwt"})]}),(0,o.jsx)(n.td,{children:"No"})]}),(0,o.jsxs)(n.tr,{children:[(0,o.jsx)(n.td,{children:(0,o.jsx)(n.code,{children:"mfaLevel?"})}),(0,o.jsx)(n.td,{children:(0,o.jsx)(n.code,{children:"MfaLevelType"})}),(0,o.jsxs)(n.td,{children:["You can set the ",(0,o.jsx)(n.code,{children:"mfaLevel"})," to customize when mfa screen should be shown to user. It currently accepts 4 values: ",(0,o.jsxs)("ul",{children:[(0,o.jsxs)("li",{children:[" ",(0,o.jsx)(n.strong,{children:(0,o.jsx)(n.code,{children:"'default'"})})," Setting mfa level to ",(0,o.jsx)(n.code,{children:"default"})," will present mfa screen to user on every third login. "]}),(0,o.jsxs)("li",{children:[" ",(0,o.jsx)(n.strong,{children:(0,o.jsx)(n.code,{children:"'optional'"})})," Setting mfa level to ",(0,o.jsx)(n.code,{children:"default"})," will present mfa screen to user on every login but user can skip it. "]}),(0,o.jsxs)("li",{children:[" ",(0,o.jsx)(n.strong,{children:(0,o.jsx)(n.code,{children:"'mandatory'"})})," Setting mfa level to ",(0,o.jsx)(n.code,{children:"mandatory"})," will make it mandatory for user to setup mfa after login. "]}),(0,o.jsxs)("li",{children:[" ",(0,o.jsx)(n.strong,{children:(0,o.jsx)(n.code,{children:"'none'"})})," Setting mfa level to ",(0,o.jsx)(n.code,{children:"none"})," will make the user skip the mfa setup screen"]})]})]}),(0,o.jsx)(n.td,{children:"No"})]}),(0,o.jsxs)(n.tr,{children:[(0,o.jsx)(n.td,{children:(0,o.jsx)(n.code,{children:"extraLoginOptions?"})}),(0,o.jsx)(n.td,{children:(0,o.jsx)(n.code,{children:"ExtraLoginOptions"})}),(0,o.jsxs)(n.td,{children:["This can be used to pass standard oauth login options to loginProvider. For ex: you will have to pass ",(0,o.jsx)(n.code,{children:"login_hint"})," as user's email and ",(0,o.jsx)(n.code,{children:"domain"})," as your app domain in ",(0,o.jsx)(n.code,{children:"extraLoginOptions"})," while using ",(0,o.jsx)(n.code,{children:"email_passwordless"})," loginProvider"]}),(0,o.jsx)(n.td,{children:"No"})]}),(0,o.jsxs)(n.tr,{children:[(0,o.jsx)(n.td,{children:(0,o.jsx)(n.code,{children:"dappShare?"})}),(0,o.jsx)(n.td,{children:(0,o.jsx)(n.code,{children:"string"})}),(0,o.jsxs)(n.td,{children:["Custom Logins can get a dapp share returned to them post successful login. This is useful if the dapps want to use this share to allow users to login seamlessly. ",(0,o.jsx)(n.code,{children:"dappShare"})," is a 24 word seed phrase."]}),(0,o.jsx)(n.td,{children:"No"})]}),(0,o.jsxs)(n.tr,{children:[(0,o.jsx)(n.td,{children:(0,o.jsx)(n.code,{children:"curve"})}),(0,o.jsx)(n.td,{children:(0,o.jsx)(n.code,{children:"SUPPORTED_KEY_CURVES_TYPE"})}),(0,o.jsxs)(n.td,{children:["This curve will be used to determine the public key encoded in the jwt token which returned in ",(0,o.jsx)(n.code,{children:"getUserInfo"})," function after user login. You can use that public key from jwt token as a unique user identifier in your backend. ",(0,o.jsxs)("ul",{children:[(0,o.jsxs)("li",{children:[(0,o.jsx)(n.code,{children:"'secp256k1'"}),": secp256k1 based pub key is added as a wallet public key in jwt token to use."]}),(0,o.jsxs)("li",{children:[(0,o.jsx)(n.code,{children:"'ed25519'"}),": ed25519 based pub key is added as a wallet public key in jwt token to use."]})]})," Note: This parameter won't change format of private key returned by openlogin. Private key returned by openlogin is always ",(0,o.jsx)(n.code,{children:"secp256k1"}),"."]}),(0,o.jsx)(n.td,{children:"No"})]}),(0,o.jsxs)(n.tr,{children:[(0,o.jsx)(n.td,{children:(0,o.jsx)(n.code,{children:"redirectUrl?"})}),(0,o.jsx)(n.td,{children:(0,o.jsx)(n.code,{children:"string"})}),(0,o.jsxs)(n.td,{children:["DApp's URL where user will be redirected after login. Register this URL in the ",(0,o.jsx)(n.a,{href:"https://dashboard.web3auth.io",children:"developer dashboard"}),", else initialization will give error."]}),(0,o.jsx)(n.td,{children:"No"})]}),(0,o.jsxs)(n.tr,{children:[(0,o.jsx)(n.td,{children:(0,o.jsx)(n.code,{children:"appState?"})}),(0,o.jsx)(n.td,{children:(0,o.jsx)(n.code,{children:"string"})}),(0,o.jsx)(n.td,{children:"Any custom state you wish to pass along. This will be returned to you post redirect. Use this to store data that you want to be available to the dApp after login."}),(0,o.jsx)(n.td,{children:"No"})]})]})]})}),(0,o.jsx)(i.Z,{value:"type",children:(0,o.jsx)(n.pre,{children:(0,o.jsx)(n.code,{className:"language-tsx",children:'export type LoginSettings = Partial<LoginParams> & Partial<BaseRedirectParams>;\n\nexport type LoginParams = BaseRedirectParams & {\n  /**\n   * loginProvider sets the oauth login method to be used.\n   * You can use any of the valid loginProvider from the supported list.\n   */\n  loginProvider: LOGIN_PROVIDER_TYPE | CUSTOM_LOGIN_PROVIDER_TYPE;\n  /**\n   * You can set the `mfaLevel` to customize when mfa screen should be shown to user.\n   * It currently accepts 4 values:-\n   * - `\'default\'`: Setting mfa level to `default` will present mfa screen to user on every third login.\n   * - `\'optional\'`: Setting mfa level to `default` will present mfa screen to user on every login but user can skip it.\n   * - `\'mandatory\'`: Setting mfa level to `mandatory` will make it mandatory for user to setup mfa after login.\n   * - `\'none\'`: Setting mfa level to `none` will make the user skip the mfa setup screen\n   *\n   * Defaults to `default`\n   * @defaultValue `default`\n   */\n  mfaLevel?: MfaLevelType;\n  /**\n   * extraLoginOptions can be used to pass standard oauth login options to\n   * loginProvider.\n   *\n   * For ex: you will have to pass `login_hint` as user\'s email and `domain`\n   * as your app domain in `extraLoginOptions` while using `email_passwordless`\n   * loginProvider\n   */\n  extraLoginOptions?: ExtraLoginOptions;\n  /**\n   * Custom Logins can get a dapp share returned to them post successful login.\n   * This is useful if the dapps want to use this share to allow users to login seamlessly\n   * dappShare is a 24 word seed phrase\n   */\n  dappShare?: string;\n  /**\n   * This curve will be used to determine the public key encoded in the jwt token which returned in\n   * `getUserInfo` function after user login.\n   * You can use that public key from jwt token as a unique user identifier in your backend.\n   *\n   * - `\'secp256k1\'`: secp256k1 based pub key is added as a wallet public key in jwt token to use.\n   * - `\'ed25519\'`: ed25519 based pub key is added as a wallet public key in jwt token to use.\n   *\n   * Note: This parameter won\'t change format of private key returned by openlogin. Private key returned\n   * by openlogin is always `secp256k1`. As of now you have to convert it to `\'ed25519\'` if you want.\n   * You can use `@toruslabs/openlogin-ed25519` npm package for this purpose.\n   *\n   *\n   * @defaultValue secp256k1\n   */\n  curve?: SUPPORTED_KEY_CURVES_TYPE;\n};\n\nexport declare type BaseRedirectParams = {\n  /**\n   * redirectUrl is the dapp\'s url where user will be redirected after login.\n   *\n   * @remarks\n   * Register this url at {@link "https://dashboard.web3auth.io"| developer dashboard}\n   * else initialization will give error.\n   */\n  redirectUrl?: string;\n  /**\n   * Any custom state you wish to pass along. This will be returned to you post redirect.\n   * Use this to store data that you want to be available to the dapp after login.\n   */\n  appState?: string;\n};\n\n/**\n * {@label loginProviderType}\n */\nexport declare type LOGIN_PROVIDER_TYPE = typeof LOGIN_PROVIDER[keyof typeof LOGIN_PROVIDER];\nexport declare const LOGIN_PROVIDER: {\n  readonly GOOGLE: "google";\n  readonly FACEBOOK: "facebook";\n  readonly REDDIT: "reddit";\n  readonly DISCORD: "discord";\n  readonly TWITCH: "twitch";\n  readonly APPLE: "apple";\n  readonly LINE: "line";\n  readonly GITHUB: "github";\n  readonly KAKAO: "kakao";\n  readonly LINKEDIN: "linkedin";\n  readonly TWITTER: "twitter";\n  readonly WEIBO: "weibo";\n  readonly WECHAT: "wechat";\n  readonly EMAIL_PASSWORDLESS: "email_passwordless";\n  readonly SMS_PASSWORDLESS: "sms_passwordless";\n  readonly WEBAUTHN: "webauthn";\n  readonly JWT: "jwt";\n};\n\nexport type CUSTOM_LOGIN_PROVIDER_TYPE = string & {\n  toString?: (radix?: number) => string;\n};\n\n/**\n * {@label MfaLevelType}\n */\n\nexport declare type MfaLevelType = typeof MFA_LEVELS[keyof typeof MFA_LEVELS];\nexport declare const MFA_LEVELS: {\n  readonly DEFAULT: "default";\n  readonly OPTIONAL: "optional";\n  readonly MANDATORY: "mandatory";\n  readonly NONE: "none";\n};\n\n/**\n * {@label SUPPORTED_KEY_CURVES_TYPE}\n */\n\nexport declare type SUPPORTED_KEY_CURVES_TYPE = typeof SUPPORTED_KEY_CURVES[keyof typeof SUPPORTED_KEY_CURVES];\nexport declare const SUPPORTED_KEY_CURVES: {\n  readonly SECP256K1: "secp256k1";\n  readonly ED25519: "ed25519";\n};\n'})})})]})}function l(e={}){const{wrapper:n}={...(0,r.a)(),...e.components};return n?(0,o.jsx)(n,{...e,children:(0,o.jsx)(a,{...e})}):a(e)}},27500:(e,n,t)=>{t.r(n),t.d(n,{assets:()=>u,contentTitle:()=>c,default:()=>x,frontMatter:()=>d,metadata:()=>h,toc:()=>p});var o=t(85893),r=t(11151),i=t(74866),s=t(85162),a=t(42350),l=t(33043);const d={title:"Multi Factor Authentication with PnP Web Modal SDK",sidebar_label:"Multi Factor Authentication",displayed_sidebar:"sdk",description:"@web3auth/modal Multi Factor Authentication | Documentation - Web3Auth"},c=void 0,h={id:"sdk/pnp/web/modal/mfa",title:"Multi Factor Authentication with PnP Web Modal SDK",description:"@web3auth/modal Multi Factor Authentication | Documentation - Web3Auth",source:"@site/docs/sdk/pnp/web/modal/mfa.mdx",sourceDirName:"sdk/pnp/web/modal",slug:"/sdk/pnp/web/modal/mfa",permalink:"/docs/sdk/pnp/web/modal/mfa",draft:!1,unlisted:!1,editUrl:"https://github.com/web3auth/web3auth-docs/edit/master/docs/sdk/pnp/web/modal/mfa.mdx",tags:[],version:"current",frontMatter:{title:"Multi Factor Authentication with PnP Web Modal SDK",sidebar_label:"Multi Factor Authentication",displayed_sidebar:"sdk",description:"@web3auth/modal Multi Factor Authentication | Documentation - Web3Auth"},sidebar:"sdk",previous:{title:"Custom Authentication",permalink:"/docs/sdk/pnp/web/modal/custom-authentication"},next:{title:"Top-up Wallet",permalink:"/docs/sdk/pnp/web/modal/initiate-topup"}},u={},p=[{value:"Installing Openlogin Adapter",id:"installing-openlogin-adapter",level:2},{value:"Configuring Openlogin Adapter",id:"configuring-openlogin-adapter",level:2},{value:"Login Settings",id:"login-settings",level:3},{value:"<code>loginSettings</code>",id:"loginsettings",level:4},{value:"Adapter Settings",id:"adapter-settings",level:3},{value:"<code>adapterSettings</code>",id:"adaptersettings",level:4},{value:"<code>mfaSettings</code>",id:"mfasettings",level:5}];function g(e){const n={a:"a",admonition:"admonition",code:"code",h2:"h2",h3:"h3",h4:"h4",h5:"h5",li:"li",p:"p",pre:"pre",strong:"strong",ul:"ul",...(0,r.a)(),...e.components};return(0,o.jsxs)(o.Fragment,{children:[(0,o.jsx)(n.p,{children:"At Web3Auth, we prioritize your security by offering Multi-Factor Authentication (MFA). MFA is an extra layer of protection that verifies your\nidentity when accessing your account. To ensure ownership, you must provide two or more different backup factors. You have the option to choose from\nthe device, social, backup factor (seed phrase), and password factors to guarantee access to your Web3 account. Once you create a recovery factor, MFA\nis enabled, and your keys are divided into three shares for off-chain multi-sig, making the key self-custodial. With backup factors, you can easily\nrecover your account if you lose access to your original device or helps login into a new device."}),"\n",(0,o.jsxs)(n.p,{children:["For a dApp, we provide various options to set up Multi-Factor Authentication. You can customize the MFA screen by setting the ",(0,o.jsx)(n.code,{children:"mfaLevel"})," argument. You\ncan enable or disable a backup factor and change their order. Currently, there are four values for ",(0,o.jsx)(n.code,{children:"mfaLevel"}),":"]}),"\n",(0,o.jsxs)(n.ul,{children:["\n",(0,o.jsxs)(n.li,{children:[(0,o.jsx)(n.code,{children:"default"}),": presents the MFA screen every third login"]}),"\n",(0,o.jsxs)(n.li,{children:[(0,o.jsx)(n.code,{children:"optional"}),": presents the MFA screen on every login, but you can skip it"]}),"\n",(0,o.jsxs)(n.li,{children:[(0,o.jsx)(n.code,{children:"mandatory"}),": make it mandatory to set up MFA after login"]}),"\n",(0,o.jsxs)(n.li,{children:[(0,o.jsx)(n.code,{children:"none"}),": skips the MFA setup screen"]}),"\n"]}),"\n",(0,o.jsx)(n.admonition,{title:"Note",type:"caution",children:(0,o.jsx)(n.p,{children:"If you are using default verifiers, your users may have set up MFA on other dApps that also use default Web3Auth verifiers. In this case, the MFA\nscreen will continue to appear if the user has enabled MFA on other dApps. This is because MFA cannot be turned off once it is enabled."})}),"\n",(0,o.jsx)(n.admonition,{title:"Minimum Growth plan required",type:"note",children:(0,o.jsxs)(n.p,{children:["This is a paid feature and the the minimum ",(0,o.jsx)(n.a,{href:"https://web3auth.io/pricing.html",children:"pricing plan"})," to use this SDK in a production environment is the\n",(0,o.jsx)(n.strong,{children:"Growth Plan"}),". You can use this feature in the development environment for free."]})}),"\n",(0,o.jsx)(n.h2,{id:"installing-openlogin-adapter",children:"Installing Openlogin Adapter"}),"\n",(0,o.jsxs)(n.p,{children:["Social logins in Web3Auth are enabled by the ",(0,o.jsx)(n.a,{href:"/sdk/pnp/web/adapters/openlogin",children:(0,o.jsx)(n.code,{children:"openlogin-adapter"})}),". Natively, it is already present and preconfigured\nwithin the Plug and Play SDK, but for custom configurations, you need to install the adapter package."]}),"\n",(0,o.jsxs)(i.Z,{groupId:"npm2yarn",children:[(0,o.jsx)(s.Z,{value:"npm",children:(0,o.jsx)(n.pre,{children:(0,o.jsx)(n.code,{className:"language-bash",children:"npm install --save @web3auth/openlogin-adapter\n"})})}),(0,o.jsx)(s.Z,{value:"yarn",label:"Yarn",children:(0,o.jsx)(n.pre,{children:(0,o.jsx)(n.code,{className:"language-bash",children:"yarn add @web3auth/openlogin-adapter\n"})})}),(0,o.jsx)(s.Z,{value:"pnpm",label:"pnpm",children:(0,o.jsx)(n.pre,{children:(0,o.jsx)(n.code,{className:"language-bash",children:"pnpm add @web3auth/openlogin-adapter\n"})})})]}),"\n",(0,o.jsx)(n.h2,{id:"configuring-openlogin-adapter",children:"Configuring Openlogin Adapter"}),"\n",(0,o.jsxs)(n.p,{children:["While instantiating the Openlogin Adapter, you can pass some configuration objects to the constructor. One of these configurations is the\n",(0,o.jsx)(n.code,{children:"loginSettings"})," configuration which enables you to make changes in the adapter, enabling add more settings to your login function using web3auth."]}),"\n",(0,o.jsx)(n.admonition,{type:"tip",children:(0,o.jsxs)(n.p,{children:["Checkout the ",(0,o.jsx)(n.a,{href:"/sdk/pnp/web/adapters/openlogin",children:(0,o.jsx)(n.code,{children:"openlogin-adapter"})})," SDK Reference for more details on different configurations you can pass for\ncustomisations."]})}),"\n",(0,o.jsx)(n.h3,{id:"login-settings",children:"Login Settings"}),"\n",(0,o.jsx)(n.h4,{id:"loginsettings",children:(0,o.jsx)(n.code,{children:"loginSettings"})}),"\n",(0,o.jsx)(l.ZP,{}),"\n",(0,o.jsx)(n.pre,{children:(0,o.jsx)(n.code,{className:"language-tsx",metastring:'title="Usage"',children:'import { OpenloginAdapter } from "@web3auth/openlogin-adapter";\n\nconst openloginAdapter = new OpenloginAdapter({\n  loginSettings: {\n    mfaLevel: "mandatory", // default, optional, mandatory, none\n  },\n});\n'})}),"\n",(0,o.jsx)(n.h3,{id:"adapter-settings",children:"Adapter Settings"}),"\n",(0,o.jsx)(n.h4,{id:"adaptersettings",children:(0,o.jsx)(n.code,{children:"adapterSettings"})}),"\n",(0,o.jsx)(a.ZP,{}),"\n",(0,o.jsx)(n.h5,{id:"mfasettings",children:(0,o.jsx)(n.code,{children:"mfaSettings"})}),"\n",(0,o.jsx)(n.admonition,{title:"Minimum SCALE plan required",type:"note",children:(0,o.jsxs)(n.p,{children:["This is a paid feature and the the minimum ",(0,o.jsx)(n.a,{href:"https://web3auth.io/pricing.html",children:"pricing plan"})," to use this SDK in a production environment is the ",(0,o.jsx)(n.strong,{children:"SCALE\nPlan"}),". You can use this feature in the development environment for free."]})}),"\n",(0,o.jsx)(n.pre,{children:(0,o.jsx)(n.code,{className:"language-tsx",metastring:'title="Usage"',children:'import { OpenloginAdapter } from "@web3auth/openlogin-adapter";\n\nconst openloginAdapter = new OpenloginAdapter({\n  loginSettings: {\n    mfaLevel: "mandatory", // default, optional, mandatory, none\n  },\n  adapterSettings: {\n    // SCALE and above plan only feature\n    mfaSettings: {\n      deviceShareFactor: {\n        enable: true,\n        priority: 1,\n        mandatory: true,\n      },\n      backUpShareFactor: {\n        enable: true,\n        priority: 2,\n        mandatory: false,\n      },\n      socialBackupFactor: {\n        enable: true,\n        priority: 3,\n        mandatory: false,\n      },\n      passwordFactor: {\n        enable: true,\n        priority: 4,\n        mandatory: false,\n      },\n    },\n  },\n});\n'})})]})}function x(e={}){const{wrapper:n}={...(0,r.a)(),...e.components};return n?(0,o.jsx)(n,{...e,children:(0,o.jsx)(g,{...e})}):g(e)}},85162:(e,n,t)=>{t.d(n,{Z:()=>s});t(67294);var o=t(36905);const r={tabItem:"tabItem_Ymn6"};var i=t(85893);function s(e){let{children:n,hidden:t,className:s}=e;return(0,i.jsx)("div",{role:"tabpanel",className:(0,o.Z)(r.tabItem,s),hidden:t,children:n})}},74866:(e,n,t)=>{t.d(n,{Z:()=>v});var o=t(67294),r=t(36905),i=t(12466),s=t(16550),a=t(20469),l=t(91980),d=t(67392),c=t(50012);function h(e){return o.Children.toArray(e).filter((e=>"\n"!==e)).map((e=>{if(!e||(0,o.isValidElement)(e)&&function(e){const{props:n}=e;return!!n&&"object"==typeof n&&"value"in n}(e))return e;throw new Error(`Docusaurus error: Bad <Tabs> child <${"string"==typeof e.type?e.type:e.type.name}>: all children of the <Tabs> component should be <TabItem>, and every <TabItem> should have a unique "value" prop.`)}))?.filter(Boolean)??[]}function u(e){const{values:n,children:t}=e;return(0,o.useMemo)((()=>{const e=n??function(e){return h(e).map((e=>{let{props:{value:n,label:t,attributes:o,default:r}}=e;return{value:n,label:t,attributes:o,default:r}}))}(t);return function(e){const n=(0,d.l)(e,((e,n)=>e.value===n.value));if(n.length>0)throw new Error(`Docusaurus error: Duplicate values "${n.map((e=>e.value)).join(", ")}" found in <Tabs>. Every value needs to be unique.`)}(e),e}),[n,t])}function p(e){let{value:n,tabValues:t}=e;return t.some((e=>e.value===n))}function g(e){let{queryString:n=!1,groupId:t}=e;const r=(0,s.k6)(),i=function(e){let{queryString:n=!1,groupId:t}=e;if("string"==typeof n)return n;if(!1===n)return null;if(!0===n&&!t)throw new Error('Docusaurus error: The <Tabs> component groupId prop is required if queryString=true, because this value is used as the search param name. You can also provide an explicit value such as queryString="my-search-param".');return t??null}({queryString:n,groupId:t});return[(0,l._X)(i),(0,o.useCallback)((e=>{if(!i)return;const n=new URLSearchParams(r.location.search);n.set(i,e),r.replace({...r.location,search:n.toString()})}),[i,r])]}function x(e){const{defaultValue:n,queryString:t=!1,groupId:r}=e,i=u(e),[s,l]=(0,o.useState)((()=>function(e){let{defaultValue:n,tabValues:t}=e;if(0===t.length)throw new Error("Docusaurus error: the <Tabs> component requires at least one <TabItem> children component");if(n){if(!p({value:n,tabValues:t}))throw new Error(`Docusaurus error: The <Tabs> has a defaultValue "${n}" but none of its children has the corresponding value. Available values are: ${t.map((e=>e.value)).join(", ")}. If you intend to show no default tab, use defaultValue={null} instead.`);return n}const o=t.find((e=>e.default))??t[0];if(!o)throw new Error("Unexpected error: 0 tabValues");return o.value}({defaultValue:n,tabValues:i}))),[d,h]=g({queryString:t,groupId:r}),[x,f]=function(e){let{groupId:n}=e;const t=function(e){return e?`docusaurus.tab.${e}`:null}(n),[r,i]=(0,c.Nk)(t);return[r,(0,o.useCallback)((e=>{t&&i.set(e)}),[t,i])]}({groupId:r}),j=(()=>{const e=d??x;return p({value:e,tabValues:i})?e:null})();(0,a.Z)((()=>{j&&l(j)}),[j]);return{selectedValue:s,selectValue:(0,o.useCallback)((e=>{if(!p({value:e,tabValues:i}))throw new Error(`Can't select invalid tab value=${e}`);l(e),h(e),f(e)}),[h,f,i]),tabValues:i}}var f=t(72389);const j={tabList:"tabList__CuJ",tabItem:"tabItem_LNqP"};var m=t(85893);function b(e){let{className:n,block:t,selectedValue:o,selectValue:s,tabValues:a}=e;const l=[],{blockElementScrollPositionUntilNextRender:d}=(0,i.o5)(),c=e=>{const n=e.currentTarget,t=l.indexOf(n),r=a[t].value;r!==o&&(d(n),s(r))},h=e=>{let n=null;switch(e.key){case"Enter":c(e);break;case"ArrowRight":{const t=l.indexOf(e.currentTarget)+1;n=l[t]??l[0];break}case"ArrowLeft":{const t=l.indexOf(e.currentTarget)-1;n=l[t]??l[l.length-1];break}}n?.focus()};return(0,m.jsx)("ul",{role:"tablist","aria-orientation":"horizontal",className:(0,r.Z)("tabs",{"tabs--block":t},n),children:a.map((e=>{let{value:n,label:t,attributes:i}=e;return(0,m.jsx)("li",{role:"tab",tabIndex:o===n?0:-1,"aria-selected":o===n,ref:e=>l.push(e),onKeyDown:h,onClick:c,...i,className:(0,r.Z)("tabs__item",j.tabItem,i?.className,{"tabs__item--active":o===n}),children:t??n},n)}))})}function y(e){let{lazy:n,children:t,selectedValue:r}=e;const i=(Array.isArray(t)?t:[t]).filter(Boolean);if(n){const e=i.find((e=>e.props.value===r));return e?(0,o.cloneElement)(e,{className:"margin-top--md"}):null}return(0,m.jsx)("div",{className:"margin-top--md",children:i.map(((e,n)=>(0,o.cloneElement)(e,{key:n,hidden:e.props.value!==r})))})}function w(e){const n=x(e);return(0,m.jsxs)("div",{className:(0,r.Z)("tabs-container",j.tabList),children:[(0,m.jsx)(b,{...e,...n}),(0,m.jsx)(y,{...e,...n})]})}function v(e){const n=(0,f.Z)();return(0,m.jsx)(w,{...e,children:h(e.children)},String(n))}},11151:(e,n,t)=>{t.d(n,{Z:()=>a,a:()=>s});var o=t(67294);const r={},i=o.createContext(r);function s(e){const n=o.useContext(i);return o.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function a(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(r):e.components||r:s(e.components),o.createElement(i.Provider,{value:n},e.children)}}}]);