"use strict";(self.webpackChunkweb3auth_docs=self.webpackChunkweb3auth_docs||[]).push([[45801],{83064:(e,n,t)=>{t.d(n,{ZP:()=>l});var i=t(85893),r=t(11151),o=t(85162),s=t(74866);function d(e){const n={a:"a",code:"code",pre:"pre",strong:"strong",table:"table",tbody:"tbody",td:"td",th:"th",thead:"thead",tr:"tr",...(0,r.a)(),...e.components};return(0,i.jsxs)(s.Z,{defaultValue:"table",values:[{label:"Table",value:"table"},{label:"Type Declarations",value:"type"}],children:[(0,i.jsx)(o.Z,{value:"table",children:(0,i.jsxs)(n.table,{children:[(0,i.jsx)(n.thead,{children:(0,i.jsxs)(n.tr,{children:[(0,i.jsx)(n.th,{children:"Parameter"}),(0,i.jsx)(n.th,{children:"Type"}),(0,i.jsx)(n.th,{children:"Description"}),(0,i.jsx)(n.th,{children:"Optional"})]})}),(0,i.jsxs)(n.tbody,{children:[(0,i.jsxs)(n.tr,{children:[(0,i.jsx)(n.td,{children:(0,i.jsx)(n.code,{children:"chainNamespace"})}),(0,i.jsx)(n.td,{children:(0,i.jsxs)("ul",{children:[(0,i.jsxs)("li",{children:[(0,i.jsx)(n.strong,{children:(0,i.jsx)(n.code,{children:"string"})})," - (Choose between ",(0,i.jsx)(n.code,{children:"eip155"}),", ",(0,i.jsx)(n.code,{children:"solana"})," & ",(0,i.jsx)(n.code,{children:"other"}),")"]})," ",(0,i.jsx)(n.strong,{children:"or"})," ",(0,i.jsxs)("li",{children:[(0,i.jsx)(n.strong,{children:(0,i.jsx)(n.code,{children:"ChainNamespaceType"})})," - (Choose between ",(0,i.jsx)(n.code,{children:"CHAIN_NAMESPACES.EIP155"}),", ",(0,i.jsx)(n.code,{children:"CHAIN_NAMESPACES.SOLANA"})," & ",(0,i.jsx)(n.code,{children:"CHAIN_NAMESPACES.OTHER"}),")"]})]})}),(0,i.jsxs)(n.td,{children:["The namespace of your preferred chain. Checkout ",(0,i.jsx)(n.a,{href:"/sdk/helper-sdks/providers",children:"Providers SDK Reference"})," for understanding RPC Calls."]}),(0,i.jsx)(n.td,{children:"No"})]}),(0,i.jsxs)(n.tr,{children:[(0,i.jsx)(n.td,{children:(0,i.jsx)(n.code,{children:"chainId"})}),(0,i.jsx)(n.td,{children:(0,i.jsx)(n.code,{children:"string"})}),(0,i.jsxs)(n.td,{children:["The chain id of the selected blockchain in ",(0,i.jsx)(n.code,{children:"hex"})]}),(0,i.jsx)(n.td,{children:"No"})]}),(0,i.jsxs)(n.tr,{children:[(0,i.jsx)(n.td,{children:(0,i.jsx)(n.code,{children:"rpcTarget"})}),(0,i.jsx)(n.td,{children:(0,i.jsx)(n.code,{children:"string"})}),(0,i.jsx)(n.td,{children:(0,i.jsxs)("ul",{children:[(0,i.jsxs)("li",{children:["RPC Target URL for the selected ",(0,i.jsx)(n.code,{children:"chainNamespace"})," & ",(0,i.jsx)(n.code,{children:"chainId"}),"."]}),(0,i.jsx)("li",{children:" We provide a default RPC Target for certain blockchains, but due to congestion it might be slow hence it is recommended to provide your own RPC Target URL."})]})}),(0,i.jsx)(n.td,{children:"No"})]}),(0,i.jsxs)(n.tr,{children:[(0,i.jsx)(n.td,{children:(0,i.jsx)(n.code,{children:"wsTarget"})}),(0,i.jsx)(n.td,{children:(0,i.jsx)(n.code,{children:"string"})}),(0,i.jsx)(n.td,{children:"Web socket target URL for the chain"}),(0,i.jsx)(n.td,{children:"Yes"})]}),(0,i.jsxs)(n.tr,{children:[(0,i.jsx)(n.td,{children:(0,i.jsx)(n.code,{children:"displayName"})}),(0,i.jsx)(n.td,{children:(0,i.jsx)(n.code,{children:"string"})}),(0,i.jsx)(n.td,{children:"Display Name for the chain"}),(0,i.jsx)(n.td,{children:"No"})]}),(0,i.jsxs)(n.tr,{children:[(0,i.jsx)(n.td,{children:(0,i.jsx)(n.code,{children:"blockExplorerUrl"})}),(0,i.jsx)(n.td,{children:(0,i.jsx)(n.code,{children:"string"})}),(0,i.jsxs)(n.td,{children:["Blockchain's explorer URL. (eg: ",(0,i.jsx)(n.code,{children:"https://etherscan.io"}),")"]}),(0,i.jsx)(n.td,{children:"No"})]}),(0,i.jsxs)(n.tr,{children:[(0,i.jsx)(n.td,{children:(0,i.jsx)(n.code,{children:"ticker"})}),(0,i.jsx)(n.td,{children:(0,i.jsx)(n.code,{children:"string"})}),(0,i.jsxs)(n.td,{children:["Default currency ticker of the network (e.g: ",(0,i.jsx)(n.code,{children:"ETH"}),")"]}),(0,i.jsx)(n.td,{children:"No"})]}),(0,i.jsxs)(n.tr,{children:[(0,i.jsx)(n.td,{children:(0,i.jsx)(n.code,{children:"tickerName"})}),(0,i.jsx)(n.td,{children:(0,i.jsx)(n.code,{children:"string"})}),(0,i.jsxs)(n.td,{children:["Name for currency ticker (e.g: ",(0,i.jsx)(n.code,{children:"Ethereum"}),")"]}),(0,i.jsx)(n.td,{children:"No"})]}),(0,i.jsxs)(n.tr,{children:[(0,i.jsx)(n.td,{children:(0,i.jsx)(n.code,{children:"decimals"})}),(0,i.jsx)(n.td,{children:(0,i.jsx)(n.code,{children:"number"})}),(0,i.jsxs)(n.td,{children:["Number of decimals for the currency ticker (e.g: ",(0,i.jsx)(n.code,{children:"18"}),")"]}),(0,i.jsx)(n.td,{children:"Yes"})]}),(0,i.jsxs)(n.tr,{children:[(0,i.jsx)(n.td,{children:(0,i.jsx)(n.code,{children:"logo"})}),(0,i.jsx)(n.td,{children:(0,i.jsx)(n.code,{children:"string"})}),(0,i.jsx)(n.td,{children:"Logo for the chain"}),(0,i.jsx)(n.td,{children:"Yes"})]}),(0,i.jsxs)(n.tr,{children:[(0,i.jsx)(n.td,{children:(0,i.jsx)(n.code,{children:"isTestnet"})}),(0,i.jsx)(n.td,{children:(0,i.jsx)(n.code,{children:"boolean"})}),(0,i.jsx)(n.td,{children:"Defines whether the network is testnet or not."}),(0,i.jsx)(n.td,{children:"Yes"})]})]})]})}),(0,i.jsx)(o.Z,{value:"type",children:(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-tsx",children:'declare const CHAIN_NAMESPACES: {\n  readonly EIP155: "eip155";\n  readonly SOLANA: "solana";\n  readonly OTHER: "other";\n};\n\ndeclare type ChainNamespaceType = typeof CHAIN_NAMESPACES[keyof typeof CHAIN_NAMESPACES];\ndeclare type CustomChainConfig = {\n  chainNamespace: ChainNamespaceType;\n  /**\n   * The chain id of the chain\n   */\n  chainId: string;\n  /**\n   * RPC target Url for the chain\n   */\n  rpcTarget: string;\n  /**\n   * web socket target Url for the chain\n   */\n  wsTarget?: string;\n  /**\n   * Display Name for the chain\n   */\n  displayName: string;\n  /**\n   * Url of the block explorer\n   */\n  blockExplorerUrl: string;\n  /**\n   * Default currency ticker of the network (e.g: ETH)\n   */\n  ticker: string;\n  /**\n   * Name for currency ticker (e.g: `Ethereum`)\n   */\n  tickerName: string;\n  /**\n   * Number of decimals for the currency ticker (e.g: 18)\n   */\n  decimals?: number;\n  /**\n   * Logo for the chain\n   */\n  logo: string;\n  /**\n   * Whether the network is testnet or not\n   */\n  isTestnet?: boolean;\n};\n'})})})]})}function l(e={}){const{wrapper:n}={...(0,r.a)(),...e.components};return n?(0,i.jsx)(n,{...e,children:(0,i.jsx)(d,{...e})}):d(e)}},24347:(e,n,t)=>{t.d(n,{ZP:()=>l});var i=t(85893),r=t(11151),o=t(85162),s=t(74866);function d(e){const n={code:"code",pre:"pre",...(0,r.a)(),...e.components};return(0,i.jsxs)(s.Z,{defaultValue:"google",values:[{label:"Google",value:"google"},{label:"Auth0",value:"auth0"},{label:"JWT",value:"jwt"},{label:"Facebook",value:"facebook"},{label:"Discord",value:"discord"},{label:"Email Passwordless",value:"email_passwordless"},{label:"SMS Passwordless",value:"sms_passwordless"},{label:"Twitter",value:"twitter"},{label:"Reddit",value:"reddit"},{label:"Twitch",value:"twitch"},{label:"Apple",value:"apple"},{label:"GitHub",value:"github"},{label:"LinkedIn",value:"linkedin"}],children:[(0,i.jsx)(o.Z,{value:"google",children:(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-tsx",children:'import { WALLET_ADAPTERS } from "@web3auth/base";\n// inside your async function with on click handler\nconst web3authProvider = await web3auth.connectTo(WALLET_ADAPTERS.OPENLOGIN, {\n  loginProvider: "google",\n});\n'})})}),(0,i.jsx)(o.Z,{value:"auth0",children:(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-tsx",children:'const web3authProvider = await web3auth.connectTo(WALLET_ADAPTERS.OPENLOGIN, {\n  loginProvider: "jwt",\n  extraLoginOptions: {\n    verifierIdField: "sub", // same as your JWT Verifier ID\n    domain: "https://YOUR-APPLICATION-DOMAIN", // your service provider domain, e.g. Auth0\n  },\n});\n'})})}),(0,i.jsx)(o.Z,{value:"jwt",children:(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-tsx",children:'// Login using JWT, either obtained from Firebase, Okta, Auth0 or bring your own JWT.\nconst web3authProvider = await web3auth.connectTo(WALLET_ADAPTERS.OPENLOGIN, {\n  loginProvider: "jwt",\n  extraLoginOptions: {\n    id_token: "idToken", // in JWT Format\n    verifierIdField: "sub", // same as your JWT Verifier ID\n  },\n});\n'})})}),(0,i.jsx)(o.Z,{value:"facebook",children:(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-tsx",children:'import { WALLET_ADAPTERS } from "@web3auth/base";\n\nconst web3authProvider = await web3auth.connectTo(WALLET_ADAPTERS.OPENLOGIN, {\n  loginProvider: "facebook",\n});\n'})})}),(0,i.jsx)(o.Z,{value:"email_passwordless",children:(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-tsx",children:'import { WALLET_ADAPTERS } from "@web3auth/base";\n\nconst web3authProvider = await web3auth.connectTo(WALLET_ADAPTERS.OPENLOGIN, {\n  loginProvider: "email_passwordless",\n  extraLoginOptions: {\n    login_hint: "hello@web3auth.io", // email to send the OTP to\n  },\n});\n'})})}),(0,i.jsx)(o.Z,{value:"sms_passwordless",children:(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-tsx",children:'import { WALLET_ADAPTERS } from "@web3auth/base";\n\nconst web3authProvider = await web3auth.connectTo(WALLET_ADAPTERS.OPENLOGIN, {\n  loginProvider: "sms_passwordless",\n  extraLoginOptions: {\n    login_hint: "+65-XXXXXXX",\n  },\n});\n'})})}),(0,i.jsx)(o.Z,{value:"discord",children:(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-tsx",children:'import { WALLET_ADAPTERS } from "@web3auth/base";\n\nconst web3authProvider = await web3auth.connectTo(WALLET_ADAPTERS.OPENLOGIN, {\n  loginProvider: "discord",\n});\n'})})}),(0,i.jsx)(o.Z,{value:"twitter",children:(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-tsx",children:'import { WALLET_ADAPTERS } from "@web3auth/base";\n\nconst web3authProvider = await web3auth.connectTo(WALLET_ADAPTERS.OPENLOGIN, {\n  loginProvider: "twitter",\n});\n'})})}),(0,i.jsx)(o.Z,{value:"reddit",children:(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-tsx",children:'import { WALLET_ADAPTERS } from "@web3auth/base";\n\nconst web3authProvider = await web3auth.connectTo(WALLET_ADAPTERS.OPENLOGIN, {\n  loginProvider: "reddit",\n});\n'})})}),(0,i.jsx)(o.Z,{value:"twitch",children:(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-tsx",children:'import { WALLET_ADAPTERS } from "@web3auth/base";\n\nconst web3authProvider = await web3auth.connectTo(WALLET_ADAPTERS.OPENLOGIN, {\n  loginProvider: "twitch",\n});\n'})})}),(0,i.jsx)(o.Z,{value:"apple",children:(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-tsx",children:'import { WALLET_ADAPTERS } from "@web3auth/base";\n\nconst web3authProvider = await web3auth.connectTo(WALLET_ADAPTERS.OPENLOGIN, {\n  loginProvider: "apple",\n});\n'})})}),(0,i.jsx)(o.Z,{value:"github",children:(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-tsx",children:'import { WALLET_ADAPTERS } from "@web3auth/base";\n\nconst web3authProvider = await web3auth.connectTo(WALLET_ADAPTERS.OPENLOGIN, {\n  loginProvider: "github",\n});\n'})})}),(0,i.jsx)(o.Z,{value:"linkedin",children:(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-tsx",children:'import { WALLET_ADAPTERS } from "@web3auth/base";\n\nconst web3authProvider = await web3auth.connectTo(WALLET_ADAPTERS.OPENLOGIN, {\n  loginProvider: "linkedin",\n});\n'})})})]})}function l(e={}){const{wrapper:n}={...(0,r.a)(),...e.components};return n?(0,i.jsx)(n,{...e,children:(0,i.jsx)(d,{...e})}):d(e)}},25462:(e,n,t)=>{t.d(n,{ZP:()=>l});var i=t(85893),r=t(11151),o=t(85162),s=t(74866);function d(e){const n={code:"code",h3:"h3",p:"p",pre:"pre",table:"table",tbody:"tbody",td:"td",th:"th",thead:"thead",tr:"tr",...(0,r.a)(),...e.components};return(0,i.jsxs)(i.Fragment,{children:[(0,i.jsx)(n.h3,{id:"connectto",children:(0,i.jsx)(n.code,{children:"connectTo()"})}),"\n",(0,i.jsxs)(n.p,{children:["To log a user in the Web3Auth Plug and Play No Modal SDK, you need to call the ",(0,i.jsx)(n.code,{children:"connectTo()"})," function. This function helps you customize the login\nprocess according to your own needs, by taking the following parameters:"]}),"\n",(0,i.jsxs)(s.Z,{defaultValue:"table",values:[{label:"Table",value:"table"},{label:"Function Definition",value:"definition"}],children:[(0,i.jsx)(o.Z,{value:"table",children:(0,i.jsxs)(n.table,{children:[(0,i.jsx)(n.thead,{children:(0,i.jsxs)(n.tr,{children:[(0,i.jsx)(n.th,{children:"Variable"}),(0,i.jsx)(n.th,{children:"Type"}),(0,i.jsx)(n.th,{children:"Description"}),(0,i.jsx)(n.th,{children:"Mandatory"})]})}),(0,i.jsxs)(n.tbody,{children:[(0,i.jsxs)(n.tr,{children:[(0,i.jsx)(n.td,{children:(0,i.jsx)(n.code,{children:"walletName"})}),(0,i.jsx)(n.td,{children:(0,i.jsx)(n.code,{children:"WALLET_ADAPTER_TYPE"})}),(0,i.jsx)(n.td,{children:"Wallet Adapter you want to use for logging in your user"}),(0,i.jsx)(n.td,{children:"Yes"})]}),(0,i.jsxs)(n.tr,{children:[(0,i.jsx)(n.td,{children:(0,i.jsx)(n.code,{children:"loginParams"})}),(0,i.jsx)(n.td,{children:(0,i.jsx)(n.code,{children:"object"})}),(0,i.jsx)(n.td,{children:"Login Parameters specific to your wallet adapter"}),(0,i.jsx)(n.td,{children:"No"})]})]})]})}),(0,i.jsxs)(o.Z,{value:"definition",children:[(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-tsx",children:"  connectTo<T>(walletName: WALLET_ADAPTER_TYPE, loginParams?: T): Promise<IProvider | null>;\n"})}),(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-tsx",children:"export type WALLET_ADAPTER_TYPE = typeof WALLET_ADAPTERS[keyof typeof WALLET_ADAPTERS];\nexport declare const WALLET_ADAPTERS: {\n  OPENLOGIN: string;\n  WALLET_CONNECT_V2: string;\n  TORUS_SOLANA: string;\n  PHANTOM: string;\n  SOLFLARE: string;\n  SLOPE: string;\n  TORUS_EVM: string;\n  METAMASK: string;\n  COINBASE: string;\n};\n"})})]})]})]})}function l(e={}){const{wrapper:n}={...(0,r.a)(),...e.components};return n?(0,i.jsx)(n,{...e,children:(0,i.jsx)(d,{...e})}):d(e)}},55978:(e,n,t)=>{t.d(n,{ZP:()=>s});var i=t(85893),r=t(11151);function o(e){const n={code:"code",pre:"pre",...(0,r.a)(),...e.components};return(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-javascript",children:'import { OpenloginAdapter } from "@web3auth/openlogin-adapter";\n\nconst openloginAdapter = new OpenloginAdapter({\n  adapterSettings: {\n    clientId, //Optional - Provide only if you haven\'t provided it in the Web3Auth Instantiation Code\n    network: "sapphire_mainnet", // Optional - Provide only if you haven\'t provided it in the Web3Auth Instantiation Code\n    uxMode: "popup",\n    loginConfig: {\n      jwt: {\n        verifier: "YOUR-VERIFIER-NAME-ON-WEB3AUTH-DASHBOARD",\n        typeOfLogin: "jwt",\n        clientId: "YOUR-CLIENTID-FROM-LOGIN-PROVIDER",\n      },\n    },\n  },\n  privateKeyProvider,\n});\n\nweb3auth.configureAdapter(openloginAdapter);\n'})})}function s(e={}){const{wrapper:n}={...(0,r.a)(),...e.components};return n?(0,i.jsx)(n,{...e,children:(0,i.jsx)(o,{...e})}):o(e)}},45300:(e,n,t)=>{t.d(n,{ZP:()=>l});var i=t(85893),r=t(11151),o=t(85162),s=t(74866);function d(e){const n={code:"code",pre:"pre",...(0,r.a)(),...e.components};return(0,i.jsxs)(s.Z,{defaultValue:"google",values:[{label:"Google",value:"google"},{label:"Facebook",value:"facebook"},{label:"Discord",value:"discord"},{label:"Twitch",value:"twitch"}],children:[(0,i.jsx)(o.Z,{value:"google",children:(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-tsx",children:'import OpenloginAdapter from "@web3auth/openlogin-adapter";\n\nconst openloginAdapter = new OpenloginAdapter({\n  adapterSettings: {\n    clientId, //Optional - Provide only if you haven\'t provided it in the Web3Auth Instantiation Code\n    uxMode: "popup",\n    // highlight-start\n    loginConfig: {\n      // Google login\n      google: {\n        verifier: "YOUR_GOOGLE_VERIFIER_NAME", // Please create a verifier on the developer dashboard and pass the name here\n        typeOfLogin: "google", // Pass on the login provider of the verifier you\'ve created\n        clientId: "GOOGLE_CLIENT_ID.apps.googleusercontent.com", // Pass on the clientId of the login provider here - Please note this differs from the Web3Auth ClientID. This is the JWT Client ID\n      },\n    },\n    // highlight-end\n  },\n  privateKeyProvider,\n});\nweb3auth.configureAdapter(openloginAdapter);\n'})})}),(0,i.jsx)(o.Z,{value:"facebook",children:(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-tsx",children:'import OpenloginAdapter from "@web3auth/openlogin-adapter";\n\nconst openloginAdapter = new OpenloginAdapter({\n  adapterSettings: {\n    clientId, //Optional - Provide only if you haven\'t provided it in the Web3Auth Instantiation Code\n    uxMode: "popup",\n    // highlight-start\n    loginConfig: {\n      // Facebook login\n      facebook: {\n        verifier: "YOUR_FACEBOOK_VERIFIER_NAME", // Please create a verifier on the developer dashboard and pass the name here\n        typeOfLogin: "facebook", // Pass on the login provider of the verifier you\'ve created\n        clientId: "FACEBOOK_CLIENT_ID_1234567890", // Pass on the clientId of the login provider here - Please note this differs from the Web3Auth ClientID. This is the JWT Client ID\n      },\n    },\n    // highlight-end\n  },\n  privateKeyProvider,\n});\nweb3auth.configureAdapter(openloginAdapter);\n'})})}),(0,i.jsx)(o.Z,{value:"discord",children:(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-tsx",children:'import OpenloginAdapter from "@web3auth/openlogin-adapter";\n\nconst openloginAdapter = new OpenloginAdapter({\n  adapterSettings: {\n    clientId, //Optional - Provide only if you haven\'t provided it in the Web3Auth Instantiation Code\n    uxMode: "popup",\n    // highlight-start\n    loginConfig: {\n      // Discord login\n      discord: {\n        verifier: "YOUR_DISCORD_VERIFIER_NAME", // Please create a verifier on the developer dashboard and pass the name here\n        typeOfLogin: "discord", // Pass on the login provider of the verifier you\'ve created\n        clientId: "DISCORD_CLIENT_ID_1234567890", //use your app client id you got from discord\n      },\n    },\n    // highlight-end\n  },\n  privateKeyProvider,\n});\nweb3auth.configureAdapter(openloginAdapter);\n'})})}),(0,i.jsx)(o.Z,{value:"twitch",children:(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-tsx",children:'import OpenloginAdapter from "@web3auth/openlogin-adapter";\n\nconst openloginAdapter = new OpenloginAdapter({\n  adapterSettings: {\n    clientId, //Optional - Provide only if you haven\'t provided it in the Web3Auth Instantiation Code\n    uxMode: "popup",\n    // highlight-start\n    loginConfig: {\n      // Facebook login\n      facebook: {\n        verifier: "YOUR_TWITCH_VERIFIER_NAME", // Please create a verifier on the developer dashboard and pass the name here\n        typeOfLogin: "twitch", // Pass on the login provider of the verifier you\'ve created\n        clientId: "TWITCH_CLIENT_ID_1234567890", //use your app client id you got from twitch\n      },\n    },\n    // highlight-end\n  },\n  privateKeyProvider,\n});\nweb3auth.configureAdapter(openloginAdapter);\n'})})})]})}function l(e={}){const{wrapper:n}={...(0,r.a)(),...e.components};return n?(0,i.jsx)(n,{...e,children:(0,i.jsx)(d,{...e})}):d(e)}},65943:(e,n,t)=>{t.d(n,{ZP:()=>l});var i=t(85893),r=t(11151),o=t(85162),s=t(74866);function d(e){const n={code:"code",h5:"h5",pre:"pre",strong:"strong",table:"table",tbody:"tbody",td:"td",th:"th",thead:"thead",tr:"tr",...(0,r.a)(),...e.components};return(0,i.jsxs)(s.Z,{defaultValue:"table",values:[{label:"Table",value:"table"},{label:"Interface",value:"interface"}],children:[(0,i.jsxs)(o.Z,{value:"table",children:[(0,i.jsx)(n.h5,{id:"extraloginoptions",children:(0,i.jsx)(n.code,{children:"ExtraLoginOptions"})}),(0,i.jsxs)(n.table,{children:[(0,i.jsx)(n.thead,{children:(0,i.jsxs)(n.tr,{children:[(0,i.jsx)(n.th,{children:"Variable"}),(0,i.jsx)(n.th,{children:"Type"}),(0,i.jsx)(n.th,{children:"Description"}),(0,i.jsx)(n.th,{children:"Mandatory"})]})}),(0,i.jsxs)(n.tbody,{children:[(0,i.jsxs)(n.tr,{children:[(0,i.jsx)(n.td,{children:(0,i.jsx)(n.code,{children:"domain?"})}),(0,i.jsx)(n.td,{children:(0,i.jsx)(n.code,{children:"string"})}),(0,i.jsxs)(n.td,{children:["The target domain for your proxy login provider like Auth0, such as ",(0,i.jsx)(n.code,{children:"'example.auth0.com'"}),", ",(0,i.jsx)(n.code,{children:"'example.eu.auth0.com'"})," or , ",(0,i.jsx)(n.code,{children:"'example.mycompany.com'"})]}),(0,i.jsx)(n.td,{children:"Yes"})]}),(0,i.jsxs)(n.tr,{children:[(0,i.jsx)(n.td,{children:(0,i.jsx)(n.code,{children:"client_id?"})}),(0,i.jsx)(n.td,{children:(0,i.jsx)(n.code,{children:"string"})}),(0,i.jsx)(n.td,{children:"The Client ID of your login provider, found on your Application settings page"}),(0,i.jsx)(n.td,{children:"No"})]}),(0,i.jsxs)(n.tr,{children:[(0,i.jsx)(n.td,{children:(0,i.jsx)(n.code,{children:"redirect_uri?"})}),(0,i.jsx)(n.td,{children:(0,i.jsx)(n.code,{children:"string"})}),(0,i.jsx)(n.td,{children:'The default URL where the login provider will redirect your browser to with the authentication result. It must be whitelisted in the "Allowed Callback URLs" field in your Application\'s settings. If not provided here, it should be provided in the other methods that provide authentication.'}),(0,i.jsx)(n.td,{children:"No"})]}),(0,i.jsxs)(n.tr,{children:[(0,i.jsx)(n.td,{children:(0,i.jsx)(n.code,{children:"leeway?"})}),(0,i.jsx)(n.td,{children:(0,i.jsx)(n.code,{children:"number"})}),(0,i.jsxs)(n.td,{children:["The value in seconds used to account for clock skew in JWT expirations. Typically, this value is no more than a minute or two at maximum. ",(0,i.jsx)(n.strong,{children:"Default Value:"})," ",(0,i.jsx)(n.code,{children:"60"})]}),(0,i.jsx)(n.td,{children:"No"})]}),(0,i.jsxs)(n.tr,{children:[(0,i.jsx)(n.td,{children:(0,i.jsx)(n.code,{children:"verifierIdField?"})}),(0,i.jsx)(n.td,{children:(0,i.jsx)(n.code,{children:"string"})}),(0,i.jsx)(n.td,{children:"The field in jwt token which maps to verifier id"}),(0,i.jsx)(n.td,{children:"No"})]}),(0,i.jsxs)(n.tr,{children:[(0,i.jsx)(n.td,{children:(0,i.jsx)(n.code,{children:"isVerifierIdCaseSensitive?"})}),(0,i.jsx)(n.td,{children:(0,i.jsx)(n.code,{children:"boolean"})}),(0,i.jsxs)(n.td,{children:["Whether the verifier id field is case sensitive. ",(0,i.jsx)(n.strong,{children:"Default Value:"})," ",(0,i.jsx)(n.code,{children:"true"})]}),(0,i.jsx)(n.td,{children:"No"})]}),(0,i.jsxs)(n.tr,{children:[(0,i.jsx)(n.td,{children:(0,i.jsx)(n.code,{children:"max_age?"})}),(0,i.jsxs)(n.td,{children:[(0,i.jsx)(n.code,{children:"string"})," or ",(0,i.jsx)(n.code,{children:"number"})]}),(0,i.jsx)(n.td,{children:"Maximum allowable elapsed time (in seconds) since authentication. If the last time the user authenticated is greater than this value, the user must be re-authenticated."}),(0,i.jsx)(n.td,{children:"No"})]}),(0,i.jsxs)(n.tr,{children:[(0,i.jsx)(n.td,{children:(0,i.jsx)(n.code,{children:"id_token?"})}),(0,i.jsx)(n.td,{children:(0,i.jsx)(n.code,{children:"string"})}),(0,i.jsxs)(n.td,{children:["Pass your own generated or obtained ",(0,i.jsx)(n.code,{children:"id_token"})," to login using JWT."]}),(0,i.jsx)(n.td,{children:"No"})]}),(0,i.jsxs)(n.tr,{children:[(0,i.jsx)(n.td,{children:(0,i.jsx)(n.code,{children:"login_hint?"})}),(0,i.jsx)(n.td,{children:(0,i.jsx)(n.code,{children:"string"})}),(0,i.jsx)(n.td,{children:"The user's email address or other identifier. When your app knows which user is trying to authenticate, you can provide this parameter to pre-fill the email box or select the right session for sign-in."}),(0,i.jsx)(n.td,{children:"No"})]}),(0,i.jsxs)(n.tr,{children:[(0,i.jsx)(n.td,{children:(0,i.jsx)(n.code,{children:"scope?"})}),(0,i.jsx)(n.td,{children:(0,i.jsx)(n.code,{children:"string"})}),(0,i.jsx)(n.td,{children:"The default scope to be used on authentication requests. The defaultScope defined in the Auth0Client is included along with this scope."}),(0,i.jsx)(n.td,{children:"No"})]}),(0,i.jsxs)(n.tr,{children:[(0,i.jsx)(n.td,{children:(0,i.jsx)(n.code,{children:"audience?"})}),(0,i.jsx)(n.td,{children:(0,i.jsx)(n.code,{children:"string"})}),(0,i.jsx)(n.td,{children:"The default audience to be used for requesting API access."}),(0,i.jsx)(n.td,{children:"No"})]}),(0,i.jsxs)(n.tr,{children:[(0,i.jsx)(n.td,{children:(0,i.jsx)(n.code,{children:"connection?"})}),(0,i.jsx)(n.td,{children:(0,i.jsx)(n.code,{children:"string"})}),(0,i.jsx)(n.td,{children:"The name of the connection configured for your application. If null, it will redirect to the Auth0 Login Page and show the Login Widget."}),(0,i.jsx)(n.td,{children:"No"})]})]})]})]}),(0,i.jsx)(o.Z,{value:"interface",children:(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-tsx",children:"export interface ExtraLoginOptions extends BaseLoginOptions {\n  /**\n   * Your Auth0 account domain such as `'example.auth0.com'`,\n   * `'example.eu.auth0.com'` or , `'example.mycompany.com'`\n   * (when using [custom domains](https://auth0.com/docs/custom-domains))\n   */\n  domain?: string;\n  /**\n   * The Client ID found on your Application settings page\n   */\n  client_id?: string;\n  /**\n   * The default URL where Auth0 will redirect your browser to with\n   * the authentication result. It must be whitelisted in\n   * the \"Allowed Callback URLs\" field in your Auth0 Application's\n   * settings. If not provided here, it should be provided in the other\n   * methods that provide authentication.\n   */\n  redirect_uri?: string;\n  /**\n   * The value in seconds used to account for clock skew in JWT expirations.\n   * Typically, this value is no more than a minute or two at maximum.\n   * Defaults to 60s.\n   */\n  leeway?: number;\n  /**\n   * The field in jwt token which maps to verifier id\n   */\n  verifierIdField?: string;\n  /**\n   * Whether the verifier id field is case sensitive\n   * @defaultValue true\n   */\n  isVerifierIdCaseSensitive?: boolean;\n}\nexport interface BaseLoginOptions {\n  /**\n   * If you need to send custom parameters to the Authorization Server,\n   * make sure to use the original parameter name.\n   */\n  [key: string]: unknown;\n  /**\n   * - `'page'`: displays the UI with a full page view\n   * - `'popup'`: displays the UI with a popup window\n   * - `'touch'`: displays the UI in a way that leverages a touch interface\n   * - `'wap'`: displays the UI with a \"feature phone\" type interface\n   */\n  display?: \"page\" | \"popup\" | \"touch\" | \"wap\" | string;\n  /**\n   * - `'none'`: do not prompt user for login or consent on re-authentication\n   * - `'login'`: prompt user for re-authentication\n   * - `'consent'`: prompt user for consent before processing request\n   * - `'select_account'`: prompt user to select an account\n   */\n  prompt?: \"none\" | \"login\" | \"consent\" | \"select_account\" | string;\n  /**\n   * Maximum allowable elapsed time (in seconds) since authentication.\n   * If the last time the user authenticated is greater than this value,\n   * the user must be re-authenticated.\n   */\n  max_age?: string | number;\n  /**\n   * The space-separated list of language tags, ordered by preference.\n   * For example: `'fr-CA fr en'`.\n   */\n  ui_locales?: string;\n  /**\n   * Previously issued ID Token.\n   */\n  id_token_hint?: string;\n  /**\n   * The user's email address or other identifier. When your app knows\n   * which user is trying to authenticate, you can provide this parameter\n   * to pre-fill the email box or select the right session for sign-in.\n   *\n   * This currently only affects the classic Lock experience.\n   */\n  login_hint?: string;\n  id_token?: string;\n  acr_values?: string;\n  /**\n   * The default scope to be used on authentication requests.\n   * The defaultScope defined in the Auth0Client is included\n   * along with this scope\n   */\n  scope?: string;\n  /**\n   * The default audience to be used for requesting API access.\n   */\n  audience?: string;\n  /**\n   * The name of the connection configured for your application.\n   * If null, it will redirect to the Auth0 Login Page and show\n   * the Login Widget.\n   */\n  connection?: string;\n}\n"})})})]})}function l(e={}){const{wrapper:n}={...(0,r.a)(),...e.components};return n?(0,i.jsx)(n,{...e,children:(0,i.jsx)(d,{...e})}):d(e)}},78709:(e,n,t)=>{t.d(n,{ZP:()=>l});var i=t(85893),r=t(11151),o=t(85162),s=t(74866);function d(e){const n={a:"a",code:"code",p:"p",pre:"pre",table:"table",tbody:"tbody",td:"td",th:"th",thead:"thead",tr:"tr",...(0,r.a)(),...e.components};return(0,i.jsxs)(s.Z,{defaultValue:"table",values:[{label:"Table",value:"table"},{label:"Type Declarations",value:"type"}],children:[(0,i.jsxs)(o.Z,{value:"table",children:[(0,i.jsx)(n.p,{children:(0,i.jsx)(n.code,{children:'loginConfig: { "identifier of social login": { params } }'})}),(0,i.jsx)(n.p,{children:(0,i.jsx)(n.code,{children:"params"})}),(0,i.jsxs)(n.table,{children:[(0,i.jsx)(n.thead,{children:(0,i.jsxs)(n.tr,{children:[(0,i.jsx)(n.th,{children:"Parameter"}),(0,i.jsx)(n.th,{children:"Type"}),(0,i.jsx)(n.th,{children:"Description"}),(0,i.jsx)(n.th,{children:"Mandatory"})]})}),(0,i.jsxs)(n.tbody,{children:[(0,i.jsxs)(n.tr,{children:[(0,i.jsx)(n.td,{children:(0,i.jsx)(n.code,{children:"verifier"})}),(0,i.jsx)(n.td,{children:(0,i.jsx)(n.code,{children:"string"})}),(0,i.jsxs)(n.td,{children:["Identifier for the Verifier you created on the ",(0,i.jsx)(n.a,{href:"https://dashboard.web3auth.io",children:"Web3Auth Developer Dashboard"})]}),(0,i.jsx)(n.td,{children:"Yes"})]}),(0,i.jsxs)(n.tr,{children:[(0,i.jsx)(n.td,{children:(0,i.jsx)(n.code,{children:"typeOfLogin"})}),(0,i.jsx)(n.td,{children:(0,i.jsx)(n.code,{children:"TypeOfLogin"})}),(0,i.jsxs)(n.td,{children:["Choose your type of social login. Select from the list: ",(0,i.jsx)(n.code,{children:"google"}),", ",(0,i.jsx)(n.code,{children:"facebook"}),", ",(0,i.jsx)(n.code,{children:"twitter"}),", ",(0,i.jsx)(n.code,{children:"reddit"}),", ",(0,i.jsx)(n.code,{children:"discord"}),", ",(0,i.jsx)(n.code,{children:"twitch"}),", ",(0,i.jsx)(n.code,{children:"apple"}),", ",(0,i.jsx)(n.code,{children:"line"}),", ",(0,i.jsx)(n.code,{children:"github"}),", ",(0,i.jsx)(n.code,{children:"kakao"}),", ",(0,i.jsx)(n.code,{children:"linkedin"}),", ",(0,i.jsx)(n.code,{children:"weibo"}),", ",(0,i.jsx)(n.code,{children:"wechat"})]}),(0,i.jsx)(n.td,{children:"Yes"})]}),(0,i.jsxs)(n.tr,{children:[(0,i.jsx)(n.td,{children:(0,i.jsx)(n.code,{children:"name"})}),(0,i.jsx)(n.td,{children:(0,i.jsx)(n.code,{children:"string"})}),(0,i.jsx)(n.td,{children:"Display Name. If not provided, we use the default for openlogin app"}),(0,i.jsx)(n.td,{children:"No"})]}),(0,i.jsxs)(n.tr,{children:[(0,i.jsx)(n.td,{children:(0,i.jsx)(n.code,{children:"description?"})}),(0,i.jsx)(n.td,{children:(0,i.jsx)(n.code,{children:"string"})}),(0,i.jsx)(n.td,{children:"Description for button. If provided, it renders as a full-length button. else, icon button"}),(0,i.jsx)(n.td,{children:"No"})]}),(0,i.jsxs)(n.tr,{children:[(0,i.jsx)(n.td,{children:(0,i.jsx)(n.code,{children:"clientId?"})}),(0,i.jsx)(n.td,{children:(0,i.jsx)(n.code,{children:"string"})}),(0,i.jsx)(n.td,{children:"Custom client_id for the corresponding social provider. This is needed for connecting to your account. If not provided, we use the default for openlogin app"}),(0,i.jsx)(n.td,{children:"No"})]}),(0,i.jsxs)(n.tr,{children:[(0,i.jsx)(n.td,{children:(0,i.jsx)(n.code,{children:"verifierSubIdentifier?"})}),(0,i.jsx)(n.td,{children:(0,i.jsx)(n.code,{children:"string"})}),(0,i.jsx)(n.td,{children:"Sub identifier - used in case of creation of aggregate verifiers"}),(0,i.jsx)(n.td,{children:"No"})]}),(0,i.jsxs)(n.tr,{children:[(0,i.jsx)(n.td,{children:(0,i.jsx)(n.code,{children:"logoHover?"})}),(0,i.jsx)(n.td,{children:(0,i.jsx)(n.code,{children:"string"})}),(0,i.jsx)(n.td,{children:"Logo to be shown on mouse hover. If not provided, we use the default for openlogin app"}),(0,i.jsx)(n.td,{children:"No"})]}),(0,i.jsxs)(n.tr,{children:[(0,i.jsx)(n.td,{children:(0,i.jsx)(n.code,{children:"logoLight?"})}),(0,i.jsx)(n.td,{children:(0,i.jsx)(n.code,{children:"string"})}),(0,i.jsx)(n.td,{children:"Logo to be shown on a light background (light mode). If not provided, we use the default for openlogin app"}),(0,i.jsx)(n.td,{children:"No"})]}),(0,i.jsxs)(n.tr,{children:[(0,i.jsx)(n.td,{children:(0,i.jsx)(n.code,{children:"logoDark?"})}),(0,i.jsx)(n.td,{children:(0,i.jsx)(n.code,{children:"string"})}),(0,i.jsx)(n.td,{children:"Logo to be shown on a dark background (dark mode). If not provided, we use the default for openlogin app"}),(0,i.jsx)(n.td,{children:"No"})]}),(0,i.jsxs)(n.tr,{children:[(0,i.jsx)(n.td,{children:(0,i.jsx)(n.code,{children:"mainOption?"})}),(0,i.jsx)(n.td,{children:(0,i.jsx)(n.code,{children:"boolean"})}),(0,i.jsx)(n.td,{children:"Show login button on the main list"}),(0,i.jsx)(n.td,{children:"No"})]}),(0,i.jsxs)(n.tr,{children:[(0,i.jsx)(n.td,{children:(0,i.jsx)(n.code,{children:"showOnModal?"})}),(0,i.jsx)(n.td,{children:(0,i.jsx)(n.code,{children:"boolean"})}),(0,i.jsx)(n.td,{children:"Whether to show the login button on modal or not"}),(0,i.jsx)(n.td,{})]}),(0,i.jsxs)(n.tr,{children:[(0,i.jsx)(n.td,{children:(0,i.jsx)(n.code,{children:"showOnDesktop"})}),(0,i.jsx)(n.td,{children:(0,i.jsx)(n.code,{children:"boolean"})}),(0,i.jsx)(n.td,{children:"Whether to show the login button on desktop"}),(0,i.jsx)(n.td,{children:"No"})]}),(0,i.jsxs)(n.tr,{children:[(0,i.jsx)(n.td,{children:(0,i.jsx)(n.code,{children:"showOnMobile?"})}),(0,i.jsx)(n.td,{children:(0,i.jsx)(n.code,{children:"boolean"})}),(0,i.jsx)(n.td,{children:"Whether to show the login button on mobile"}),(0,i.jsx)(n.td,{children:"No"})]}),(0,i.jsxs)(n.tr,{children:[(0,i.jsx)(n.td,{children:(0,i.jsx)(n.code,{children:"showOnSocialBackupFactor?"})}),(0,i.jsx)(n.td,{children:(0,i.jsx)(n.code,{children:"boolean"})}),(0,i.jsx)(n.td,{children:"If we are using social logins as a backup factor, then this option will be used to show the type of social login on the social backup login screen."}),(0,i.jsx)(n.td,{children:"No"})]}),(0,i.jsxs)(n.tr,{children:[(0,i.jsx)(n.td,{children:(0,i.jsx)(n.code,{children:"jwtParameters?"})}),(0,i.jsx)(n.td,{children:(0,i.jsx)(n.code,{children:"JwtParameters"})}),(0,i.jsx)(n.td,{children:"Custom jwt parameters to configure the login. Useful for Auth0 configuration"}),(0,i.jsx)(n.td,{children:"No"})]})]})]})]}),(0,i.jsx)(o.Z,{value:"type",children:(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-tsx",children:'export type LoginConfig = Record<\n  string,\n  {\n    verifier: string;\n    /**\n     * The type of login. Refer to enum `LOGIN_TYPE`\n     */\n    typeOfLogin: TypeOfLogin;\n    /**\n     * Display Name. If not provided, we use the default for openlogin app\n     */\n    name?: string;\n    /**\n     * Description for button. If provided, it renders as a full length button. else, icon button\n     */\n    description?: string;\n    /**\n     * Custom client_id. If not provided, we use the default for openlogin app\n     */\n    clientId?: string;\n    verifierSubIdentifier?: string;\n    /**\n     * Logo to be shown on mouse hover. If not provided, we use the default for openlogin app\n     */\n    logoHover?: string;\n    /**\n     * Logo to be shown on dark background (dark theme). If not provided, we use the default for openlogin app\n     */\n    logoLight?: string;\n    /**\n     * Logo to be shown on light background (light theme). If not provided, we use the default for openlogin app\n     */\n    logoDark?: string;\n    /**\n     * Show login button on the main list\n     */\n    mainOption?: boolean;\n    /**\n     * Whether to show the login button on modal or not\n     */\n    showOnModal?: boolean;\n    /**\n     * Whether to show the login button on desktop\n     */\n    showOnDesktop?: boolean;\n    /**\n     * Whether to show the login button on mobile\n     */\n    showOnMobile?: boolean;\n    /**\n     * If we are using social logins as a backup factor,\n     * then this option will be used to show the type of social login\n     * on the social backup login screen.\n     */\n    showOnSocialBackupFactor?: boolean;\n    /**\n     * Custom jwt parameters to configure the login. Useful for Auth0 configuration\n     */\n    jwtParameters?: JwtParameters;\n  }\n>;\n\nexport type TypeOfLogin =\n  | "google"\n  | "facebook"\n  | "reddit"\n  | "discord"\n  | "twitch"\n  | "apple"\n  | "github"\n  | "linkedin"\n  | "twitter"\n  | "weibo"\n  | "line"\n  | "email_password"\n  | "passwordless"\n  | "jwt"\n  | "webauthn";\n'})})})]})}function l(e={}){const{wrapper:n}={...(0,r.a)(),...e.components};return n?(0,i.jsx)(n,{...e,children:(0,i.jsx)(d,{...e})}):d(e)}},79179:(e,n,t)=>{t.d(n,{ZP:()=>l});var i=t(85893),r=t(11151),o=t(85162),s=t(74866);function d(e){const n={a:"a",code:"code",h5:"h5",pre:"pre",strong:"strong",table:"table",tbody:"tbody",td:"td",th:"th",thead:"thead",tr:"tr",...(0,r.a)(),...e.components};return(0,i.jsxs)(s.Z,{defaultValue:"table",values:[{label:"Table",value:"table"},{label:"Type Declaration",value:"type"}],children:[(0,i.jsxs)(o.Z,{value:"table",children:[(0,i.jsx)(n.h5,{id:"loginsettings",children:(0,i.jsx)(n.code,{children:"LoginSettings"})}),(0,i.jsxs)(n.table,{children:[(0,i.jsx)(n.thead,{children:(0,i.jsxs)(n.tr,{children:[(0,i.jsx)(n.th,{children:"Variable"}),(0,i.jsx)(n.th,{children:"Type"}),(0,i.jsx)(n.th,{children:"Description"}),(0,i.jsx)(n.th,{children:"Mandatory"})]})}),(0,i.jsxs)(n.tbody,{children:[(0,i.jsxs)(n.tr,{children:[(0,i.jsx)(n.td,{children:(0,i.jsx)(n.code,{children:"loginProvider"})}),(0,i.jsxs)(n.td,{children:[(0,i.jsx)(n.code,{children:"LOGIN_PROVIDER_TYPE"})," or ",(0,i.jsx)(n.code,{children:"CUSTOM_LOGIN_PROVIDER_TYPE"})," - ",(0,i.jsx)(n.code,{children:"GOOGLE"}),", ",(0,i.jsx)(n.code,{children:"FACEBOOK"}),", ",(0,i.jsx)(n.code,{children:"REDDIT"}),", ",(0,i.jsx)(n.code,{children:"DISCORD"}),", ",(0,i.jsx)(n.code,{children:"TWITCH"}),", ",(0,i.jsx)(n.code,{children:"APPLE"}),", ",(0,i.jsx)(n.code,{children:"LINE"}),", ",(0,i.jsx)(n.code,{children:"GITHUB"}),", ",(0,i.jsx)(n.code,{children:"KAKAO"}),", ",(0,i.jsx)(n.code,{children:"LINKEDIN"}),", ",(0,i.jsx)(n.code,{children:"TWITTER"}),", ",(0,i.jsx)(n.code,{children:"WEIBO"}),", ",(0,i.jsx)(n.code,{children:"WECHAT"}),", ",(0,i.jsx)(n.code,{children:"EMAIL_PASSWORDLESS"}),", ",(0,i.jsx)(n.code,{children:"SMS_PASSWORDLESS"}),", ",(0,i.jsx)(n.code,{children:"JWT"})]}),(0,i.jsxs)(n.td,{children:["Sets the oauth login method to be used. You can use any of the valid loginProvider from the supported list.",(0,i.jsx)("br",{}),(0,i.jsx)("br",{})," The list of available options: ",(0,i.jsx)(n.code,{children:"google"}),", ",(0,i.jsx)(n.code,{children:"facebook"}),", ",(0,i.jsx)(n.code,{children:"reddit"}),", ",(0,i.jsx)(n.code,{children:"discord"}),", ",(0,i.jsx)(n.code,{children:"twitch"}),", ",(0,i.jsx)(n.code,{children:"apple"}),", ",(0,i.jsx)(n.code,{children:"line"}),", ",(0,i.jsx)(n.code,{children:"github"}),", ",(0,i.jsx)(n.code,{children:"kakao"}),", ",(0,i.jsx)(n.code,{children:"linkedin"}),", ",(0,i.jsx)(n.code,{children:"twitter"}),", ",(0,i.jsx)(n.code,{children:"weibo"}),", ",(0,i.jsx)(n.code,{children:"wechat"}),", ",(0,i.jsx)(n.code,{children:"email_passwordless"}),", ",(0,i.jsx)(n.code,{children:"sms_passwordless"}),", ",(0,i.jsx)(n.code,{children:"jwt"})]}),(0,i.jsx)(n.td,{children:"No"})]}),(0,i.jsxs)(n.tr,{children:[(0,i.jsx)(n.td,{children:(0,i.jsx)(n.code,{children:"mfaLevel?"})}),(0,i.jsx)(n.td,{children:(0,i.jsx)(n.code,{children:"MfaLevelType"})}),(0,i.jsxs)(n.td,{children:["You can set the ",(0,i.jsx)(n.code,{children:"mfaLevel"})," to customize when mfa screen should be shown to user. It currently accepts 4 values: ",(0,i.jsxs)("ul",{children:[(0,i.jsxs)("li",{children:[" ",(0,i.jsx)(n.strong,{children:(0,i.jsx)(n.code,{children:"'default'"})})," Setting mfa level to ",(0,i.jsx)(n.code,{children:"default"})," will present mfa screen to user on every third login. "]}),(0,i.jsxs)("li",{children:[" ",(0,i.jsx)(n.strong,{children:(0,i.jsx)(n.code,{children:"'optional'"})})," Setting mfa level to ",(0,i.jsx)(n.code,{children:"default"})," will present mfa screen to user on every login but user can skip it. "]}),(0,i.jsxs)("li",{children:[" ",(0,i.jsx)(n.strong,{children:(0,i.jsx)(n.code,{children:"'mandatory'"})})," Setting mfa level to ",(0,i.jsx)(n.code,{children:"mandatory"})," will make it mandatory for user to setup mfa after login. "]}),(0,i.jsxs)("li",{children:[" ",(0,i.jsx)(n.strong,{children:(0,i.jsx)(n.code,{children:"'none'"})})," Setting mfa level to ",(0,i.jsx)(n.code,{children:"none"})," will make the user skip the mfa setup screen"]})]})]}),(0,i.jsx)(n.td,{children:"No"})]}),(0,i.jsxs)(n.tr,{children:[(0,i.jsx)(n.td,{children:(0,i.jsx)(n.code,{children:"extraLoginOptions?"})}),(0,i.jsx)(n.td,{children:(0,i.jsx)(n.code,{children:"ExtraLoginOptions"})}),(0,i.jsxs)(n.td,{children:["This can be used to pass standard oauth login options to loginProvider. For ex: you will have to pass ",(0,i.jsx)(n.code,{children:"login_hint"})," as user's email and ",(0,i.jsx)(n.code,{children:"domain"})," as your app domain in ",(0,i.jsx)(n.code,{children:"extraLoginOptions"})," while using ",(0,i.jsx)(n.code,{children:"email_passwordless"})," loginProvider"]}),(0,i.jsx)(n.td,{children:"No"})]}),(0,i.jsxs)(n.tr,{children:[(0,i.jsx)(n.td,{children:(0,i.jsx)(n.code,{children:"dappShare?"})}),(0,i.jsx)(n.td,{children:(0,i.jsx)(n.code,{children:"string"})}),(0,i.jsxs)(n.td,{children:["Custom Logins can get a dapp share returned to them post successful login. This is useful if the dapps want to use this share to allow users to login seamlessly. ",(0,i.jsx)(n.code,{children:"dappShare"})," is a 24 word seed phrase."]}),(0,i.jsx)(n.td,{children:"No"})]}),(0,i.jsxs)(n.tr,{children:[(0,i.jsx)(n.td,{children:(0,i.jsx)(n.code,{children:"curve"})}),(0,i.jsx)(n.td,{children:(0,i.jsx)(n.code,{children:"SUPPORTED_KEY_CURVES_TYPE"})}),(0,i.jsxs)(n.td,{children:["This curve will be used to determine the public key encoded in the jwt token which returned in ",(0,i.jsx)(n.code,{children:"getUserInfo"})," function after user login. You can use that public key from jwt token as a unique user identifier in your backend. ",(0,i.jsxs)("ul",{children:[(0,i.jsxs)("li",{children:[(0,i.jsx)(n.code,{children:"'secp256k1'"}),": secp256k1 based pub key is added as a wallet public key in jwt token to use."]}),(0,i.jsxs)("li",{children:[(0,i.jsx)(n.code,{children:"'ed25519'"}),": ed25519 based pub key is added as a wallet public key in jwt token to use."]})]})," Note: This parameter won't change format of private key returned by openlogin. Private key returned by openlogin is always ",(0,i.jsx)(n.code,{children:"secp256k1"}),"."]}),(0,i.jsx)(n.td,{children:"No"})]}),(0,i.jsxs)(n.tr,{children:[(0,i.jsx)(n.td,{children:(0,i.jsx)(n.code,{children:"appState?"})}),(0,i.jsx)(n.td,{children:(0,i.jsx)(n.code,{children:"string"})}),(0,i.jsx)(n.td,{children:"Any custom state you wish to pass along. This will be returned to you post redirect. Use this to store data that you want to be available to the dApp after login."}),(0,i.jsx)(n.td,{children:"No"})]}),(0,i.jsxs)(n.tr,{children:[(0,i.jsx)(n.td,{children:(0,i.jsx)(n.code,{children:"redirectUrl?"})}),(0,i.jsx)(n.td,{children:(0,i.jsx)(n.code,{children:"string"})}),(0,i.jsxs)(n.td,{children:["DApp's URL where user will be redirected after login. Register this URL in the ",(0,i.jsx)(n.a,{href:"https://dashboard.web3auth.io",children:"developer dashboard"}),", else initialization will give error."]}),(0,i.jsx)(n.td,{children:"No"})]}),(0,i.jsxs)(n.tr,{children:[(0,i.jsx)(n.td,{children:(0,i.jsx)(n.code,{children:"login_hint?"})}),(0,i.jsx)(n.td,{children:(0,i.jsx)(n.code,{children:"string"})}),(0,i.jsx)(n.td,{}),(0,i.jsx)(n.td,{children:"No"})]})]})]})]}),(0,i.jsx)(o.Z,{value:"type",children:(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-tsx",children:'export type LoginSettings = Partial<LoginParams> & Partial<BaseRedirectParams>;\n\nexport type LoginParams = BaseRedirectParams & {\n  /**\n   * loginProvider sets the oauth login method to be used.\n   * You can use any of the valid loginProvider from the supported list.\n   */\n  loginProvider: LOGIN_PROVIDER_TYPE | CUSTOM_LOGIN_PROVIDER_TYPE;\n  /**\n   * You can set the `mfaLevel` to customize when mfa screen should be shown to user.\n   * It currently accepts 4 values:-\n   * - `\'default\'`: Setting mfa level to `default` will present mfa screen to user on every third login.\n   * - `\'optional\'`: Setting mfa level to `default` will present mfa screen to user on every login but user can skip it.\n   * - `\'mandatory\'`: Setting mfa level to `mandatory` will make it mandatory for user to setup mfa after login.\n   * - `\'none\'`: Setting mfa level to `none` will make the user skip the mfa setup screen\n   *\n   * Defaults to `default`\n   * @defaultValue `default`\n   */\n  mfaLevel?: MfaLevelType;\n  /**\n   * extraLoginOptions can be used to pass standard oauth login options to\n   * loginProvider.\n   *\n   * For ex: you will have to pass `login_hint` as user\'s email and `domain`\n   * as your app domain in `extraLoginOptions` while using `email_passwordless`\n   * loginProvider\n   */\n  extraLoginOptions?: ExtraLoginOptions;\n  /**\n   * Custom Logins can get a dapp share returned to them post successful login.\n   * This is useful if the dapps want to use this share to allow users to login seamlessly\n   * dappShare is a 24 word seed phrase\n   */\n  dappShare?: string;\n  /**\n   * This curve will be used to determine the public key encoded in the jwt token which returned in\n   * `getUserInfo` function after user login.\n   * You can use that public key from jwt token as a unique user identifier in your backend.\n   *\n   * - `\'secp256k1\'`: secp256k1 based pub key is added as a wallet public key in jwt token to use.\n   * - `\'ed25519\'`: ed25519 based pub key is added as a wallet public key in jwt token to use.\n   *\n   * Note: This parameter won\'t change format of private key returned by openlogin. Private key returned\n   * by openlogin is always `secp256k1`. As of now you have to convert it to `\'ed25519\'` if you want.\n   * You can use `@toruslabs/openlogin-ed25519` npm package for this purpose.\n   *\n   *\n   * @defaultValue secp256k1\n   */\n  curve?: SUPPORTED_KEY_CURVES_TYPE;\n};\n\nexport type BaseRedirectParams = {\n  /**\n   * redirectUrl is the dapp\'s url where user will be redirected after login.\n   *\n   * @remarks\n   * Register this url at {@link "https://dashboard.web3auth.io"| developer dashboard}\n   * else initialization will give error.\n   */\n  redirectUrl?: string;\n  /**\n   * Any custom state you wish to pass along. This will be returned to you post redirect.\n   * Use this to store data that you want to be available to the dapp after login.\n   */\n  appState?: string;\n};\n\n/**\n * {@label loginProviderType}\n */\nexport type LOGIN_PROVIDER_TYPE = typeof LOGIN_PROVIDER[keyof typeof LOGIN_PROVIDER];\nexport declare const LOGIN_PROVIDER: {\n  readonly GOOGLE: "google";\n  readonly FACEBOOK: "facebook";\n  readonly REDDIT: "reddit";\n  readonly DISCORD: "discord";\n  readonly TWITCH: "twitch";\n  readonly APPLE: "apple";\n  readonly LINE: "line";\n  readonly GITHUB: "github";\n  readonly KAKAO: "kakao";\n  readonly LINKEDIN: "linkedin";\n  readonly TWITTER: "twitter";\n  readonly WEIBO: "weibo";\n  readonly WECHAT: "wechat";\n  readonly EMAIL_PASSWORDLESS: "email_passwordless";\n  readonly SMS_PASSWORDLESS: "sms_passwordless";\n  readonly WEBAUTHN: "webauthn";\n  readonly JWT: "jwt";\n};\n\nexport type CUSTOM_LOGIN_PROVIDER_TYPE = string & {\n  toString?: (radix?: number) => string;\n};\n\n/**\n * {@label MfaLevelType}\n */\n\nexport type MfaLevelType = typeof MFA_LEVELS[keyof typeof MFA_LEVELS];\nexport declare const MFA_LEVELS: {\n  readonly DEFAULT: "default";\n  readonly OPTIONAL: "optional";\n  readonly MANDATORY: "mandatory";\n  readonly NONE: "none";\n};\n\n/**\n * {@label SUPPORTED_KEY_CURVES_TYPE}\n */\n\nexport type SUPPORTED_KEY_CURVES_TYPE = typeof SUPPORTED_KEY_CURVES[keyof typeof SUPPORTED_KEY_CURVES];\nexport declare const SUPPORTED_KEY_CURVES: {\n  readonly SECP256K1: "secp256k1";\n  readonly ED25519: "ed25519";\n};\n'})})})]})}function l(e={}){const{wrapper:n}={...(0,r.a)(),...e.components};return n?(0,i.jsx)(n,{...e,children:(0,i.jsx)(d,{...e})}):d(e)}},7994:(e,n,t)=>{t.d(n,{ZP:()=>l});var i=t(85893),r=t(11151),o=t(85162),s=t(74866);function d(e){const n={a:"a",code:"code",h4:"h4",p:"p",pre:"pre",table:"table",tbody:"tbody",td:"td",th:"th",thead:"thead",tr:"tr",...(0,r.a)(),...e.components};return(0,i.jsxs)(i.Fragment,{children:[(0,i.jsx)(n.h4,{id:"whitelabel-whitelabeldata",children:(0,i.jsx)(n.code,{children:"whiteLabel?: WhiteLabelData;"})}),"\n",(0,i.jsxs)(n.p,{children:["The whitelabel parameter takes ",(0,i.jsx)(n.code,{children:"WhitelabelData"})," as input. The ",(0,i.jsx)(n.code,{children:"WhitelabelData"})," object takes the following parameters:"]}),"\n",(0,i.jsxs)(s.Z,{defaultValue:"table",values:[{label:"Table",value:"table"},{label:"Interface",value:"interface"}],children:[(0,i.jsxs)(o.Z,{value:"table",children:[(0,i.jsx)(n.p,{children:(0,i.jsx)(n.code,{children:"WhiteLabelData"})}),(0,i.jsxs)(n.table,{children:[(0,i.jsx)(n.thead,{children:(0,i.jsxs)(n.tr,{children:[(0,i.jsx)(n.th,{children:"Parameter"}),(0,i.jsx)(n.th,{children:"Type"}),(0,i.jsx)(n.th,{children:"Description"}),(0,i.jsx)(n.th,{children:"Default"}),(0,i.jsx)(n.th,{children:"Mandatory"})]})}),(0,i.jsxs)(n.tbody,{children:[(0,i.jsxs)(n.tr,{children:[(0,i.jsx)(n.td,{children:(0,i.jsx)(n.code,{children:"appName?"})}),(0,i.jsx)(n.td,{children:(0,i.jsx)(n.code,{children:"string"})}),(0,i.jsx)(n.td,{children:"App name to be displayed in the User Flow Screens."}),(0,i.jsx)(n.td,{children:"dApp's Website URL"}),(0,i.jsx)(n.td,{children:"No"})]}),(0,i.jsxs)(n.tr,{children:[(0,i.jsx)(n.td,{children:(0,i.jsx)(n.code,{children:"appUrl?"})}),(0,i.jsx)(n.td,{children:(0,i.jsx)(n.code,{children:"string"})}),(0,i.jsx)(n.td,{children:"App URL to be displayed in the User Flow Screens."}),(0,i.jsx)(n.td,{children:"dApp's Website URL"}),(0,i.jsx)(n.td,{children:"No"})]}),(0,i.jsxs)(n.tr,{children:[(0,i.jsx)(n.td,{children:(0,i.jsx)(n.code,{children:"logoLight?"})}),(0,i.jsx)(n.td,{children:(0,i.jsx)(n.code,{children:"string"})}),(0,i.jsx)(n.td,{children:"App logo to be shown on the light background (light theme)"}),(0,i.jsx)(n.td,{children:(0,i.jsx)(n.a,{href:"https://images.web3auth.io/web3auth-logo.svg",children:"web3auth-logo.svg"})}),(0,i.jsx)(n.td,{children:"No"})]}),(0,i.jsxs)(n.tr,{children:[(0,i.jsx)(n.td,{children:(0,i.jsx)(n.code,{children:"logoDark?"})}),(0,i.jsx)(n.td,{children:(0,i.jsx)(n.code,{children:"string"})}),(0,i.jsx)(n.td,{children:"App logo to be shown on the dark background (dark theme)"}),(0,i.jsx)(n.td,{children:(0,i.jsx)(n.a,{href:"https://images.web3auth.io/web3auth-logo.svg",children:"web3auth-logo.svg"})}),(0,i.jsx)(n.td,{children:"No"})]}),(0,i.jsxs)(n.tr,{children:[(0,i.jsx)(n.td,{children:(0,i.jsx)(n.code,{children:"defaultLanguage?"})}),(0,i.jsx)(n.td,{children:(0,i.jsx)(n.code,{children:"string"})}),(0,i.jsxs)(n.td,{children:["Default Language to use. ",(0,i.jsx)("br",{})," Choose from: ",(0,i.jsxs)("ul",{children:[(0,i.jsxs)("li",{children:[(0,i.jsx)(n.code,{children:"en"})," - English"]}),(0,i.jsxs)("li",{children:[(0,i.jsx)(n.code,{children:"de"})," - German"]}),(0,i.jsxs)("li",{children:[(0,i.jsx)(n.code,{children:"ja"})," - Japanese"]}),(0,i.jsxs)("li",{children:[(0,i.jsx)(n.code,{children:"ko"})," - Korean"]}),(0,i.jsxs)("li",{children:[(0,i.jsx)(n.code,{children:"zh"})," - Mandarin"]}),(0,i.jsxs)("li",{children:[(0,i.jsx)(n.code,{children:"es"})," - Spanish"]}),(0,i.jsxs)("li",{children:[(0,i.jsx)(n.code,{children:"fr"})," - French"]}),(0,i.jsxs)("li",{children:[(0,i.jsx)(n.code,{children:"pt"})," - Portuguese"]}),(0,i.jsxs)("li",{children:[(0,i.jsx)(n.code,{children:"nl"})," - Dutch"]})]})]}),(0,i.jsx)(n.td,{children:"en - English"}),(0,i.jsx)(n.td,{children:"No"})]}),(0,i.jsxs)(n.tr,{children:[(0,i.jsx)(n.td,{children:(0,i.jsx)(n.code,{children:"mode?"})}),(0,i.jsx)(n.td,{children:(0,i.jsx)(n.code,{children:"string"})}),(0,i.jsxs)(n.td,{children:["Choose between ",(0,i.jsx)(n.code,{children:"auto"}),", ",(0,i.jsx)(n.code,{children:"light"})," or ",(0,i.jsx)(n.code,{children:"dark"})," background modes."]}),(0,i.jsx)(n.td,{children:(0,i.jsx)(n.code,{children:"auto"})}),(0,i.jsx)(n.td,{children:"No"})]}),(0,i.jsxs)(n.tr,{children:[(0,i.jsx)(n.td,{children:(0,i.jsx)(n.code,{children:"theme?"})}),(0,i.jsx)(n.td,{children:(0,i.jsx)(n.code,{children:"{ [P in string]: string; }"})}),(0,i.jsxs)(n.td,{children:["Used to customize the theme of the login modal with the following options ",(0,i.jsx)("br",{})," ",(0,i.jsx)(n.code,{children:"'primary'"})," - To customize the primary color of the modal's content"]}),(0,i.jsx)(n.td,{children:(0,i.jsx)(n.code,{children:"#0364FF"})}),(0,i.jsx)(n.td,{children:"No"})]}),(0,i.jsxs)(n.tr,{children:[(0,i.jsx)(n.td,{children:(0,i.jsx)(n.code,{children:"tncLink?"})}),(0,i.jsx)(n.td,{children:(0,i.jsx)(n.code,{children:"Partial<Record<LANGUAGE_TYPE, string>>"})}),(0,i.jsxs)(n.td,{children:["Language specific link for terms and conditions on torus-website. See (examples/vue-app) to configure e.g. tncLink: ",(0,i.jsx)(n.code,{children:'{en: "http://example.com/tnc/en", ja: "http://example.com/tnc/ja"}'})]}),(0,i.jsx)(n.td,{children:"none"}),(0,i.jsx)(n.td,{children:"No"})]}),(0,i.jsxs)(n.tr,{children:[(0,i.jsx)(n.td,{children:(0,i.jsx)(n.code,{children:"privacyPolicy?"})}),(0,i.jsx)(n.td,{children:(0,i.jsx)(n.code,{children:"Partial<Record<LANGUAGE_TYPE, string>>"})}),(0,i.jsxs)(n.td,{children:["Language specific link for privacy policy on torus-website. See (examples/vue-app) to configure e.g. ",(0,i.jsx)(n.code,{children:'privacyPolicy: { en: "http://example.com/tnc/en", ja: "http://example.com/tnc/ja", }'})]}),(0,i.jsx)(n.td,{children:"none"}),(0,i.jsx)(n.td,{children:"No"})]})]})]})]}),(0,i.jsx)(o.Z,{value:"interface",children:(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-tsx",children:'export type WhiteLabelData = {\n  /**\n   * App name to display in the UI\n   */\n  appName?: string;\n  /**\n   * App url\n   */\n  appUrl?: string;\n  /**\n   * App logo to use in light mode\n   */\n  logoLight?: string;\n  /**\n   * App logo to use in dark mode\n   */\n  logoDark?: string;\n  /**\n   * language which will be used by web3auth. app will use browser language if not specified. if language is not supported it will use "en"\n   * en: english\n   * de: german\n   * ja: japanese\n   * ko: korean\n   * zh: mandarin\n   * es: spanish\n   * fr: french\n   * pt: portuguese\n   * nl: dutch\n   *\n   * @defaultValue en\n   */\n  defaultLanguage?: LANGUAGE_TYPE;\n  /**\n     theme\n     *\n     * @defaultValue auto\n     */\n  mode?: THEME_MODE_TYPE;\n  /**\n   * Use logo loader\n   *\n   * @defaultValue false\n   */\n  useLogoLoader?: boolean;\n  /**\n   * Used to customize theme of the login modal with following options\n   * `\'primary\'` - To customize primary color of modal\'s content.\n   */\n  theme?: {\n    primary?: string;\n    gray?: string;\n    red?: string;\n    green?: string;\n    success?: string;\n    warning?: string;\n    error?: string;\n    info?: string;\n    white?: string;\n  };\n  /**\n   * Language specific link for terms and conditions on torus-website. See (examples/vue-app) to configure\n   * e.g.\n   * tncLink: {\n   *  en: "http://example.com/tnc/en",\n   *  ja: "http://example.com/tnc/ja",\n   * }\n   */\n  tncLink?: Partial<Record<LANGUAGE_TYPE, string>>;\n  /**\n   * Language specific link for privacy policy on torus-website. See (examples/vue-app) to configure\n   * e.g.\n   * privacyPolicy: {\n   *  en: "http://example.com/tnc/en",\n   *  ja: "http://example.com/tnc/ja",\n   * }\n   */\n  privacyPolicy?: Partial<Record<LANGUAGE_TYPE, string>>;\n};\n'})})})]})]})}function l(e={}){const{wrapper:n}={...(0,r.a)(),...e.components};return n?(0,i.jsx)(n,{...e,children:(0,i.jsx)(d,{...e})}):d(e)}},23876:(e,n,t)=>{t.d(n,{ZP:()=>s});var i=t(85893),r=t(11151);function o(e){const n={code:"code",pre:"pre",...(0,r.a)(),...e.components};return(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-javascript",children:'import { OpenloginAdapter } from "@web3auth/openlogin-adapter";\n\nconst openloginAdapter = new OpenloginAdapter({\n  adapterSettings: {\n    clientId, //Optional - Provide only if you haven\'t provided it in the Web3Auth Instantiation Code\n    network: "sapphire_mainnet", // Optional - Provide only if you haven\'t provided it in the Web3Auth Instantiation Code\n    uxMode: "popup",\n    // highlight-start\n    whiteLabel: {\n      appName: "W3A Heroes",\n      appUrl: "https://web3auth.io",\n      logoLight: "https://web3auth.io/images/web3auth-logo.svg",\n      logoDark: "https://web3auth.io/images/web3auth-logo---Dark.svg",\n      defaultLanguage: "en", // en, de, ja, ko, zh, es, fr, pt, nl\n      mode: "dark", // whether to enable dark mode. defaultValue: auto\n      theme: {\n        primary: "#00D1B2",\n      },\n      useLogoLoader: true,\n    },\n    // highlight-end\n  },\n  privateKeyProvider,\n});\nweb3auth.configureAdapter(openloginAdapter);\n'})})}function s(e={}){const{wrapper:n}={...(0,r.a)(),...e.components};return n?(0,i.jsx)(n,{...e,children:(0,i.jsx)(o,{...e})}):o(e)}},48585:(e,n,t)=>{t.r(n),t.d(n,{assets:()=>v,contentTitle:()=>m,default:()=>T,frontMatter:()=>b,metadata:()=>w,toc:()=>y});var i=t(85893),r=t(11151),o=t(85162),s=t(74866);t(83064);function d(e){const n={a:"a",code:"code",h5:"h5",pre:"pre",table:"table",tbody:"tbody",td:"td",th:"th",thead:"thead",tr:"tr",...(0,r.a)(),...e.components};return(0,i.jsxs)(s.Z,{defaultValue:"table",values:[{label:"Table",value:"table"},{label:"Type Declaration",value:"type"}],children:[(0,i.jsxs)(o.Z,{value:"table",children:[(0,i.jsx)(n.h5,{id:"openloginloginparams",children:(0,i.jsx)(n.code,{children:"OpenloginLoginParams"})}),(0,i.jsxs)(n.table,{children:[(0,i.jsx)(n.thead,{children:(0,i.jsxs)(n.tr,{children:[(0,i.jsx)(n.th,{children:"Variable"}),(0,i.jsx)(n.th,{children:"Type"}),(0,i.jsx)(n.th,{children:"Description"}),(0,i.jsx)(n.th,{children:"Mandatory"}),(0,i.jsx)(n.th,{children:"Default Value"})]})}),(0,i.jsxs)(n.tbody,{children:[(0,i.jsxs)(n.tr,{children:[(0,i.jsx)(n.td,{children:(0,i.jsx)(n.code,{children:"clientId"})}),(0,i.jsx)(n.td,{children:(0,i.jsx)(n.code,{children:"string"})}),(0,i.jsxs)(n.td,{children:["Client ID for web3auth. Obtain your ",(0,i.jsx)(n.code,{children:"clientId"})," from the ",(0,i.jsx)(n.a,{href:"https://dashboard.web3auth.io/",children:"Web3Auth Developer Dashboard"}),". Not required if you're passing the clientId in the web3auth core constructor."]}),(0,i.jsx)(n.td,{children:"Yes"}),(0,i.jsx)(n.td,{children:"N/A"})]}),(0,i.jsxs)(n.tr,{children:[(0,i.jsx)(n.td,{children:(0,i.jsx)(n.code,{children:"network"})}),(0,i.jsx)(n.td,{children:(0,i.jsx)(n.code,{children:"OPENLOGIN_NETWORK_TYPE"})}),(0,i.jsx)(n.td,{children:"Specify the network your project is deployed on."}),(0,i.jsx)(n.td,{children:"Yes"}),(0,i.jsx)(n.td,{children:"N/A"})]}),(0,i.jsxs)(n.tr,{children:[(0,i.jsx)(n.td,{children:(0,i.jsx)(n.code,{children:"buildEnv?"})}),(0,i.jsx)(n.td,{children:(0,i.jsx)(n.code,{children:"BUILD_ENV_TYPE"})}),(0,i.jsx)(n.td,{children:"This parameter will be used to change the build environment of openlogin sdk."}),(0,i.jsx)(n.td,{children:"No"}),(0,i.jsx)(n.td,{children:(0,i.jsx)(n.code,{children:"'production'"})})]}),(0,i.jsxs)(n.tr,{children:[(0,i.jsx)(n.td,{children:(0,i.jsx)(n.code,{children:"redirectUrl?"})}),(0,i.jsx)(n.td,{children:(0,i.jsx)(n.code,{children:"string"})}),(0,i.jsxs)(n.td,{children:["redirectUrl is the dapp's URL where the user will be redirected after login. Register this URL on the ",(0,i.jsx)(n.a,{href:"https://dashboard.web3auth.io/",children:"Web3Auth Developer Dashboard"})," initialization will give an error."]}),(0,i.jsx)(n.td,{children:"No"}),(0,i.jsx)(n.td,{children:"N/A"})]}),(0,i.jsxs)(n.tr,{children:[(0,i.jsx)(n.td,{children:(0,i.jsx)(n.code,{children:"uxMode?"})}),(0,i.jsx)(n.td,{children:(0,i.jsx)(n.code,{children:"string"})}),(0,i.jsxs)(n.td,{children:["Two uxModes are supported: ",(0,i.jsxs)("ul",{children:[(0,i.jsxs)("li",{children:[" ",(0,i.jsx)(n.code,{children:"'POPUP'"}),": In this uxMode, a popup will be shown to the user for login."]}),(0,i.jsxs)("li",{children:[(0,i.jsx)(n.code,{children:"'REDIRECT'"}),": In this uxMode, the user will be redirected to a new window tab for login."]})]})]}),(0,i.jsx)(n.td,{children:"No"}),(0,i.jsx)(n.td,{children:(0,i.jsx)(n.code,{children:"'POPUP'"})})]}),(0,i.jsxs)(n.tr,{children:[(0,i.jsx)(n.td,{children:(0,i.jsx)(n.code,{children:"replaceUrlOnRedirect?"})}),(0,i.jsx)(n.td,{children:(0,i.jsx)(n.code,{children:"boolean"})}),(0,i.jsx)(n.td,{children:"replaceUrlOnRedirect removes the params from the redirected URL after login"}),(0,i.jsx)(n.td,{children:"No"}),(0,i.jsx)(n.td,{children:(0,i.jsx)(n.code,{children:"true"})})]}),(0,i.jsxs)(n.tr,{children:[(0,i.jsx)(n.td,{children:(0,i.jsx)(n.code,{children:"loginConfig?"})}),(0,i.jsx)(n.td,{children:(0,i.jsx)(n.code,{children:"LoginConfig"})}),(0,i.jsxs)(n.td,{children:["loginConfig enables you to pass your own login verifiers configuration for various loginProviders. ",(0,i.jsx)(n.code,{children:"loginConfig"})," is a key value map where each key should be a valid loginProvider and the value should be a custom configuration for that loginProvider."]}),(0,i.jsx)(n.td,{children:"No"}),(0,i.jsx)(n.td,{children:"N/A"})]}),(0,i.jsxs)(n.tr,{children:[(0,i.jsx)(n.td,{children:(0,i.jsx)(n.code,{children:"whiteLabel?"})}),(0,i.jsx)(n.td,{children:(0,i.jsx)(n.code,{children:"WhiteLabelData"})}),(0,i.jsx)(n.td,{children:"Options for whitelabling default openlogin modal."}),(0,i.jsx)(n.td,{children:"No"}),(0,i.jsx)(n.td,{children:"N/A"})]}),(0,i.jsxs)(n.tr,{children:[(0,i.jsx)(n.td,{children:(0,i.jsx)(n.code,{children:"storageKey?"})}),(0,i.jsxs)(n.td,{children:[(0,i.jsx)(n.code,{children:"enum"})," (",(0,i.jsx)(n.code,{children:"session"})," and ",(0,i.jsx)(n.code,{children:"local"}),")"]}),(0,i.jsx)(n.td,{children:'setting to "local" will persist the social login session across browser tabs.'}),(0,i.jsx)(n.td,{children:"No"}),(0,i.jsx)(n.td,{children:(0,i.jsx)(n.code,{children:"'local'"})})]}),(0,i.jsxs)(n.tr,{children:[(0,i.jsx)(n.td,{children:(0,i.jsx)(n.code,{children:"sessionTime?"})}),(0,i.jsx)(n.td,{children:(0,i.jsx)(n.code,{children:"number"})}),(0,i.jsx)(n.td,{children:"Determine the session length in seconds. By default, the value is set at 86400 seconds, ie. 7 days."}),(0,i.jsx)(n.td,{children:"No"}),(0,i.jsx)(n.td,{children:(0,i.jsx)(n.code,{children:"86400"})})]}),(0,i.jsxs)(n.tr,{children:[(0,i.jsx)(n.td,{children:(0,i.jsx)(n.code,{children:"mfaSettings?"})}),(0,i.jsx)(n.td,{children:(0,i.jsx)(n.code,{children:"MfaSettings"})}),(0,i.jsxs)(n.td,{children:["This parameter will be used to enable mfa factors and set priority on UI listing. List of factors available ",(0,i.jsxs)("ul",{children:[(0,i.jsx)("li",{children:"backUpShareFactor"}),(0,i.jsx)("li",{children:"socialFactor"}),(0,i.jsx)("li",{children:"passwordFactor"}),(0,i.jsx)("li",{children:"deviceShareFactor"})]})]}),(0,i.jsx)(n.td,{children:"No"}),(0,i.jsx)(n.td,{children:(0,i.jsx)(n.code,{children:"false"})})]}),(0,i.jsxs)(n.tr,{children:[(0,i.jsx)(n.td,{children:(0,i.jsx)(n.code,{children:"useMpc?"})}),(0,i.jsx)(n.td,{children:(0,i.jsx)(n.code,{children:"boolean"})}),(0,i.jsx)(n.td,{children:"This parameter will be used to use openlogin mpc"}),(0,i.jsx)(n.td,{children:"No"}),(0,i.jsx)(n.td,{children:(0,i.jsx)(n.code,{children:"false"})})]})]})]})]}),(0,i.jsx)(o.Z,{value:"type",children:(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-tsx",children:"export type OpenLoginOptions = {\n  /**\n   * You can get your clientId/projectId by registering your\n   * dapp on {@link \"https://dashboard.web3auth.io\"| developer dashboard}\n   */\n  clientId: string;\n  /**\n   * network specifies the openlogin sdk url to be used.\n   *\n   * - `'mainnet'`: https://app.openlogin.com will be used which is the production version.\n   * - `'cyan'`: https://cyan.openlogin.com will be used which is the production cyan version.\n   * - `'testnet'`: https://testing.openlogin.com will be used which is the testing version.\n   * - `'development'`: http://localhost:3000 will be used for development purpose.\n   */\n  network: OPENLOGIN_NETWORK_TYPE;\n  /**\n   * This parameter will be used to change the build environment of openlogin sdk.\n   * @defaultValue production\n   */\n  buildEnv?: BUILD_ENV_TYPE;\n  /**\n   * redirectUrl is the dapp's url where user will be redirected after login.\n   *\n   * @remarks\n   * Register this url at {@link \"https://dashboard.web3auth.io\"| developer dashboard}\n   * else initialization will give error.\n   */\n  redirectUrl?: string;\n  /**\n   * two uxModes are supported:-\n   * - `'POPUP'`: In this uxMode, a popup will be shown to user for login.\n   * - `'REDIRECT'`: In this uxMode, user will be redirected to a new window tab for login.\n   *\n   * @defaultValue `'POPUP'`\n   * @remarks\n   *\n   * Use of `'REDIRECT'` mode is recommended in browsers where popups might get blocked.\n   */\n  uxMode?: UX_MODE_TYPE;\n  /**\n   * replaceUrlOnRedirect removes the params from the redirected url after login\n   *\n   * @defaultValue true\n   */\n  replaceUrlOnRedirect?: boolean;\n  /**\n   * loginConfig enables you to pass your own login verifiers configuration for various\n   * loginProviders.\n   *\n   * loginConfig is key value map where each key should be a valid loginProvider and value\n   * should be custom configuration for that loginProvider\n   *\n   * @remarks\n   * You can deploy your own verifiers from {@link \"https://dashboard.web3auth.io\"| developer dashboard}\n   * to use here.\n   *\n   */\n  loginConfig?: LoginConfig;\n  /**\n   * options for whitelabling default openlogin modal.\n   */\n  whiteLabel?: WhiteLabelData;\n  /**\n   * setting to \"local\" will persist social login session accross browser tabs.\n   *\n   * @defaultValue \"local\"\n   */\n  storageKey?: \"session\" | \"local\";\n  /**\n   * How long should a login session last at a minimum in seconds\n   *\n   * @defaultValue 86400 seconds\n   * @remarks Max value of sessionTime can be 7 * 86400 (7 days)\n   */\n  sessionTime?: number;\n  /**\n   * This parameter will be used to enable mfa factors and set priority on UI listing.\n   * List of factors available\n   * backUpShareFactor | socialFactor | passwordFactor\n   * @defaultValue false\n   */\n  mfaSettings?: MfaSettings;\n  /**\n   * This parameter will be used to use openlogin mpc\n   * @defaultValue false\n   */\n  useMpc?: boolean;\n};\n"})})})]})}function l(e={}){const{wrapper:n}={...(0,r.a)(),...e.components};return n?(0,i.jsx)(n,{...e,children:(0,i.jsx)(d,{...e})}):d(e)}var a=t(79179),c=t(7994),h=t(23876),u=t(78709),p=t(25462),x=t(65943),j=t(55978),g=t(45300),f=t(24347);const b={title:"Openlogin Adapter for Social Logins",sidebar_label:"Openlogin (Social Logins)",displayed_sidebar:"sdk",description:"Web3Auth PnP Web Adapter SDKs - Openlogin Adapter for Social Logins | Documentation - Web3Auth"},m=void 0,w={id:"sdk/pnp/web/adapters/openlogin",title:"Openlogin Adapter for Social Logins",description:"Web3Auth PnP Web Adapter SDKs - Openlogin Adapter for Social Logins | Documentation - Web3Auth",source:"@site/docs/sdk/pnp/web/adapters/openlogin.mdx",sourceDirName:"sdk/pnp/web/adapters",slug:"/sdk/pnp/web/adapters/openlogin",permalink:"/docs/sdk/pnp/web/adapters/openlogin",draft:!1,unlisted:!1,editUrl:"https://github.com/web3auth/web3auth-docs/edit/master/docs/sdk/pnp/web/adapters/openlogin.mdx",tags:[],version:"current",frontMatter:{title:"Openlogin Adapter for Social Logins",sidebar_label:"Openlogin (Social Logins)",displayed_sidebar:"sdk",description:"Web3Auth PnP Web Adapter SDKs - Openlogin Adapter for Social Logins | Documentation - Web3Auth"},sidebar:"sdk",previous:{title:"Adapters for Web3Auth PnP Web SDKs",permalink:"/docs/sdk/pnp/web/adapters/"},next:{title:"Torus EVM Wallet",permalink:"/docs/sdk/pnp/web/adapters/torus-evm"}},v={},y=[{value:"<code>@web3auth/openlogin-adapter</code>",id:"web3authopenlogin-adapter",level:2},{value:"Basic Details",id:"basic-details",level:2},{value:"Adapter Name: <code>openlogin</code>",id:"adapter-name-openlogin",level:4},{value:"Package Name: <code>@web3auth/openlogin-adapter</code>",id:"package-name-web3authopenlogin-adapter",level:4},{value:"authMode: <code>WALLET</code>, <code>DAPP</code>",id:"authmode-wallet-dapp",level:4},{value:"chainNamespace: <code>EIP155</code>, <code>SOLANA</code>",id:"chainnamespace-eip155-solana",level:4},{value:"Default: <code>YES</code>",id:"default-yes",level:4},{value:"Installation",id:"installation",level:2},{value:"Instantiation",id:"instantiation",level:2},{value:"Import the <code>OpenloginAdapter</code> class from <code>@web3auth/openlogin-adapter</code>",id:"import-the-openloginadapter-class-from-web3authopenlogin-adapter",level:4},{value:"Assign the <code>OpenloginAdapter</code> class to a variable",id:"assign-the-openloginadapter-class-to-a-variable",level:4},{value:"Arguments",id:"arguments",level:2},{value:"<code>OpenloginAdapterOptions</code>",id:"openloginadapteroptions",level:4},{value:"Custom Chain Config",id:"custom-chain-config",level:3},{value:"Openlogin Adapter Settings",id:"openlogin-adapter-settings",level:3},{value:"<code>adapterSettings</code>",id:"adaptersettings",level:4},{value:"Login Settings",id:"login-settings",level:3},{value:"<code>loginSettings</code>",id:"loginsettings",level:4},{value:"Multi-Factor Authentication",id:"multi-factor-authentication",level:2},{value:"Example",id:"example",level:3},{value:"Whitelabel",id:"whitelabel",level:2},{value:"Example",id:"example-1",level:3},{value:"Custom Authentication",id:"custom-authentication",level:2},{value:"<code>loginConfig</code>",id:"loginconfig",level:4},{value:"Custom Authentication within Web3Auth Modal",id:"custom-authentication-within-web3auth-modal",level:3},{value:"Example",id:"example-2",level:4},{value:"Logging in through your Custom JWT Token",id:"logging-in-through-your-custom-jwt-token",level:3},{value:"Example",id:"example-3",level:4},{value:"Initialization",id:"initialization",level:2},{value:"Change Adapter Settings",id:"change-adapter-settings",level:2},{value:"Arguments",id:"arguments-1",level:3},{value:"Example",id:"example-4",level:2},{value:"<code>@web3auth/modal</code>",id:"web3authmodal",level:3},{value:"<code>web3auth/no-modal</code>",id:"web3authno-modal",level:3}];function A(e){const n={a:"a",admonition:"admonition",code:"code",h2:"h2",h3:"h3",h4:"h4",li:"li",p:"p",pre:"pre",table:"table",tbody:"tbody",td:"td",th:"th",thead:"thead",tr:"tr",ul:"ul",...(0,r.a)(),...e.components};return(0,i.jsxs)(i.Fragment,{children:[(0,i.jsx)(n.h2,{id:"web3authopenlogin-adapter",children:(0,i.jsx)(n.a,{href:"https://npmjs.com/package/@web3auth/openlogin-adapter",children:(0,i.jsx)(n.code,{children:"@web3auth/openlogin-adapter"})})}),"\n",(0,i.jsxs)(n.p,{children:["The default adapter of Web3Auth is the ",(0,i.jsx)(n.code,{children:"openlogin-adapter"}),". This adapter is a wrapper around the\n",(0,i.jsx)(n.a,{href:"https://github.com/torusresearch/OpenLoginSdk",children:(0,i.jsx)(n.code,{children:"openlogin"})})," library from Web3Auth and enables the social login features. By default, Web3Auth has\ncertain configurations set to enable a quick integration, however, for customizing features, like ",(0,i.jsx)(n.a,{href:"/pnp/features/whitelabel",children:"Whitelabel"}),",\n",(0,i.jsx)(n.a,{href:"/pnp/features/custom-authentication",children:"Custom Authentication"}),", etc. you need to configure the Openlogin Adapter. With the Openlogin Adapter package\ninstalled and instantiated, you can explore several options and customize the login experience of the user as per your needs."]}),"\n",(0,i.jsx)(n.h2,{id:"basic-details",children:"Basic Details"}),"\n",(0,i.jsxs)(n.h4,{id:"adapter-name-openlogin",children:["Adapter Name: ",(0,i.jsx)(n.code,{children:"openlogin"})]}),"\n",(0,i.jsxs)(n.h4,{id:"package-name-web3authopenlogin-adapter",children:["Package Name: ",(0,i.jsx)(n.a,{href:"https://npmjs.com/package/@web3auth/openlogin-adapter",children:(0,i.jsx)(n.code,{children:"@web3auth/openlogin-adapter"})})]}),"\n",(0,i.jsxs)(n.h4,{id:"authmode-wallet-dapp",children:["authMode: ",(0,i.jsx)(n.code,{children:"WALLET"}),", ",(0,i.jsx)(n.code,{children:"DAPP"})]}),"\n",(0,i.jsxs)(n.h4,{id:"chainnamespace-eip155-solana",children:["chainNamespace: ",(0,i.jsx)(n.code,{children:"EIP155"}),", ",(0,i.jsx)(n.code,{children:"SOLANA"})]}),"\n",(0,i.jsxs)(n.h4,{id:"default-yes",children:["Default: ",(0,i.jsx)(n.code,{children:"YES"})]}),"\n",(0,i.jsx)(n.h2,{id:"installation",children:"Installation"}),"\n",(0,i.jsxs)(s.Z,{groupId:"npm2yarn",children:[(0,i.jsx)(o.Z,{value:"npm",children:(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-bash",children:"npm install --save @web3auth/openlogin-adapter\n"})})}),(0,i.jsx)(o.Z,{value:"yarn",label:"Yarn",children:(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-bash",children:"yarn add @web3auth/openlogin-adapter\n"})})}),(0,i.jsx)(o.Z,{value:"pnpm",label:"pnpm",children:(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-bash",children:"pnpm add @web3auth/openlogin-adapter\n"})})})]}),"\n",(0,i.jsx)(n.h2,{id:"instantiation",children:"Instantiation"}),"\n",(0,i.jsxs)(n.h4,{id:"import-the-openloginadapter-class-from-web3authopenlogin-adapter",children:["Import the ",(0,i.jsx)(n.code,{children:"OpenloginAdapter"})," class from ",(0,i.jsx)(n.code,{children:"@web3auth/openlogin-adapter"})]}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-tsx",children:'import { OpenloginAdapter } from "@web3auth/openlogin-adapter";\n'})}),"\n",(0,i.jsxs)(n.h4,{id:"assign-the-openloginadapter-class-to-a-variable",children:["Assign the ",(0,i.jsx)(n.code,{children:"OpenloginAdapter"})," class to a variable"]}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-tsx",children:"const openloginAdapter = new OpenloginAdapter(OpenloginAdapterOptions);\n"})}),"\n",(0,i.jsxs)(n.p,{children:["This OpenloginAdapter constructor takes an object with ",(0,i.jsx)(n.code,{children:"OpenloginAdapterOptions"})," as input."]}),"\n",(0,i.jsx)(n.h2,{id:"arguments",children:"Arguments"}),"\n",(0,i.jsx)(n.h4,{id:"openloginadapteroptions",children:(0,i.jsx)(n.code,{children:"OpenloginAdapterOptions"})}),"\n",(0,i.jsxs)(s.Z,{defaultValue:"table",values:[{label:"Table",value:"table"},{label:"Interface",value:"interface"}],children:[(0,i.jsx)(o.Z,{value:"table",children:(0,i.jsxs)(n.table,{children:[(0,i.jsx)(n.thead,{children:(0,i.jsxs)(n.tr,{children:[(0,i.jsx)(n.th,{children:"Parameter"}),(0,i.jsx)(n.th,{children:"type"})]})}),(0,i.jsxs)(n.tbody,{children:[(0,i.jsxs)(n.tr,{children:[(0,i.jsx)(n.td,{children:(0,i.jsx)(n.code,{children:"adapterSettings?"})}),(0,i.jsx)(n.td,{children:(0,i.jsx)(n.a,{href:"#openloginoptions",children:"OpenLoginOptions"})})]}),(0,i.jsxs)(n.tr,{children:[(0,i.jsx)(n.td,{children:(0,i.jsx)(n.code,{children:"loginSettings?"})}),(0,i.jsx)(n.td,{children:(0,i.jsx)(n.a,{href:"#loginsettings",children:"LoginSettings"})})]}),(0,i.jsxs)(n.tr,{children:[(0,i.jsx)(n.td,{children:(0,i.jsx)(n.code,{children:"privateKeyProvider?"})}),(0,i.jsx)(n.td,{children:(0,i.jsx)(n.a,{href:"#loginsettings",children:"PrivateKeyProvider"})})]})]})]})}),(0,i.jsx)(o.Z,{value:"interface",children:(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-tsx",children:'interface OpenloginAdapterOptions extends BaseAdapterSettings {\n  adapterSettings?: MakeOptional<OpenLoginOptions, "clientId" | "network"> & {\n    useCoreKitKey?: boolean;\n  };\n  loginSettings?: LoginSettings;\n  privateKeyProvider?: PrivateKeyProvider;\n}\n'})})})]}),"\n",(0,i.jsx)(n.h3,{id:"custom-chain-config",children:"Custom Chain Config"}),"\n",(0,i.jsx)(n.h3,{id:"openlogin-adapter-settings",children:"Openlogin Adapter Settings"}),"\n",(0,i.jsx)(n.h4,{id:"adaptersettings",children:(0,i.jsx)(n.code,{children:"adapterSettings"})}),"\n",(0,i.jsx)(l,{}),"\n",(0,i.jsx)(n.h3,{id:"login-settings",children:"Login Settings"}),"\n",(0,i.jsx)(n.h4,{id:"loginsettings",children:(0,i.jsx)(n.code,{children:"loginSettings"})}),"\n",(0,i.jsxs)(n.admonition,{type:"warning",children:[(0,i.jsxs)(n.p,{children:["While you can pass your ",(0,i.jsx)(n.code,{children:"chainConfig"})," to ",(0,i.jsx)(n.code,{children:"OpenloginAdapter"}),", it is not required for ",(0,i.jsx)(n.code,{children:"web3auth/no-modal"})," ie. The Web3Auth Plug and Play No Modal\npackage, since you can directly pass ",(0,i.jsx)(n.code,{children:"loginParams"})," over to the ",(0,i.jsx)(n.code,{children:"connectTo"})," function."]}),(0,i.jsxs)(n.p,{children:["Either way, both of these methods will work the same. Please note that the ",(0,i.jsx)(n.code,{children:"connectTo"})," function params will override the ",(0,i.jsx)(n.code,{children:"OpenloginAdapter"})," settings."]}),(0,i.jsxs)(n.p,{children:["Read more about how to pass ",(0,i.jsx)(n.code,{children:"loginParams"})," to ",(0,i.jsx)(n.code,{children:"connectTo"})," in its respective section:\n",(0,i.jsx)(n.a,{href:"/sdk/pnp/web/no-modal/usage#logging-in-the-user",children:(0,i.jsx)(n.code,{children:"web3auth/no-modal"})})]})]}),"\n",(0,i.jsx)(a.ZP,{}),"\n",(0,i.jsx)(n.h2,{id:"multi-factor-authentication",children:"Multi-Factor Authentication"}),"\n",(0,i.jsx)(n.p,{children:"At Web3Auth, we prioritize your security by offering Multi-Factor Authentication (MFA). MFA is an extra layer of protection that verifies your\nidentity when accessing your account. To ensure ownership, you must provide two or more different backup factors. You have the option to choose from\nthe device, social, backup factor (seed phrase), and password factors to guarantee access to your Web3 account. Once you create a recovery factor, MFA\nis enabled, and your keys are divided into three shares for off-chain multi-sig, making the key self-custodial. With backup factors, you can easily\nrecover your account if you lose access to your original device or help log into a new device."}),"\n",(0,i.jsxs)(n.p,{children:["For a dApp, we provide various options to set up Multi-Factor Authentication. You can customize the MFA screen by setting the ",(0,i.jsx)(n.code,{children:"mfaLevel"})," argument. You\ncan enable or disable a backup factor and change their order. Currently, there are four values for ",(0,i.jsx)(n.code,{children:"mfaLevel"}),":"]}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.code,{children:"default"}),": presents the MFA screen every third login"]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.code,{children:"optional"}),": presents the MFA screen on every login, but you can skip it"]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.code,{children:"mandatory"}),": make it mandatory to set up MFA after login"]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.code,{children:"none"}),": skips the MFA setup screen"]}),"\n"]}),"\n",(0,i.jsxs)(n.p,{children:["We offer the following backup factors under ",(0,i.jsx)(n.code,{children:"mfaSettings"}),":"]}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.code,{children:"deviceShareFactor"}),","]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.code,{children:"backUpShareFactor"}),","]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.code,{children:"socialBackupFactor"}),", and"]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.code,{children:"passwordFactor"}),"."]}),"\n"]}),"\n",(0,i.jsx)(n.h3,{id:"example",children:"Example"}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-tsx",children:'const openloginAdapter = new OpenloginAdapter({\n  loginSettings: {\n    mfaLevel: "optional", // default, optional, mandatory, none\n  },\n  adapterSettings: {\n    // SCALE and above plan only feature\n    mfaSettings: {\n      deviceShareFactor: {\n        enable: true,\n        priority: 1,\n        mandatory: true,\n      },\n      backUpShareFactor: {\n        enable: true,\n        priority: 2,\n        mandatory: false,\n      },\n      socialBackupFactor: {\n        enable: true,\n        priority: 3,\n        mandatory: false,\n      },\n      passwordFactor: {\n        enable: true,\n        priority: 4,\n        mandatory: false,\n      },\n    },\n  },\n});\n'})}),"\n",(0,i.jsx)(n.h2,{id:"whitelabel",children:"Whitelabel"}),"\n",(0,i.jsxs)(n.p,{children:["Web3Auth's Social Logins and Email Login run using the OpenLogin Flow. The whole OpenLogin user experience can also be whitelabeled using OpenLogin\nAdapter settings. For this, you need to pass on the ",(0,i.jsx)(n.code,{children:"whiteLabel"})," configuration parameter to the ",(0,i.jsx)(n.code,{children:"adapterSettings"})," property of the ",(0,i.jsx)(n.code,{children:"openlogin-adapter"}),"."]}),"\n",(0,i.jsx)(c.ZP,{}),"\n",(0,i.jsx)(n.h3,{id:"example-1",children:"Example"}),"\n",(0,i.jsx)(h.ZP,{}),"\n",(0,i.jsx)(n.h2,{id:"custom-authentication",children:"Custom Authentication"}),"\n",(0,i.jsxs)(n.p,{children:["While instantiating the Openlogin Adapter, you can pass some configuration objects to the constructor. One of these configurations is the\n",(0,i.jsx)(n.code,{children:"adapterSettings"})," configuration which enables you to make changes in the adapter, enabling you to do things like Whitelabeling and Custom\nAuthentication among other things."]}),"\n",(0,i.jsx)(n.h4,{id:"loginconfig",children:(0,i.jsx)(n.code,{children:"loginConfig"})}),"\n",(0,i.jsxs)(n.p,{children:["The ",(0,i.jsx)(n.code,{children:"loginConfig"})," parameter of ",(0,i.jsx)(n.code,{children:"adapterSettings"})," in ",(0,i.jsx)(n.code,{children:"openlogin-adapter"})," contains the following properties:"]}),"\n",(0,i.jsx)(u.ZP,{}),"\n",(0,i.jsx)(n.h3,{id:"custom-authentication-within-web3auth-modal",children:"Custom Authentication within Web3Auth Modal"}),"\n",(0,i.jsxs)(n.p,{children:["When we're using the ",(0,i.jsx)(n.code,{children:"@web3auth/modal"}),", ie. the Plug and Play Modal SDK, the ",(0,i.jsx)(n.code,{children:"loginConfig"})," should correspond to the socials mentioned in the modal.\nThis means you can use your own authentication services for the following services:"]}),"\n",(0,i.jsxs)(n.p,{children:[(0,i.jsx)(n.code,{children:"google"})," | ",(0,i.jsx)(n.code,{children:"facebook"})," | ",(0,i.jsx)(n.code,{children:"twitter"})," | ",(0,i.jsx)(n.code,{children:"reddit"})," | ",(0,i.jsx)(n.code,{children:"discord"})," | ",(0,i.jsx)(n.code,{children:"twitch"})," | ",(0,i.jsx)(n.code,{children:"apple"})," | ",(0,i.jsx)(n.code,{children:"line"})," | ",(0,i.jsx)(n.code,{children:"github"})," | ",(0,i.jsx)(n.code,{children:"kakao"})," | ",(0,i.jsx)(n.code,{children:"linkedin"})," | ",(0,i.jsx)(n.code,{children:"weibo"})," | ",(0,i.jsx)(n.code,{children:"wechat"})," |\n",(0,i.jsx)(n.code,{children:"passwordless"})]}),"\n",(0,i.jsx)(n.admonition,{type:"info",children:(0,i.jsx)(n.p,{children:"You can customize all or a few of the social logins and others will remain default. You can also remove the ones you don't want using the\nwhitelabeling option."})}),"\n",(0,i.jsx)(n.h4,{id:"example-2",children:"Example"}),"\n",(0,i.jsx)(g.ZP,{}),"\n",(0,i.jsx)(n.h3,{id:"logging-in-through-your-custom-jwt-token",children:"Logging in through your Custom JWT Token"}),"\n",(0,i.jsxs)(n.p,{children:["When we are using ",(0,i.jsx)(n.code,{children:"@web3auth/no-modal"}),", ie. Web3Auth Plug and Play No Modal SDK, we have the option to use the ",(0,i.jsx)(n.code,{children:"connectTo"})," function, which enables you\nto customize the login process according to the parameters you have for your custom authentication service."]}),"\n",(0,i.jsx)(p.ZP,{}),"\n",(0,i.jsx)(n.admonition,{type:"tip",children:(0,i.jsxs)(n.p,{children:["Know more about the ",(0,i.jsx)(n.code,{children:"connectTo"})," function in the ",(0,i.jsx)(n.a,{href:"/sdk/pnp/web/no-modal/usage#logging-in-the-user",children:(0,i.jsx)(n.code,{children:"Usage SDK Reference"})})]})}),"\n",(0,i.jsxs)(n.p,{children:["Further, to enable Custom Authentication, the ",(0,i.jsx)(n.code,{children:"loginParams"})," parameter takes in another object called ",(0,i.jsx)(n.code,{children:"extraLoginOptions"})," which contains the following\nproperties:"]}),"\n",(0,i.jsx)(x.ZP,{}),"\n",(0,i.jsx)(n.h4,{id:"example-3",children:"Example"}),"\n",(0,i.jsx)(j.ZP,{}),"\n",(0,i.jsx)(f.ZP,{}),"\n",(0,i.jsx)(n.h2,{id:"initialization",children:"Initialization"}),"\n",(0,i.jsx)(n.p,{children:"Finally, once all the configurations are set, you need to initialize the Openlogin Adapter."}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-tsx",children:"web3auth.configureAdapter(openloginAdapter);\n"})}),"\n",(0,i.jsx)(n.h2,{id:"change-adapter-settings",children:"Change Adapter Settings"}),"\n",(0,i.jsxs)(n.p,{children:["You can change the adapter settings by calling the ",(0,i.jsx)(n.code,{children:"setAdapterSettings()"})," function on the adapter instance. This function takes the below-mentioned\nparameters as well as ",(0,i.jsx)("b",{children:(0,i.jsx)(n.a,{href:"#openlogin-adapter-settings",children:"Openlogin Adapter Settings"})}),"."]}),"\n",(0,i.jsx)(n.h3,{id:"arguments-1",children:"Arguments"}),"\n",(0,i.jsxs)(s.Z,{defaultValue:"table",values:[{label:"Table",value:"table"},{label:"Interface",value:"interface"}],children:[(0,i.jsx)(o.Z,{value:"table",children:(0,i.jsxs)(n.table,{children:[(0,i.jsx)(n.thead,{children:(0,i.jsxs)(n.tr,{children:[(0,i.jsx)(n.th,{children:"Parameter"}),(0,i.jsx)(n.th,{children:"type"})]})}),(0,i.jsxs)(n.tbody,{children:[(0,i.jsxs)(n.tr,{children:[(0,i.jsx)(n.td,{children:(0,i.jsx)(n.code,{children:"clientId?"})}),(0,i.jsx)(n.td,{children:(0,i.jsx)(n.code,{children:"string"})})]}),(0,i.jsxs)(n.tr,{children:[(0,i.jsx)(n.td,{children:(0,i.jsx)(n.code,{children:"sessionTime?"})}),(0,i.jsx)(n.td,{children:(0,i.jsx)(n.code,{children:"number"})})]}),(0,i.jsxs)(n.tr,{children:[(0,i.jsx)(n.td,{children:(0,i.jsx)(n.code,{children:"chainConfig?"})}),(0,i.jsx)(n.td,{children:(0,i.jsx)(n.code,{children:"CustomChainConfig"})})]}),(0,i.jsxs)(n.tr,{children:[(0,i.jsx)(n.td,{children:(0,i.jsx)(n.code,{children:"web3AuthNetwork?"})}),(0,i.jsx)(n.td,{children:(0,i.jsx)(n.code,{children:"OPENLOGIN_NETWORK_TYPE"})})]})]})]})}),(0,i.jsx)(o.Z,{value:"interface",children:(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-tsx",children:"interface BaseAdapterSettings {\n  clientId?: string;\n  sessionTime?: number;\n  chainConfig?: CustomChainConfig;\n  web3AuthNetwork?: OPENLOGIN_NETWORK_TYPE;\n}\n"})})})]}),"\n",(0,i.jsx)(n.h2,{id:"example-4",children:"Example"}),"\n",(0,i.jsx)(n.h3,{id:"web3authmodal",children:(0,i.jsx)(n.code,{children:"@web3auth/modal"})}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-tsx",children:'const openloginAdapter = new OpenloginAdapter({\n  adapterSettings: {\n    uxMode: "redirect", // "redirect" | "popup"\n    whiteLabel: {\n      logoLight: "https://web3auth.io/images/w3a-L-Favicon-1.svg",\n      logoDark: "https://web3auth.io/images/w3a-D-Favicon-1.svg",\n      defaultLanguage: "en", // en, de, ja, ko, zh, es, fr, pt, nl\n      mode: "dark", // whether to enable dark, light or auto mode. defaultValue: auto [ system theme]\n    },\n    // SCALE and above plan only feature\n    mfaSettings: {\n      deviceShareFactor: {\n        enable: true,\n        priority: 1,\n        mandatory: true,\n      },\n      backUpShareFactor: {\n        enable: true,\n        priority: 2,\n        mandatory: false,\n      },\n      socialBackupFactor: {\n        enable: true,\n        priority: 3,\n        mandatory: false,\n      },\n      passwordFactor: {\n        enable: true,\n        priority: 4,\n        mandatory: false,\n      },\n    },\n    loginConfig: {\n      // Add login configs corresponding to the providers on modal\n      // Google login\n      google: {\n        verifier: "YOUR_GOOGLE_VERIFIER_NAME", // Please create a verifier on the developer dashboard and pass the name here\n        typeOfLogin: "google", // Pass on the login provider of the verifier you\'ve created\n        clientId: "GOOGLE_CLIENT_ID.apps.googleusercontent.com", // Pass on the clientId of the login provider here - Please note this differs from the Web3Auth ClientID. This is the JWT Client ID\n      },\n      // Facebook login\n      facebook: {\n        verifier: "YOUR_FACEBOOK_VERIFIER_NAME", // Please create a verifier on the developer dashboard and pass the name here\n        typeOfLogin: "facebook", // Pass on the login provider of the verifier you\'ve created\n        clientId: "FACEBOOK_CLIENT_ID_1234567890", // Pass on the clientId of the login provider here - Please note this differs from the Web3Auth ClientID. This is the JWT Client ID\n      },\n      // Add other login providers here\n    },\n  },\n  loginSettings: {\n    mfaLevel: "mandatory",\n  },\n});\nweb3auth.configureAdapter(openloginAdapter);\n\n// You can change the adapter settings by calling the `setAdapterSettings()` function on the adapter instance.\n\nopenloginAdapter.setAdapterSettings({\n  web3AuthNetwork: "sapphire_mainnet",\n  sessionTime: 3600, // 1 hour in seconds\n  chainConfig: {\n    chainNamespace: CHAIN_NAMESPACES.EIP155,\n    chainId: "0x1",\n    rpcTarget: "https://rpc.ankr.com/eth", // This is the public RPC we have added, please pass on your own endpoint while creating an app\n  },\n  clientId,\n  redirectUrl: "http://localhost:3000",\n});\n'})}),"\n",(0,i.jsx)(n.h3,{id:"web3authno-modal",children:(0,i.jsx)(n.code,{children:"web3auth/no-modal"})}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-tsx",children:'const openloginAdapter = new OpenloginAdapter({\n  adapterSettings: {\n    network: "sapphire_mainnet",\n    uxMode: "popup",\n    whiteLabel: {\n      appName: "W3A Heroes",\n      appUrl: "https://web3auth.io",\n      logoLight: "https://web3auth.io/images/w3a-L-Favicon-1.svg",\n      logoDark: "https://web3auth.io/images/w3a-D-Favicon-1.svg",\n      defaultLanguage: "en", // en, de, ja, ko, zh, es, fr, pt, nl\n      mode: "auto", // whether to enable dark mode. defaultValue: false\n      theme: {\n        primary: "#768729",\n      },\n      useLogoLoader: true,\n    },\n    // SCALE and above plan only feature\n    mfaSettings: {\n      deviceShareFactor: {\n        enable: true,\n        priority: 1,\n        mandatory: true,\n      },\n      backUpShareFactor: {\n        enable: true,\n        priority: 2,\n        mandatory: false,\n      },\n      socialBackupFactor: {\n        enable: true,\n        priority: 3,\n        mandatory: false,\n      },\n      passwordFactor: {\n        enable: true,\n        priority: 4,\n        mandatory: false,\n      },\n    },\n    loginConfig: {\n      jwt: {\n        verifier: "web3auth-auth0-demo",\n        typeOfLogin: "jwt",\n        clientId: "294QRkchfq2YaXUbPri7D6PH7xzHgQMT",\n      },\n    },\n  },\n});\nweb3auth.configureAdapter(openloginAdapter);\n\n// You can change the adapter settings by calling the `setAdapterSettings()` function on the adapter instance.\n\nopenloginAdapter.setAdapterSettings({\n  web3AuthNetwork: "sapphire_mainnet",\n  sessionTime: 3600, // 1 hour in seconds\n  chainConfig: {\n    chainNamespace: CHAIN_NAMESPACES.EIP155,\n    chainId: "0x1",\n    rpcTarget: "https://rpc.ankr.com/eth", // This is the public RPC we have added, please pass on your own endpoint while creating an app\n  },\n  clientId,\n  redirectUrl: "http://localhost:3000",\n});\n'})})]})}function T(e={}){const{wrapper:n}={...(0,r.a)(),...e.components};return n?(0,i.jsx)(n,{...e,children:(0,i.jsx)(A,{...e})}):A(e)}},85162:(e,n,t)=>{t.d(n,{Z:()=>s});t(67294);var i=t(36905);const r={tabItem:"tabItem_Ymn6"};var o=t(85893);function s(e){let{children:n,hidden:t,className:s}=e;return(0,o.jsx)("div",{role:"tabpanel",className:(0,i.Z)(r.tabItem,s),hidden:t,children:n})}},74866:(e,n,t)=>{t.d(n,{Z:()=>y});var i=t(67294),r=t(36905),o=t(12466),s=t(16550),d=t(20469),l=t(91980),a=t(67392),c=t(50012);function h(e){return i.Children.toArray(e).filter((e=>"\n"!==e)).map((e=>{if(!e||(0,i.isValidElement)(e)&&function(e){const{props:n}=e;return!!n&&"object"==typeof n&&"value"in n}(e))return e;throw new Error(`Docusaurus error: Bad <Tabs> child <${"string"==typeof e.type?e.type:e.type.name}>: all children of the <Tabs> component should be <TabItem>, and every <TabItem> should have a unique "value" prop.`)}))?.filter(Boolean)??[]}function u(e){const{values:n,children:t}=e;return(0,i.useMemo)((()=>{const e=n??function(e){return h(e).map((e=>{let{props:{value:n,label:t,attributes:i,default:r}}=e;return{value:n,label:t,attributes:i,default:r}}))}(t);return function(e){const n=(0,a.l)(e,((e,n)=>e.value===n.value));if(n.length>0)throw new Error(`Docusaurus error: Duplicate values "${n.map((e=>e.value)).join(", ")}" found in <Tabs>. Every value needs to be unique.`)}(e),e}),[n,t])}function p(e){let{value:n,tabValues:t}=e;return t.some((e=>e.value===n))}function x(e){let{queryString:n=!1,groupId:t}=e;const r=(0,s.k6)(),o=function(e){let{queryString:n=!1,groupId:t}=e;if("string"==typeof n)return n;if(!1===n)return null;if(!0===n&&!t)throw new Error('Docusaurus error: The <Tabs> component groupId prop is required if queryString=true, because this value is used as the search param name. You can also provide an explicit value such as queryString="my-search-param".');return t??null}({queryString:n,groupId:t});return[(0,l._X)(o),(0,i.useCallback)((e=>{if(!o)return;const n=new URLSearchParams(r.location.search);n.set(o,e),r.replace({...r.location,search:n.toString()})}),[o,r])]}function j(e){const{defaultValue:n,queryString:t=!1,groupId:r}=e,o=u(e),[s,l]=(0,i.useState)((()=>function(e){let{defaultValue:n,tabValues:t}=e;if(0===t.length)throw new Error("Docusaurus error: the <Tabs> component requires at least one <TabItem> children component");if(n){if(!p({value:n,tabValues:t}))throw new Error(`Docusaurus error: The <Tabs> has a defaultValue "${n}" but none of its children has the corresponding value. Available values are: ${t.map((e=>e.value)).join(", ")}. If you intend to show no default tab, use defaultValue={null} instead.`);return n}const i=t.find((e=>e.default))??t[0];if(!i)throw new Error("Unexpected error: 0 tabValues");return i.value}({defaultValue:n,tabValues:o}))),[a,h]=x({queryString:t,groupId:r}),[j,g]=function(e){let{groupId:n}=e;const t=function(e){return e?`docusaurus.tab.${e}`:null}(n),[r,o]=(0,c.Nk)(t);return[r,(0,i.useCallback)((e=>{t&&o.set(e)}),[t,o])]}({groupId:r}),f=(()=>{const e=a??j;return p({value:e,tabValues:o})?e:null})();(0,d.Z)((()=>{f&&l(f)}),[f]);return{selectedValue:s,selectValue:(0,i.useCallback)((e=>{if(!p({value:e,tabValues:o}))throw new Error(`Can't select invalid tab value=${e}`);l(e),h(e),g(e)}),[h,g,o]),tabValues:o}}var g=t(72389);const f={tabList:"tabList__CuJ",tabItem:"tabItem_LNqP"};var b=t(85893);function m(e){let{className:n,block:t,selectedValue:i,selectValue:s,tabValues:d}=e;const l=[],{blockElementScrollPositionUntilNextRender:a}=(0,o.o5)(),c=e=>{const n=e.currentTarget,t=l.indexOf(n),r=d[t].value;r!==i&&(a(n),s(r))},h=e=>{let n=null;switch(e.key){case"Enter":c(e);break;case"ArrowRight":{const t=l.indexOf(e.currentTarget)+1;n=l[t]??l[0];break}case"ArrowLeft":{const t=l.indexOf(e.currentTarget)-1;n=l[t]??l[l.length-1];break}}n?.focus()};return(0,b.jsx)("ul",{role:"tablist","aria-orientation":"horizontal",className:(0,r.Z)("tabs",{"tabs--block":t},n),children:d.map((e=>{let{value:n,label:t,attributes:o}=e;return(0,b.jsx)("li",{role:"tab",tabIndex:i===n?0:-1,"aria-selected":i===n,ref:e=>l.push(e),onKeyDown:h,onClick:c,...o,className:(0,r.Z)("tabs__item",f.tabItem,o?.className,{"tabs__item--active":i===n}),children:t??n},n)}))})}function w(e){let{lazy:n,children:t,selectedValue:r}=e;const o=(Array.isArray(t)?t:[t]).filter(Boolean);if(n){const e=o.find((e=>e.props.value===r));return e?(0,i.cloneElement)(e,{className:"margin-top--md"}):null}return(0,b.jsx)("div",{className:"margin-top--md",children:o.map(((e,n)=>(0,i.cloneElement)(e,{key:n,hidden:e.props.value!==r})))})}function v(e){const n=j(e);return(0,b.jsxs)("div",{className:(0,r.Z)("tabs-container",f.tabList),children:[(0,b.jsx)(m,{...e,...n}),(0,b.jsx)(w,{...e,...n})]})}function y(e){const n=(0,g.Z)();return(0,b.jsx)(v,{...e,children:h(e.children)},String(n))}},11151:(e,n,t)=>{t.d(n,{Z:()=>d,a:()=>s});var i=t(67294);const r={},o=i.createContext(r);function s(e){const n=i.useContext(o);return i.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function d(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(r):e.components||r:s(e.components),i.createElement(o.Provider,{value:n},e.children)}}}]);