"use strict";(self.webpackChunkweb3auth_docs=self.webpackChunkweb3auth_docs||[]).push([[57438],{47257:(e,i,t)=>{t.r(i),t.d(i,{assets:()=>l,contentTitle:()=>d,default:()=>h,frontMatter:()=>s,metadata:()=>o,toc:()=>a});var n=t(85893),r=t(11151);const s={title:"Initialize Web3auth CoreKit tKey Android SDK",sidebar_label:"Initialize",displayed_sidebar:"sdk",description:"Android SDK - Initialization | Documentation - Web3Auth"},d=void 0,o={id:"sdk/core-kit/tkey-android/initialize",title:"Initialize Web3auth CoreKit tKey Android SDK",description:"Android SDK - Initialization | Documentation - Web3Auth",source:"@site/docs/sdk/core-kit/tkey-android/initialize.mdx",sourceDirName:"sdk/core-kit/tkey-android",slug:"/sdk/core-kit/tkey-android/initialize",permalink:"/docs/sdk/core-kit/tkey-android/initialize",draft:!1,unlisted:!1,editUrl:"https://github.com/web3auth/web3auth-docs/edit/master/docs/sdk/core-kit/tkey-android/initialize.mdx",tags:[],version:"current",frontMatter:{title:"Initialize Web3auth CoreKit tKey Android SDK",sidebar_label:"Initialize",displayed_sidebar:"sdk",description:"Android SDK - Initialization | Documentation - Web3Auth"},sidebar:"sdk",previous:{title:"Install",permalink:"/docs/sdk/core-kit/tkey-android/install"},next:{title:"Usage",permalink:"/docs/sdk/core-kit/tkey-android/usage"}},l={},a=[{value:"Configuring Service Provider",id:"configuring-service-provider",level:2},{value:"Installation",id:"installation",level:3},{value:"Add CustomAuth to Gradle",id:"add-customauth-to-gradle",level:4},{value:"Initialization",id:"initialization",level:3},{value:"<code>SubVerifierDetails</code>",id:"subverifierdetails",level:4},{value:"<code>CustomAuth</code>",id:"customauth",level:4},{value:"Initializing Service Provider",id:"initializing-service-provider",level:2},{value:"Instantiating tKey",id:"instantiating-tkey",level:2},{value:"Parameters",id:"parameters",level:3}];function c(e){const i={a:"a",admonition:"admonition",code:"code",h2:"h2",h3:"h3",h4:"h4",li:"li",ol:"ol",p:"p",pre:"pre",strong:"strong",table:"table",tbody:"tbody",td:"td",th:"th",thead:"thead",tr:"tr",ul:"ul",...(0,r.a)(),...e.components};return(0,n.jsxs)(n.Fragment,{children:[(0,n.jsx)(i.p,{children:"Once you have installed the Web3Auth Core Kit tKey SDK, the next step is to initialize it. This involves a few steps, such as initiating the tKey SDK\nwith the service provider and modules."}),"\n",(0,n.jsxs)(i.ul,{children:["\n",(0,n.jsx)(i.li,{children:(0,n.jsx)(i.a,{href:"#configuring-service-provider",children:"Configuration of Service Provider"})}),"\n",(0,n.jsx)(i.li,{children:(0,n.jsx)(i.a,{href:"#initializing-service-provider",children:"Initializing Service Provider"})}),"\n",(0,n.jsx)(i.li,{children:(0,n.jsx)(i.a,{href:"#instantiating-tkey",children:"Instantiation of tKey"})}),"\n"]}),"\n",(0,n.jsx)(i.h2,{id:"configuring-service-provider",children:"Configuring Service Provider"}),"\n",(0,n.jsxs)(i.p,{children:["Service Provider in ",(0,n.jsx)(i.code,{children:"tKey"})," generates a ",(0,n.jsx)(i.a,{href:"/sdk/core-kit/tkey",children:(0,n.jsx)(i.strong,{children:"Share A"})}),", i.e., the private key share managed by a wallet service provider via their\nauthentication flows. This share in our ",(0,n.jsx)(i.a,{href:"/infrastructure/",children:"wallet infrastructure"})," refers to the social login aspect, where we associate a private key\nshare with the user's social login, enabling the seamless login experience."]}),"\n",(0,n.jsxs)(i.p,{children:["To configure your service provider, you must use ",(0,n.jsx)(i.a,{href:"https://github.com/torusresearch/customauth-android-sdk",children:"CustomAuth Android SDK"}),". Please note that\nthis SDK is not automatically installed with tKey Android SDK, so you must install it first."]}),"\n",(0,n.jsx)(i.p,{children:(0,n.jsx)(i.strong,{children:"Usage of CustomAuth Swift SDK"})}),"\n",(0,n.jsx)(i.h3,{id:"installation",children:"Installation"}),"\n",(0,n.jsx)(i.h4,{id:"add-customauth-to-gradle",children:"Add CustomAuth to Gradle"}),"\n",(0,n.jsxs)(i.p,{children:["In your project-level ",(0,n.jsx)(i.code,{children:"build.gradle"})," or ",(0,n.jsx)(i.code,{children:"settings.gradle"})," file, add JitPack repository:"]}),"\n",(0,n.jsx)(i.pre,{children:(0,n.jsx)(i.code,{className:"language-groovy",children:'dependencyResolutionManagement {\n    repositoriesMode.set(RepositoriesMode.FAIL_ON_PROJECT_REPOS)\n    repositories {\n        google()\n        mavenCentral()\n        // highlight-next-line\n        maven { url "https://jitpack.io" } // <-- Add this line\n    }\n}\n'})}),"\n",(0,n.jsxs)(i.p,{children:["Then, in your app-level ",(0,n.jsx)(i.code,{children:"build.gradle"})," dependencies section, add the following:"]}),"\n",(0,n.jsx)(i.pre,{children:(0,n.jsx)(i.code,{className:"language-groovy",children:"dependencies {\n    // ...\n    // highlight-next-line\n    implementation 'org.torusresearch:customauth-android-sdk:5.0.2'\n}\n"})}),"\n",(0,n.jsx)(i.admonition,{title:"Latest-SDK",type:"info",children:(0,n.jsxs)(i.p,{children:["Check the ",(0,n.jsx)(i.strong,{children:(0,n.jsx)(i.a,{href:"https://github.com/torusresearch/customauth-android-sdk/releases",children:"latest version of Web3Auth's CustomAuth Android SDK"})})," and update\naccordingly."]})}),"\n",(0,n.jsx)(i.h3,{id:"initialization",children:"Initialization"}),"\n",(0,n.jsx)(i.p,{children:"Initalize the SDK depending on the login you require."}),"\n",(0,n.jsx)(i.pre,{children:(0,n.jsx)(i.code,{className:"language-java",children:'import org.torusresearch.customauth.CustomAuth;\n\nprivate CustomAuth torusSdk;\nMainActivity activity = ((MainActivity) requireActivity());\n\nCustomAuthArgs args = new CustomAuthArgs(\n  "https://scripts.toruswallet.io/redirect.html",\n  TorusNetwork.TESTNET,\n  "torusapp://org.torusresearch.customauthandroid/redirect"\n);\n\nthis.torusSdk = new CustomAuth(args, activity);\n\nselectedLoginVerifier = new LoginVerifier(\n  name: "Google",\n  typeOfLogin: LoginType.GOOGLE,\n  clientId: GOOGLE_CLIENT_ID,\n  verifier: GOOGLE_VERIFIER);\n'})}),"\n",(0,n.jsx)(i.h4,{id:"subverifierdetails",children:(0,n.jsx)(i.code,{children:"SubVerifierDetails"})}),"\n",(0,n.jsxs)(i.table,{children:[(0,n.jsx)(i.thead,{children:(0,n.jsxs)(i.tr,{children:[(0,n.jsx)(i.th,{children:"Parameter"}),(0,n.jsx)(i.th,{children:"Type"}),(0,n.jsx)(i.th,{children:"Mandatory"}),(0,n.jsx)(i.th,{children:"Description"})]})}),(0,n.jsxs)(i.tbody,{children:[(0,n.jsxs)(i.tr,{children:[(0,n.jsx)(i.td,{children:(0,n.jsx)(i.code,{children:"typeOfLogin"})}),(0,n.jsx)(i.td,{children:"LoginType"}),(0,n.jsx)(i.td,{children:"Yes"}),(0,n.jsxs)(i.td,{children:["loginProvider to be used. [ ",(0,n.jsx)(i.code,{children:"google"}),", ",(0,n.jsx)(i.code,{children:"facebook"}),", ",(0,n.jsx)(i.code,{children:"twitch"}),", ",(0,n.jsx)(i.code,{children:"reddit"}),", ",(0,n.jsx)(i.code,{children:"discord"}),", ",(0,n.jsx)(i.code,{children:"apple"}),", ",(0,n.jsx)(i.code,{children:"github"}),", ",(0,n.jsx)(i.code,{children:"linkedin"}),", ",(0,n.jsx)(i.code,{children:"kakao"}),", ",(0,n.jsx)(i.code,{children:"twitter"}),", ",(0,n.jsx)(i.code,{children:"weibo"}),", ",(0,n.jsx)(i.code,{children:"line"}),", ",(0,n.jsx)(i.code,{children:"wechat"}),", ",(0,n.jsx)(i.code,{children:"email_password"}),", and ",(0,n.jsx)(i.code,{children:"jwt"})," ]"]})]}),(0,n.jsxs)(i.tr,{children:[(0,n.jsx)(i.td,{children:(0,n.jsx)(i.code,{children:"verifier"})}),(0,n.jsx)(i.td,{children:"String"}),(0,n.jsx)(i.td,{children:"Yes"}),(0,n.jsx)(i.td,{children:"Web3Auth verifier name"})]}),(0,n.jsxs)(i.tr,{children:[(0,n.jsx)(i.td,{children:(0,n.jsx)(i.code,{children:"clientId"})}),(0,n.jsx)(i.td,{children:"String"}),(0,n.jsx)(i.td,{children:"Yes"}),(0,n.jsx)(i.td,{children:"login provider's client Id."})]}),(0,n.jsxs)(i.tr,{children:[(0,n.jsx)(i.td,{children:(0,n.jsx)(i.code,{children:"jwtParams"})}),(0,n.jsx)(i.td,{children:"String"}),(0,n.jsx)(i.td,{children:"No"}),(0,n.jsx)(i.td,{children:"Additional JWT parameters to be passed."})]}),(0,n.jsxs)(i.tr,{children:[(0,n.jsx)(i.td,{children:(0,n.jsx)(i.code,{children:"isNewActivity"})}),(0,n.jsx)(i.td,{children:"boolean"}),(0,n.jsx)(i.td,{children:"No"}),(0,n.jsx)(i.td,{children:"isNewActivity Boolean"})]}),(0,n.jsxs)(i.tr,{children:[(0,n.jsx)(i.td,{children:(0,n.jsx)(i.code,{children:"preferCustomTabs"})}),(0,n.jsx)(i.td,{children:"boolean"}),(0,n.jsx)(i.td,{children:"No"}),(0,n.jsx)(i.td,{children:"preferCustomTabs"})]}),(0,n.jsxs)(i.tr,{children:[(0,n.jsx)(i.td,{children:(0,n.jsx)(i.code,{children:"allowedBrowsers"})}),(0,n.jsx)(i.td,{children:"String[]"}),(0,n.jsx)(i.td,{children:"No"}),(0,n.jsx)(i.td,{children:"String[] array"})]})]})]}),"\n",(0,n.jsx)(i.h4,{id:"customauth",children:(0,n.jsx)(i.code,{children:"CustomAuth"})}),"\n",(0,n.jsx)(i.p,{children:(0,n.jsx)(i.code,{children:"CustomAuth(CustomAuthArgs, activity)"})}),"\n",(0,n.jsx)(i.p,{children:(0,n.jsx)(i.code,{children:"CustomAuthArgs"})}),"\n",(0,n.jsxs)(i.table,{children:[(0,n.jsx)(i.thead,{children:(0,n.jsxs)(i.tr,{children:[(0,n.jsx)(i.th,{children:"Parameter"}),(0,n.jsx)(i.th,{children:"Type"}),(0,n.jsx)(i.th,{children:"Mandatory"}),(0,n.jsx)(i.th,{children:"Description"})]})}),(0,n.jsxs)(i.tbody,{children:[(0,n.jsxs)(i.tr,{children:[(0,n.jsx)(i.td,{children:(0,n.jsx)(i.code,{children:"browserRedirectUri"})}),(0,n.jsx)(i.td,{children:"String"}),(0,n.jsx)(i.td,{children:"Yes"}),(0,n.jsxs)(i.td,{children:["It refers to a page that the browser should use in the login flow, it should have a http or https scheme. e.g. ",(0,n.jsx)(i.code,{children:"https://scripts.toruswallet.io/redirect.html"})]})]}),(0,n.jsxs)(i.tr,{children:[(0,n.jsx)(i.td,{children:(0,n.jsx)(i.code,{children:"redirectUri"})}),(0,n.jsx)(i.td,{children:"String"}),(0,n.jsx)(i.td,{children:"Yes"}),(0,n.jsxs)(i.td,{children:["It refers to a url for the login flow to redirect into your app, it should have a scheme that is registered by your app, for example ",(0,n.jsx)(i.code,{children:"com.mycompany.myapp://redirect"})]})]}),(0,n.jsxs)(i.tr,{children:[(0,n.jsx)(i.td,{children:(0,n.jsx)(i.code,{children:"network"})}),(0,n.jsx)(i.td,{children:"Network"}),(0,n.jsx)(i.td,{children:"Yes"}),(0,n.jsxs)(i.td,{children:["Network to be used. [ ",(0,n.jsx)(i.code,{children:"MAINNET"}),", ",(0,n.jsx)(i.code,{children:"TESTNET"}),", ",(0,n.jsx)(i.code,{children:"CYAN"}),", ",(0,n.jsx)(i.code,{children:"AQUA"}),"]"]})]})]})]}),"\n",(0,n.jsx)(i.h2,{id:"initializing-service-provider",children:"Initializing Service Provider"}),"\n",(0,n.jsxs)(i.ol,{children:["\n",(0,n.jsxs)(i.li,{children:[(0,n.jsx)(i.code,{children:"triggerLogin()"})," returns a promise that resolve with a Dictionary that contain at least ",(0,n.jsx)(i.code,{children:"privateKey"})," and ",(0,n.jsx)(i.code,{children:"publicAddress"})," field."]}),"\n",(0,n.jsxs)(i.li,{children:["Initialize the activity's postboxKey with the privateKey retrived by the result of ",(0,n.jsx)(i.code,{children:"triggerLogin()"}),", that to be used in the next step."]}),"\n"]}),"\n",(0,n.jsx)(i.pre,{children:(0,n.jsx)(i.code,{className:"language-java",children:'torusLoginResponseCf = torusSdk.triggerLogin(new SubVerifierDetails(\n  selectedLoginVerifier.getTypeOfLogin(),\n  selectedLoginVerifier.getVerifier(),\n  selectedLoginVerifier.getClientId())\n  .setPreferCustomTabs(true)\n  .setAllowedBrowsers(allowedBrowsers));\n\ntorusLoginResponseCf.whenCompleteAsync((torusLoginResponse, error) -> {\n  if (error != null) {\n      renderError(error);\n  } else {\n      activity.runOnUiThread(() -> {\n          String publicAddress = torusLoginResponse.getPublicAddress();\n          activity.postboxKey = torusLoginResponse.getPrivateKey().toString(16);\n          binding.resultView.append("publicAddress: " + publicAddress);\n      });\n  }\n});\n'})}),"\n",(0,n.jsx)(i.h2,{id:"instantiating-tkey",children:"Instantiating tKey"}),"\n",(0,n.jsx)(i.pre,{children:(0,n.jsx)(i.code,{className:"language-java",children:"activity.appKey = new ThresholdKey(\n  metadata: null,\n  shares: null,\n  storage: activity.tkeyStorage,\n  provider: activity.tkeyProvider,\n  transitions: null,\n  lastFetchedCloudMetadata: null,\n  enableLogging: false,\n  manualSync: false);\n"})}),"\n",(0,n.jsx)(i.h3,{id:"parameters",children:"Parameters"}),"\n",(0,n.jsxs)(i.table,{children:[(0,n.jsx)(i.thead,{children:(0,n.jsxs)(i.tr,{children:[(0,n.jsx)(i.th,{children:"Parameter"}),(0,n.jsx)(i.th,{children:"Type"}),(0,n.jsx)(i.th,{children:"Description"}),(0,n.jsx)(i.th,{children:"Mandatory"})]})}),(0,n.jsxs)(i.tbody,{children:[(0,n.jsxs)(i.tr,{children:[(0,n.jsx)(i.td,{children:(0,n.jsx)(i.code,{children:"metadata"})}),(0,n.jsx)(i.td,{children:(0,n.jsx)(i.code,{children:"Metadata"})}),(0,n.jsx)(i.td,{children:"Metadata object containing the metadata details of tKey."}),(0,n.jsx)(i.td,{children:"No"})]}),(0,n.jsxs)(i.tr,{children:[(0,n.jsx)(i.td,{children:(0,n.jsx)(i.code,{children:"shares"})}),(0,n.jsx)(i.td,{children:(0,n.jsx)(i.code,{children:"ShareStorePolyIdIndexMap"})}),(0,n.jsx)(i.td,{children:"Array of ShareStore with PolyId."}),(0,n.jsx)(i.td,{children:"No"})]}),(0,n.jsxs)(i.tr,{children:[(0,n.jsx)(i.td,{children:(0,n.jsx)(i.code,{children:"storage"})}),(0,n.jsx)(i.td,{children:(0,n.jsx)(i.code,{children:"StorageLayer"})}),(0,n.jsx)(i.td,{children:"Takes in the Storage Provider Instance"}),(0,n.jsx)(i.td,{children:"No"})]}),(0,n.jsxs)(i.tr,{children:[(0,n.jsx)(i.td,{children:(0,n.jsx)(i.code,{children:"provider"})}),(0,n.jsx)(i.td,{children:(0,n.jsx)(i.code,{children:"ServiceProvider"})}),(0,n.jsx)(i.td,{children:"Takes in the Service Provider Instance"}),(0,n.jsx)(i.td,{children:"No"})]}),(0,n.jsxs)(i.tr,{children:[(0,n.jsx)(i.td,{children:(0,n.jsx)(i.code,{children:"transitions"})}),(0,n.jsx)(i.td,{children:(0,n.jsx)(i.code,{children:"LocalMetadataTransitions"})}),(0,n.jsx)(i.td,{children:"Local metadata transitions"}),(0,n.jsx)(i.td,{children:"No"})]}),(0,n.jsxs)(i.tr,{children:[(0,n.jsx)(i.td,{children:(0,n.jsx)(i.code,{children:"lastFetchedCloudMetadata"})}),(0,n.jsx)(i.td,{children:(0,n.jsx)(i.code,{children:"Metadata"})}),(0,n.jsx)(i.td,{children:"lastFetchedCloudMetadata"}),(0,n.jsx)(i.td,{children:"No"})]}),(0,n.jsxs)(i.tr,{children:[(0,n.jsx)(i.td,{children:(0,n.jsx)(i.code,{children:"enableLogging"})}),(0,n.jsx)(i.td,{children:(0,n.jsx)(i.code,{children:"boolean"})}),(0,n.jsx)(i.td,{children:"This option is used to specify whether to enable logging or not."}),(0,n.jsx)(i.td,{children:"No"})]}),(0,n.jsxs)(i.tr,{children:[(0,n.jsx)(i.td,{children:(0,n.jsx)(i.code,{children:"manualSync"})}),(0,n.jsx)(i.td,{children:(0,n.jsx)(i.code,{children:"boolean"})}),(0,n.jsx)(i.td,{children:"manual sync provides atomicity to your tkey share. If manualSync is true, you should sync your local metadata transitions manually to your storageLayer, which means your storage layer doesn\u2019t know the local changes of your tkey unless you manually sync, gives atomicity. Otherwise, If manualSync is false, then your local metadata changes will be synced automatically to your storage layer. If manualSync = true and want to synchronize manually."}),(0,n.jsx)(i.td,{children:"No"})]})]})]}),"\n",(0,n.jsx)(i.pre,{children:(0,n.jsx)(i.code,{className:"language-java",metastring:'title="Usage"',children:'activity.postboxKey = torusLoginResponse.getPrivateKey().toString(16);\n\nactivity.tkeyStorage = new StorageLayer(\n  enableLogging: false,\n  hostUrl: "https://metadata.tor.us",\n  serverTimeOffset: 2);\n\nactivity.tkeyProvider = new ServiceProvider(\n  enableLogging: false,\n  postboxKey: activity.postboxKey);\n\nactivity.appKey = new ThresholdKey(\n  metadata: null,\n  shares: null,\n  storage: activity.tkeyStorage,\n  provider: activity.tkeyProvider,\n  transitions: null,\n  lastFetchedCloudMetadata: null,\n  enableLogging: false,\n  manualSync: false);\n'})})]})}function h(e={}){const{wrapper:i}={...(0,r.a)(),...e.components};return i?(0,n.jsx)(i,{...e,children:(0,n.jsx)(c,{...e})}):c(e)}},11151:(e,i,t)=>{t.d(i,{Z:()=>o,a:()=>d});var n=t(67294);const r={},s=n.createContext(r);function d(e){const i=n.useContext(s);return n.useMemo((function(){return"function"==typeof e?e(i):{...i,...e}}),[i,e])}function o(e){let i;return i=e.disableParentContext?"function"==typeof e.components?e.components(r):e.components||r:d(e.components),n.createElement(s.Provider,{value:i},e.children)}}}]);