"use strict";(self.webpackChunkweb3auth_docs=self.webpackChunkweb3auth_docs||[]).push([[37110],{41013:(e,t,r)=>{r.r(t),r.d(t,{assets:()=>d,contentTitle:()=>a,default:()=>p,frontMatter:()=>i,metadata:()=>u,toc:()=>c});var n=r(85893),s=r(11151),o=r(85162),l=r(74866);const i={title:"Bundler Polyfill Issues - React Native Metro",image:"/docs/images/docs-meta-cards/troubleshoot-card.png",displayed_sidebar:"docs",description:"Bundler Polyfill Issues - React Native Metro | Documentation - Web3Auth"},a=void 0,u={id:"troubleshooting/metro-issues",title:"Bundler Polyfill Issues - React Native Metro",description:"Bundler Polyfill Issues - React Native Metro | Documentation - Web3Auth",source:"@site/docs/troubleshooting/metro-issues.mdx",sourceDirName:"troubleshooting",slug:"/troubleshooting/metro-issues",permalink:"/docs/troubleshooting/metro-issues",draft:!1,unlisted:!1,editUrl:"https://github.com/web3auth/web3auth-docs/edit/master/docs/troubleshooting/metro-issues.mdx",tags:[],version:"current",frontMatter:{title:"Bundler Polyfill Issues - React Native Metro",image:"/docs/images/docs-meta-cards/troubleshoot-card.png",displayed_sidebar:"docs",description:"Bundler Polyfill Issues - React Native Metro | Documentation - Web3Auth"},sidebar:"docs",previous:{title:"Bundler Polyfill Issues - Svelte with Vite",permalink:"/docs/troubleshooting/svelte-issues"},next:{title:"JWT Errors",permalink:"/docs/troubleshooting/jwt-errors"}},d={},c=[{value:"Install the missing modules",id:"install-the-missing-modules",level:2},{value:"Update your <code>metro.config.js</code>",id:"update-your-metroconfigjs",level:2},{value:"<code>metro.config.js</code>",id:"metroconfigjs",level:4},{value:"Fixing additional dependency issues",id:"fixing-additional-dependency-issues",level:2}];function h(e){const t={admonition:"admonition",code:"code",h2:"h2",h4:"h4",li:"li",p:"p",pre:"pre",ul:"ul",...(0,s.a)(),...e.components};return(0,n.jsxs)(n.Fragment,{children:[(0,n.jsxs)(t.p,{children:["While setting up a new web3 project from scratch, you might face multiple issues with the bundler. This issue is caused because the core packages like\n",(0,n.jsx)(t.code,{children:"eccrypto"})," have certain dependencies, which are not present within the build environment. For rectifying this, the go-to method has been to just add\nthe missing modules directly into the package, and edit the bundler configuration to take advantage of that."]}),"\n",(0,n.jsx)(t.p,{children:"Although this method works, it increases the bundle size significantly. Causing slow loading speeds and a bad user experience. It is important to note\nthat these modules, even while the build fails, are still present within the browser environment. Many libraries like Web3Auth are written in a way to\ntake advantage of this fact. Hence, even if the build doesn't contain the polyfill, the library should still work as expected. However, if you are\nusing a library that does not take advantage of this fact, you might face issues while using the library."}),"\n",(0,n.jsx)(t.p,{children:"Hence, you need to be mindful of the fact that you only require certain node polyfills to be added to your project, while testing each of its\nfunctionalities. At the same time, you need to tell the bundler to ignore the missing modules, and not include them in the build."}),"\n",(0,n.jsx)(t.p,{children:"In this guide, we have added instructions for adding the polyfills in React Native Metro."}),"\n",(0,n.jsx)(t.h2,{id:"install-the-missing-modules",children:"Install the missing modules"}),"\n",(0,n.jsxs)(t.p,{children:["Check for the missing libraries in your build and included packages, and accordingly polyfill them. For Web3Auth, you need to polyfill the ",(0,n.jsx)(t.code,{children:"buffer"}),",\n",(0,n.jsx)(t.code,{children:"process"}),", ",(0,n.jsx)(t.code,{children:"crypto"})," and ",(0,n.jsx)(t.code,{children:"stream"})," libraries. For the rest of the libraries, we are installing a dummy module called ",(0,n.jsx)(t.code,{children:"empty-module"})," which helps us get\nrid of the warnings while building the project."]}),"\n",(0,n.jsxs)(l.Z,{groupId:"npm2yarn",children:[(0,n.jsx)(o.Z,{value:"npm",children:(0,n.jsx)(t.pre,{children:(0,n.jsx)(t.code,{className:"language-bash",children:"npm install --save empty-module readable-stream crypto-browserify react-native-get-random-values buffer process\n"})})}),(0,n.jsx)(o.Z,{value:"yarn",label:"Yarn",children:(0,n.jsx)(t.pre,{children:(0,n.jsx)(t.code,{className:"language-bash",children:"yarn add empty-module readable-stream crypto-browserify react-native-get-random-values buffer process\n"})})}),(0,n.jsx)(o.Z,{value:"pnpm",label:"pnpm",children:(0,n.jsx)(t.pre,{children:(0,n.jsx)(t.code,{className:"language-bash",children:"pnpm add empty-module readable-stream crypto-browserify react-native-get-random-values buffer process\n"})})})]}),"\n",(0,n.jsx)(t.admonition,{type:"warning",children:(0,n.jsxs)(t.p,{children:["There might be a possibility that you might need to polyfill more libraries, in case you're using any other blockchain library alongside Web3Auth that\nrequires them. Generally, the libraries like ",(0,n.jsx)(t.code,{children:"browserify-zlib"}),", ",(0,n.jsx)(t.code,{children:"assert"}),", ",(0,n.jsx)(t.code,{children:"stream-http"}),", ",(0,n.jsx)(t.code,{children:"https-browserify"}),", ",(0,n.jsx)(t.code,{children:"os-browserify"}),", ",(0,n.jsx)(t.code,{children:"url"})," are the ones that\nmight be required."]})}),"\n",(0,n.jsxs)(t.h2,{id:"update-your-metroconfigjs",children:["Update your ",(0,n.jsx)(t.code,{children:"metro.config.js"})]}),"\n",(0,n.jsx)(t.p,{children:"To make use of the polyfilled modules while building the application, you need to reconfigure your metro bundler config."}),"\n",(0,n.jsxs)(t.admonition,{title:"Expo Managed Workflow",type:"info",children:[(0,n.jsxs)(t.p,{children:["You will have to create ",(0,n.jsx)(t.code,{children:"metro.config.js"}),' for Expo Managed Workflow, as it is not present by default. Also, note that polyfilling is not supported\nwith "Expo Go" app. It is compatible only with Custom Dev Client and EAS builds.']}),(0,n.jsxs)(t.p,{children:["Please run ",(0,n.jsx)(t.code,{children:"npx expo prebuild"})," to generate native code based on the version of expo a project has installed, before moving forward."]})]}),"\n",(0,n.jsxs)(t.p,{children:["You can copy the following code in your ",(0,n.jsx)(t.code,{children:"metro.config.js"})," file. This will tell the bundler to ignore the missing modules and include the ones that are\nneeded."]}),"\n",(0,n.jsx)(t.h4,{id:"metroconfigjs",children:(0,n.jsx)(t.code,{children:"metro.config.js"})}),"\n",(0,n.jsxs)(l.Z,{defaultValue:"bare",values:[{label:"Bare React Native",value:"bare"},{label:"Expo",value:"expo"}],children:[(0,n.jsx)(o.Z,{value:"bare",children:(0,n.jsx)(t.pre,{children:(0,n.jsx)(t.code,{className:"language-tsx",metastring:'title="metro.config.js"',children:'const { getDefaultConfig } = require("metro-config");\n\nmodule.exports = (async () => {\n  const {\n    resolver: { sourceExts, assetExts },\n  } = await getDefaultConfig(__dirname);\n\n  const defaultSourceExts = [...sourceExts, "svg", "mjs", "cjs"];\n\n  return {\n    resolver: {\n      extraNodeModules: {\n        assert: require.resolve("empty-module"), // assert can be polyfilled here if needed\n        http: require.resolve("empty-module"), // stream-http can be polyfilled here if needed\n        https: require.resolve("empty-module"), // https-browserify can be polyfilled here if needed\n        os: require.resolve("empty-module"), // os-browserify can be polyfilled here if needed\n        url: require.resolve("empty-module"), // url can be polyfilled here if needed\n        zlib: require.resolve("empty-module"), // browserify-zlib can be polyfilled here if needed\n        path: require.resolve("empty-module"),\n        crypto: require.resolve("crypto-browserify"),\n        stream: require.resolve("readable-stream"),\n      },\n\n      assetExts: assetExts.filter((ext) => ext !== "svg"),\n\n      sourceExts: process.env.TEST_REACT_NATIVE ? ["e2e.js"].concat(defaultSourceExts) : defaultSourceExts,\n    },\n    transformer: {\n      getTransformOptions: async () => ({\n        transform: {\n          experimentalImportSupport: false,\n          inlineRequires: true,\n        },\n      }),\n    },\n  };\n})();\n'})})}),(0,n.jsx)(o.Z,{value:"expo",children:(0,n.jsx)(t.pre,{children:(0,n.jsx)(t.code,{className:"language-tsx",metastring:'title="metro.config.js"',children:'const { getDefaultConfig } = require("expo/metro-config");\n\nmodule.exports = (async () => {\n  const {\n    resolver: { sourceExts, assetExts },\n  } = await getDefaultConfig(__dirname);\n\n  const defaultSourceExts = [...sourceExts, "svg", "mjs", "cjs"];\n\n  return {\n    resolver: {\n      extraNodeModules: {\n        assert: require.resolve("empty-module"), // assert can be polyfilled here if needed\n        http: require.resolve("empty-module"), // stream-http can be polyfilled here if needed\n        https: require.resolve("empty-module"), // https-browserify can be polyfilled here if needed\n        os: require.resolve("empty-module"), // os-browserify can be polyfilled here if needed\n        url: require.resolve("empty-module"), // url can be polyfilled here if needed\n        zlib: require.resolve("empty-module"), // browserify-zlib can be polyfilled here if needed\n        path: require.resolve("empty-module"),\n        crypto: require.resolve("crypto-browserify"),\n        stream: require.resolve("readable-stream"),\n      },\n\n      assetExts: assetExts.filter((ext) => ext !== "svg"),\n\n      sourceExts: process.env.TEST_REACT_NATIVE ? ["e2e.js"].concat(defaultSourceExts) : defaultSourceExts,\n    },\n    transformer: {\n      getTransformOptions: async () => ({\n        transform: {\n          experimentalImportSupport: false,\n          inlineRequires: true,\n        },\n      }),\n    },\n  };\n})();\n'})})})]}),"\n",(0,n.jsx)(t.h2,{id:"fixing-additional-dependency-issues",children:"Fixing additional dependency issues"}),"\n",(0,n.jsxs)(t.ul,{children:["\n",(0,n.jsxs)(t.li,{children:["\n",(0,n.jsxs)(t.p,{children:["Create a ",(0,n.jsx)(t.code,{children:"globals.js"})," to your project root directory and add the following code to it."]}),"\n",(0,n.jsx)(t.pre,{children:(0,n.jsx)(t.code,{className:"language-tsx",metastring:'title="globals.js"',children:'global.Buffer = require("buffer").Buffer;\n\n// Needed so that \'stream-http\' chooses the right default protocol.\nglobal.location = {\n  protocol: "file:",\n};\n\nglobal.process.version = "v16.0.0";\nif (!global.process.version) {\n  global.process = require("process");\n  console.log({ process: global.process });\n}\n\nprocess.browser = true;\n'})}),"\n"]}),"\n",(0,n.jsxs)(t.li,{children:["\n",(0,n.jsxs)(t.p,{children:["Then, import the dependencies to ",(0,n.jsx)(t.code,{children:"index.js"})," of your project."]}),"\n",(0,n.jsx)(t.pre,{children:(0,n.jsx)(t.code,{className:"language-tsx",metastring:'title="index.js"',children:'import { AppRegistry } from "react-native";\nimport "./globals";\nimport "react-native-get-random-values";\nimport App from "./App";\nimport { name as appName } from "./app.json";\nAppRegistry.registerComponent(appName, () => App);\n'})}),"\n"]}),"\n"]})]})}function p(e={}){const{wrapper:t}={...(0,s.a)(),...e.components};return t?(0,n.jsx)(t,{...e,children:(0,n.jsx)(h,{...e})}):h(e)}},85162:(e,t,r)=>{r.d(t,{Z:()=>l});r(67294);var n=r(36905);const s={tabItem:"tabItem_Ymn6"};var o=r(85893);function l(e){let{children:t,hidden:r,className:l}=e;return(0,o.jsx)("div",{role:"tabpanel",className:(0,n.Z)(s.tabItem,l),hidden:r,children:t})}},74866:(e,t,r)=>{r.d(t,{Z:()=>w});var n=r(67294),s=r(36905),o=r(12466),l=r(16550),i=r(20469),a=r(91980),u=r(67392),d=r(50012);function c(e){return n.Children.toArray(e).filter((e=>"\n"!==e)).map((e=>{if(!e||(0,n.isValidElement)(e)&&function(e){const{props:t}=e;return!!t&&"object"==typeof t&&"value"in t}(e))return e;throw new Error(`Docusaurus error: Bad <Tabs> child <${"string"==typeof e.type?e.type:e.type.name}>: all children of the <Tabs> component should be <TabItem>, and every <TabItem> should have a unique "value" prop.`)}))?.filter(Boolean)??[]}function h(e){const{values:t,children:r}=e;return(0,n.useMemo)((()=>{const e=t??function(e){return c(e).map((e=>{let{props:{value:t,label:r,attributes:n,default:s}}=e;return{value:t,label:r,attributes:n,default:s}}))}(r);return function(e){const t=(0,u.l)(e,((e,t)=>e.value===t.value));if(t.length>0)throw new Error(`Docusaurus error: Duplicate values "${t.map((e=>e.value)).join(", ")}" found in <Tabs>. Every value needs to be unique.`)}(e),e}),[t,r])}function p(e){let{value:t,tabValues:r}=e;return r.some((e=>e.value===t))}function m(e){let{queryString:t=!1,groupId:r}=e;const s=(0,l.k6)(),o=function(e){let{queryString:t=!1,groupId:r}=e;if("string"==typeof t)return t;if(!1===t)return null;if(!0===t&&!r)throw new Error('Docusaurus error: The <Tabs> component groupId prop is required if queryString=true, because this value is used as the search param name. You can also provide an explicit value such as queryString="my-search-param".');return r??null}({queryString:t,groupId:r});return[(0,a._X)(o),(0,n.useCallback)((e=>{if(!o)return;const t=new URLSearchParams(s.location.search);t.set(o,e),s.replace({...s.location,search:t.toString()})}),[o,s])]}function f(e){const{defaultValue:t,queryString:r=!1,groupId:s}=e,o=h(e),[l,a]=(0,n.useState)((()=>function(e){let{defaultValue:t,tabValues:r}=e;if(0===r.length)throw new Error("Docusaurus error: the <Tabs> component requires at least one <TabItem> children component");if(t){if(!p({value:t,tabValues:r}))throw new Error(`Docusaurus error: The <Tabs> has a defaultValue "${t}" but none of its children has the corresponding value. Available values are: ${r.map((e=>e.value)).join(", ")}. If you intend to show no default tab, use defaultValue={null} instead.`);return t}const n=r.find((e=>e.default))??r[0];if(!n)throw new Error("Unexpected error: 0 tabValues");return n.value}({defaultValue:t,tabValues:o}))),[u,c]=m({queryString:r,groupId:s}),[f,b]=function(e){let{groupId:t}=e;const r=function(e){return e?`docusaurus.tab.${e}`:null}(t),[s,o]=(0,d.Nk)(r);return[s,(0,n.useCallback)((e=>{r&&o.set(e)}),[r,o])]}({groupId:s}),g=(()=>{const e=u??f;return p({value:e,tabValues:o})?e:null})();(0,i.Z)((()=>{g&&a(g)}),[g]);return{selectedValue:l,selectValue:(0,n.useCallback)((e=>{if(!p({value:e,tabValues:o}))throw new Error(`Can't select invalid tab value=${e}`);a(e),c(e),b(e)}),[c,b,o]),tabValues:o}}var b=r(72389);const g={tabList:"tabList__CuJ",tabItem:"tabItem_LNqP"};var y=r(85893);function x(e){let{className:t,block:r,selectedValue:n,selectValue:l,tabValues:i}=e;const a=[],{blockElementScrollPositionUntilNextRender:u}=(0,o.o5)(),d=e=>{const t=e.currentTarget,r=a.indexOf(t),s=i[r].value;s!==n&&(u(t),l(s))},c=e=>{let t=null;switch(e.key){case"Enter":d(e);break;case"ArrowRight":{const r=a.indexOf(e.currentTarget)+1;t=a[r]??a[0];break}case"ArrowLeft":{const r=a.indexOf(e.currentTarget)-1;t=a[r]??a[a.length-1];break}}t?.focus()};return(0,y.jsx)("ul",{role:"tablist","aria-orientation":"horizontal",className:(0,s.Z)("tabs",{"tabs--block":r},t),children:i.map((e=>{let{value:t,label:r,attributes:o}=e;return(0,y.jsx)("li",{role:"tab",tabIndex:n===t?0:-1,"aria-selected":n===t,ref:e=>a.push(e),onKeyDown:c,onClick:d,...o,className:(0,s.Z)("tabs__item",g.tabItem,o?.className,{"tabs__item--active":n===t}),children:r??t},t)}))})}function v(e){let{lazy:t,children:r,selectedValue:s}=e;const o=(Array.isArray(r)?r:[r]).filter(Boolean);if(t){const e=o.find((e=>e.props.value===s));return e?(0,n.cloneElement)(e,{className:"margin-top--md"}):null}return(0,y.jsx)("div",{className:"margin-top--md",children:o.map(((e,t)=>(0,n.cloneElement)(e,{key:t,hidden:e.props.value!==s})))})}function j(e){const t=f(e);return(0,y.jsxs)("div",{className:(0,s.Z)("tabs-container",g.tabList),children:[(0,y.jsx)(x,{...e,...t}),(0,y.jsx)(v,{...e,...t})]})}function w(e){const t=(0,b.Z)();return(0,y.jsx)(j,{...e,children:c(e.children)},String(t))}},11151:(e,t,r)=>{r.d(t,{Z:()=>i,a:()=>l});var n=r(67294);const s={},o=n.createContext(s);function l(e){const t=n.useContext(o);return n.useMemo((function(){return"function"==typeof e?e(t):{...t,...e}}),[t,e])}function i(e){let t;return t=e.disableParentContext?"function"==typeof e.components?e.components(s):e.components||s:l(e.components),n.createElement(o.Provider,{value:t},e.children)}}}]);