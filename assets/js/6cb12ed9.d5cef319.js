"use strict";(self.webpackChunkweb3auth_docs=self.webpackChunkweb3auth_docs||[]).push([[44141],{60842:(e,t,s)=>{s.r(t),s.d(t,{assets:()=>a,contentTitle:()=>l,default:()=>x,frontMatter:()=>d,metadata:()=>c,toc:()=>o});var n=s(85893),r=s(11151),i=s(30831);const d={title:"Using Web3Auth tKey MPC Swift SDK",image:"content-hub/guides/banners/ios-mpc.png",description:"Learn how to use the Web3Auth MPC Swift SDK in your iOS Application",type:"guide",tags:["web","corekit","mpc","swift","iOS","ethereum"],date:"Aug 15, 2023",author:"Web3Auth Team",order:4,communityPortalTopicId:null},l=void 0,c={type:"mdx",permalink:"/docs/content-hub/guides/tkey-swift-mpc",source:"@site/src/pages/content-hub/guides/tkey-swift-mpc.mdx",title:"Using Web3Auth tKey MPC Swift SDK",description:"Learn how to use the Web3Auth MPC Swift SDK in your iOS Application",frontMatter:{title:"Using Web3Auth tKey MPC Swift SDK",image:"content-hub/guides/banners/ios-mpc.png",description:"Learn how to use the Web3Auth MPC Swift SDK in your iOS Application",type:"guide",tags:["web","corekit","mpc","swift","iOS","ethereum"],date:"Aug 15, 2023",author:"Web3Auth Team",order:4,communityPortalTopicId:null},unlisted:!1},a={},o=[{value:"Quick Start",id:"quick-start",level:2},{value:"Prerequisites",id:"prerequisites",level:2},{value:"Installation",id:"installation",level:2},{value:"Swift Package Manager",id:"swift-package-manager",level:4},{value:"Add the tKey MPC Swift SDK",id:"add-the-tkey-mpc-swift-sdk",level:3},{value:"Add the CustomAuth Swift SDK",id:"add-the-customauth-swift-sdk",level:3},{value:"Add the TSS Client Swift SDK",id:"add-the-tss-client-swift-sdk",level:3},{value:"Initialization",id:"initialization",level:2},{value:"Configuring Service Provider",id:"configuring-service-provider",level:3},{value:"Initialization",id:"initialization-1",level:4},{value:"<code>SubVerifierDetails</code>",id:"subverifierdetails",level:5},{value:"<code>CustomAuth</code>",id:"customauth",level:5},{value:"Getting User Data from Custom Auth",id:"getting-user-data-from-custom-auth",level:3},{value:"Instantiating tKey",id:"instantiating-tkey",level:2},{value:"Parameters",id:"parameters",level:3},{value:"Example",id:"example",level:3},{value:"<code>ThresholdKey</code>",id:"thresholdkey",level:2},{value:"Triggering Login and Initializing Service Provider",id:"triggering-login-and-initializing-service-provider",level:3},{value:"Instantiate tKey",id:"instantiate-tkey",level:3},{value:"Parameters",id:"parameters-1",level:4},{value:"Initialize tKey",id:"initialize-tkey",level:3},{value:"<code>threshold_key.initialize(params?)</code>",id:"threshold_keyinitializeparams",level:4},{value:"Parameters",id:"parameters-2",level:4},{value:"<code>get_all_tss_tags()</code>",id:"get_all_tss_tags",level:3},{value:"<code>TSS Module</code>",id:"tss-module",level:2},{value:"<code>get_tss_tag()</code>",id:"get_tss_tag",level:3},{value:"Function Definition",id:"function-definition",level:4},{value:"Parameters",id:"parameters-3",level:4},{value:"<code>get_tss_share()</code>",id:"get_tss_share",level:3},{value:"Function Definition",id:"function-definition-1",level:4},{value:"Parameters",id:"parameters-4",level:4},{value:"<code>get_tss_nonce()</code>",id:"get_tss_nonce",level:3},{value:"Function Definition",id:"function-definition-2",level:4},{value:"Parameters",id:"parameters-5",level:4},{value:"<code>getTssPubAddress()</code>",id:"gettsspubaddress",level:3},{value:"Function Definition",id:"function-definition-3",level:4},{value:"Parameters",id:"parameters-6",level:4},{value:"<code>get_tss_pub_key()</code>",id:"get_tss_pub_key",level:3},{value:"Function Definition",id:"function-definition-4",level:4},{value:"Parameters",id:"parameters-7",level:4},{value:"<code>create_tagged_tss_share()</code>",id:"create_tagged_tss_share",level:3},{value:"Function Definition",id:"function-definition-5",level:4},{value:"Parameters",id:"parameters-8",level:4},{value:"<code>get_all_factor_pub()</code>",id:"get_all_factor_pub",level:3},{value:"Function Definition",id:"function-definition-6",level:4},{value:"Parameters",id:"parameters-9",level:4},{value:"<code>add_factor_pub()</code>",id:"add_factor_pub",level:3},{value:"Function Definition",id:"function-definition-7",level:4},{value:"Parameters",id:"parameters-10",level:4},{value:"<code>copy_factor_pub()</code>",id:"copy_factor_pub",level:3},{value:"Function Definition",id:"function-definition-8",level:4},{value:"Parameters",id:"parameters-11",level:4},{value:"<code>delete_factor_pub()</code>",id:"delete_factor_pub",level:3},{value:"Function Definition",id:"function-definition-9",level:4},{value:"Parameters",id:"parameters-12",level:4},{value:"Example",id:"example-1",level:3}];function h(e){const t={a:"a",admonition:"admonition",code:"code",h2:"h2",h3:"h3",h4:"h4",h5:"h5",li:"li",ol:"ol",p:"p",pre:"pre",strong:"strong",table:"table",tbody:"tbody",td:"td",th:"th",thead:"thead",tr:"tr",ul:"ul",...(0,r.a)(),...e.components};return(0,n.jsxs)(n.Fragment,{children:[(0,n.jsx)(i.Z,{title:"Using Web3Auth MPC Swift SDK",description:"Learn how to use the Web3Auth MPC Swift SDK in your iOS Application.",image:"https://web3auth.io/docs/content-hub/guides/banners/ios-mpc.png",slug:"/ios-mpc"}),"\n",(0,n.jsx)(t.p,{children:"This guide will help you make an iOS application using Web3Auth MPC Swift SDK, covering the basic functionality on how to use it."}),"\n",(0,n.jsxs)(t.p,{children:["The Web3Auth's MPC ",(0,n.jsx)(t.a,{href:"https://github.com/tkey/tkey-mpc-swift",children:"tKey MPC Swift SDK"})," is a client-side library you can use with your iOS app to authenticate\nusers using Web3Auth. This authentication can be achieved using any social logins Web3Auth provides or a custom authentication flow. For using\nWeb3Auth's tKey natively in iOS, Web3Auth provides a tKey iOS SDK written in Swift."]}),"\n",(0,n.jsx)(t.admonition,{type:"note",children:(0,n.jsx)(t.p,{children:"This is an advanced guide, meant for enterprise developers and contains multiple moving parts that might be difficult to understand. Please contact\nour team if you're looking to integrate this SDK, and we'll be happy to help you out."})}),"\n",(0,n.jsx)(t.h2,{id:"quick-start",children:"Quick Start"}),"\n",(0,n.jsx)(t.pre,{children:(0,n.jsx)(t.code,{className:"language-bash",children:"git clone https://github.com/tkey/mpc-ios-example\ncd mpc-ios-example\n# run project in Xcode\n"})}),"\n",(0,n.jsx)(t.h2,{id:"prerequisites",children:"Prerequisites"}),"\n",(0,n.jsxs)(t.ul,{children:["\n",(0,n.jsx)(t.li,{children:"iOS 13+"}),"\n",(0,n.jsx)(t.li,{children:"Xcode 11.4+ / 12.x"}),"\n",(0,n.jsx)(t.li,{children:"Swift 4.x / 5.x"}),"\n"]}),"\n",(0,n.jsx)(t.h2,{id:"installation",children:"Installation"}),"\n",(0,n.jsx)(t.h4,{id:"swift-package-manager",children:"Swift Package Manager"}),"\n",(0,n.jsxs)(t.h3,{id:"add-the-tkey-mpc-swift-sdk",children:["Add the ",(0,n.jsx)(t.a,{href:"https://github.com/tkey/tkey-mpc-swift",children:"tKey MPC Swift SDK"})]}),"\n",(0,n.jsxs)(t.ol,{children:["\n",(0,n.jsxs)(t.li,{children:["\n",(0,n.jsxs)(t.p,{children:["In Xcode, with your app project open, navigate to ",(0,n.jsx)(t.strong,{children:"File > Add Packages"}),"."]}),"\n"]}),"\n",(0,n.jsxs)(t.li,{children:["\n",(0,n.jsx)(t.p,{children:"When prompted, add the tKey iOS SDK repository:"}),"\n",(0,n.jsx)(t.pre,{children:(0,n.jsx)(t.code,{className:"language-sh",children:"https://github.com/tkey/tkey-mpc-swift\n"})}),"\n",(0,n.jsxs)(t.p,{children:["From the ",(0,n.jsx)(t.code,{children:"Dependency Rule"})," dropdown, select ",(0,n.jsx)(t.code,{children:"Branch"})," and type ",(0,n.jsx)(t.code,{children:"alpha"})," as the branch."]}),"\n"]}),"\n",(0,n.jsxs)(t.li,{children:["\n",(0,n.jsx)(t.p,{children:"When finished, Xcode will automatically begin resolving and downloading your dependencies in the background."}),"\n"]}),"\n"]}),"\n",(0,n.jsxs)(t.h3,{id:"add-the-customauth-swift-sdk",children:["Add the ",(0,n.jsx)(t.a,{href:"https://github.com/torusresearch/customauth-swift-sdk/",children:"CustomAuth Swift SDK"})]}),"\n",(0,n.jsxs)(t.ol,{children:["\n",(0,n.jsxs)(t.li,{children:["\n",(0,n.jsxs)(t.p,{children:["In Xcode, with your app project open, navigate to ",(0,n.jsx)(t.strong,{children:"File > Add Packages"}),"."]}),"\n"]}),"\n",(0,n.jsxs)(t.li,{children:["\n",(0,n.jsx)(t.p,{children:"When prompted, add the CustomAuth Swift SDK repository:"}),"\n",(0,n.jsx)(t.pre,{children:(0,n.jsx)(t.code,{className:"language-sh",children:"https://github.com/torusresearch/customauth-swift-sdk\n"})}),"\n",(0,n.jsxs)(t.p,{children:["From the ",(0,n.jsx)(t.code,{children:"Dependency Rule"})," dropdown, select ",(0,n.jsx)(t.code,{children:"Branch"})," and type ",(0,n.jsx)(t.code,{children:"alpha"})," as the branch."]}),"\n"]}),"\n",(0,n.jsxs)(t.li,{children:["\n",(0,n.jsx)(t.p,{children:"When finished, Xcode will automatically begin resolving and downloading your dependencies in the background."}),"\n"]}),"\n"]}),"\n",(0,n.jsxs)(t.h3,{id:"add-the-tss-client-swift-sdk",children:["Add the ",(0,n.jsx)(t.a,{href:"https://github.com/torusresearch/tss-client-swift",children:"TSS Client Swift SDK"})]}),"\n",(0,n.jsxs)(t.ol,{children:["\n",(0,n.jsxs)(t.li,{children:["\n",(0,n.jsxs)(t.p,{children:["In Xcode, with your app project open, navigate to ",(0,n.jsx)(t.strong,{children:"File > Add Packages"}),"."]}),"\n"]}),"\n",(0,n.jsxs)(t.li,{children:["\n",(0,n.jsx)(t.p,{children:"When prompted, add the CustomAuth Swift SDK repository:"}),"\n",(0,n.jsx)(t.pre,{children:(0,n.jsx)(t.code,{className:"language-sh",children:"https://github.com/torusresearch/tss-client-swift\n"})}),"\n",(0,n.jsxs)(t.p,{children:["From the ",(0,n.jsx)(t.code,{children:"Dependency Rule"})," dropdown, select ",(0,n.jsx)(t.code,{children:"Exact"})," and enter ",(0,n.jsx)(t.code,{children:"1.0.6"})," as the version."]}),"\n"]}),"\n",(0,n.jsxs)(t.li,{children:["\n",(0,n.jsx)(t.p,{children:"When finished, Xcode will automatically begin resolving and downloading your dependencies in the background."}),"\n"]}),"\n"]}),"\n",(0,n.jsx)(t.h2,{id:"initialization",children:"Initialization"}),"\n",(0,n.jsx)(t.p,{children:"Once you have installed the Web3Auth Core Kit tKey SDK, the next step is to initialize it. This involves a few steps, such as initiating the tKey SDK\nwith the service provider and modules."}),"\n",(0,n.jsxs)(t.ul,{children:["\n",(0,n.jsx)(t.li,{children:(0,n.jsx)(t.a,{href:"#configuring-service-provider",children:"Configuration of Service Provider"})}),"\n",(0,n.jsx)(t.li,{children:(0,n.jsx)(t.a,{href:"#initializing-service-provider",children:"Initializing Service Provider"})}),"\n",(0,n.jsx)(t.li,{children:(0,n.jsx)(t.a,{href:"#instantiating-tkey",children:"Instantiation of tKey"})}),"\n"]}),"\n",(0,n.jsx)(t.h3,{id:"configuring-service-provider",children:"Configuring Service Provider"}),"\n",(0,n.jsxs)(t.p,{children:["Service Provider in ",(0,n.jsx)(t.code,{children:"tKey"})," generates a ",(0,n.jsx)(t.a,{href:"/sdk/core-kit/tkey",children:(0,n.jsx)(t.strong,{children:"Share A"})}),", i.e., the private key share managed by a wallet service provider via their\nauthentication flows. This share in our ",(0,n.jsx)(t.a,{href:"/infrastructure/",children:"wallet infrastructure"})," refers to the social login aspect, where we associate a private key\nshare with the user's social login, enabling the seamless login experience."]}),"\n",(0,n.jsxs)(t.p,{children:["To configure your service provider, you must use ",(0,n.jsx)(t.a,{href:"https://github.com/torusresearch/customauth-swift-sdk",children:"CustomAuth Swift SDK"}),". Please note that this\nSDK is not automatically installed with tKey iOS SDK, so you must install it first."]}),"\n",(0,n.jsx)(t.h4,{id:"initialization-1",children:"Initialization"}),"\n",(0,n.jsx)(t.p,{children:"Initalize the SDK depending on the login you require."}),"\n",(0,n.jsx)(t.pre,{children:(0,n.jsx)(t.code,{className:"language-swift",children:'import CustomAuth\n\nlet sub = SubVerifierDetails(\n  loginType: .web, // default .web\n  loginProvider: "TYPE_OF_LOGIN", // .google, .facebook, .discord and other supported login providers\n  clientId: "CLIENT_ID",\n  verifierName: "VERIFIER_NAME",\n  redirectURL: "tdsdk://tdsdk/oauthCallback",\n  browserRedirectURL: "https://scripts.toruswallet.io/redirect.html")\n\nlet tdsdk = CustomAuth(\n  aggregateVerifierType: "TYPE_OF_VERIFIER", // singleLogin, singleIdVerifier supported\n  aggregateVerifierName: "VERIFIER_NAME", // Web3Auth Custom verifier name\n  subVerifierDetails: [sub],\n  network: .SAPPHIRE_DEVNET,\n  enableOneKey: true)\n'})}),"\n",(0,n.jsx)(t.h5,{id:"subverifierdetails",children:(0,n.jsx)(t.code,{children:"SubVerifierDetails"})}),"\n",(0,n.jsxs)(t.table,{children:[(0,n.jsx)(t.thead,{children:(0,n.jsxs)(t.tr,{children:[(0,n.jsx)(t.th,{children:"Parameter"}),(0,n.jsx)(t.th,{children:"Type"}),(0,n.jsx)(t.th,{children:"Mandatory"}),(0,n.jsx)(t.th,{children:"Description"})]})}),(0,n.jsxs)(t.tbody,{children:[(0,n.jsxs)(t.tr,{children:[(0,n.jsx)(t.td,{children:(0,n.jsx)(t.code,{children:"loginType"})}),(0,n.jsx)(t.td,{children:"SubVerifierType"}),(0,n.jsx)(t.td,{children:"No"}),(0,n.jsxs)(t.td,{children:["loginType to be used. [ ",(0,n.jsx)(t.code,{children:"web"}),": default, ",(0,n.jsx)(t.code,{children:"installed"}),"]"]})]}),(0,n.jsxs)(t.tr,{children:[(0,n.jsx)(t.td,{children:(0,n.jsx)(t.code,{children:"loginProvider"})}),(0,n.jsx)(t.td,{children:"LoginProviders"}),(0,n.jsx)(t.td,{children:"Yes"}),(0,n.jsxs)(t.td,{children:["loginProvider to be used. [ ",(0,n.jsx)(t.code,{children:"google"}),", ",(0,n.jsx)(t.code,{children:"facebook"}),", ",(0,n.jsx)(t.code,{children:"twitch"}),", ",(0,n.jsx)(t.code,{children:"reddit"}),", ",(0,n.jsx)(t.code,{children:"discord"}),", ",(0,n.jsx)(t.code,{children:"apple"}),", ",(0,n.jsx)(t.code,{children:"github"}),", ",(0,n.jsx)(t.code,{children:"linkedin"}),", ",(0,n.jsx)(t.code,{children:"kakao"}),", ",(0,n.jsx)(t.code,{children:"twitter"}),", ",(0,n.jsx)(t.code,{children:"weibo"}),", ",(0,n.jsx)(t.code,{children:"line"}),", ",(0,n.jsx)(t.code,{children:"wechat"}),", ",(0,n.jsx)(t.code,{children:"email_password"}),", and ",(0,n.jsx)(t.code,{children:"jwt"})," ]"]})]}),(0,n.jsxs)(t.tr,{children:[(0,n.jsx)(t.td,{children:(0,n.jsx)(t.code,{children:"clientId"})}),(0,n.jsx)(t.td,{children:"String"}),(0,n.jsx)(t.td,{children:"Yes"}),(0,n.jsx)(t.td,{children:"login provider's client Id."})]}),(0,n.jsxs)(t.tr,{children:[(0,n.jsx)(t.td,{children:(0,n.jsx)(t.code,{children:"verifier"})}),(0,n.jsx)(t.td,{children:"String"}),(0,n.jsx)(t.td,{children:"Yes"}),(0,n.jsx)(t.td,{children:"Web3Auth verifier name"})]}),(0,n.jsxs)(t.tr,{children:[(0,n.jsx)(t.td,{children:(0,n.jsx)(t.code,{children:"redirectURL"})}),(0,n.jsx)(t.td,{children:"String"}),(0,n.jsx)(t.td,{children:"Yes"}),(0,n.jsxs)(t.td,{children:["It refers to a url for the login flow to redirect into your app, it should have a scheme that is registered by your app, for example ",(0,n.jsx)(t.code,{children:"com.mycompany.myapp://redirect"})]})]}),(0,n.jsxs)(t.tr,{children:[(0,n.jsx)(t.td,{children:(0,n.jsx)(t.code,{children:"browserRedirectURL"})}),(0,n.jsx)(t.td,{children:"String"}),(0,n.jsx)(t.td,{children:"No"}),(0,n.jsxs)(t.td,{children:["It refers to a page that the browser should use in the login flow, it should have a http or https scheme. e.g. ",(0,n.jsx)(t.code,{children:"https://scripts.toruswallet.io/redirect.html"})]})]}),(0,n.jsxs)(t.tr,{children:[(0,n.jsx)(t.td,{children:(0,n.jsx)(t.code,{children:"jwtParams"})}),(0,n.jsx)(t.td,{children:"String"}),(0,n.jsx)(t.td,{children:"No"}),(0,n.jsx)(t.td,{children:"Additional JWT parameters to be passed."})]}),(0,n.jsxs)(t.tr,{children:[(0,n.jsx)(t.td,{children:(0,n.jsx)(t.code,{children:"urlSession"})}),(0,n.jsx)(t.td,{children:"URLSession"}),(0,n.jsx)(t.td,{children:"No"}),(0,n.jsx)(t.td,{children:"Custom URLSession to be used."})]})]})]}),"\n",(0,n.jsx)(t.h5,{id:"customauth",children:(0,n.jsx)(t.code,{children:"CustomAuth"})}),"\n",(0,n.jsxs)(t.table,{children:[(0,n.jsx)(t.thead,{children:(0,n.jsxs)(t.tr,{children:[(0,n.jsx)(t.th,{children:"Parameter"}),(0,n.jsx)(t.th,{children:"Type"}),(0,n.jsx)(t.th,{children:"Mandatory"}),(0,n.jsx)(t.th,{children:"Description"})]})}),(0,n.jsxs)(t.tbody,{children:[(0,n.jsxs)(t.tr,{children:[(0,n.jsx)(t.td,{children:(0,n.jsx)(t.code,{children:"aggregateVerifierType"})}),(0,n.jsx)(t.td,{children:"String"}),(0,n.jsx)(t.td,{children:"Yes"}),(0,n.jsx)(t.td,{children:"Type of the aggregate verifier."})]}),(0,n.jsxs)(t.tr,{children:[(0,n.jsx)(t.td,{children:(0,n.jsx)(t.code,{children:"aggregateVerifier"})}),(0,n.jsx)(t.td,{children:"String"}),(0,n.jsx)(t.td,{children:"Yes"}),(0,n.jsx)(t.td,{children:"Name of the aggregate verifier."})]}),(0,n.jsxs)(t.tr,{children:[(0,n.jsx)(t.td,{children:(0,n.jsx)(t.code,{children:"subVerifierDetails"})}),(0,n.jsxs)(t.td,{children:["[",(0,n.jsx)(t.code,{children:"SubVerifierDetails"}),"]"]}),(0,n.jsx)(t.td,{children:"Yes"}),(0,n.jsx)(t.td,{children:"Array of SubVerifierDetails."})]}),(0,n.jsxs)(t.tr,{children:[(0,n.jsx)(t.td,{children:(0,n.jsx)(t.code,{children:"network"})}),(0,n.jsx)(t.td,{children:"TorusNetwork"}),(0,n.jsx)(t.td,{children:"Yes"}),(0,n.jsxs)(t.td,{children:["Network to be used. [ ",(0,n.jsx)(t.code,{children:"SAPPHIRE_DEVNET"}),", ",(0,n.jsx)(t.code,{children:"SAPPHIRE_MAINNET"}),", ",(0,n.jsx)(t.code,{children:"MAINNET"}),", ",(0,n.jsx)(t.code,{children:"TESTNET"}),", ",(0,n.jsx)(t.code,{children:"CYAN"}),", ",(0,n.jsx)(t.code,{children:"AQUA"}),"]"]})]}),(0,n.jsxs)(t.tr,{children:[(0,n.jsx)(t.td,{children:(0,n.jsx)(t.code,{children:"enableOneKey"})}),(0,n.jsx)(t.td,{children:"Bool"}),(0,n.jsx)(t.td,{children:"No"}),(0,n.jsx)(t.td,{children:"Use one key feature that allows users to have the same account in tKey. Note: This flag shouldn't be changed once set for an account; changing it will lead to a different account."})]}),(0,n.jsxs)(t.tr,{children:[(0,n.jsx)(t.td,{children:(0,n.jsx)(t.code,{children:"networkUrl"})}),(0,n.jsx)(t.td,{children:"String"}),(0,n.jsx)(t.td,{children:"No"}),(0,n.jsx)(t.td,{children:"Custom network url to be used."})]})]})]}),"\n",(0,n.jsx)(t.h3,{id:"getting-user-data-from-custom-auth",children:"Getting User Data from Custom Auth"}),"\n",(0,n.jsxs)(t.ol,{children:["\n",(0,n.jsxs)(t.li,{children:[(0,n.jsx)(t.code,{children:"triggerLogin()"})," returns a promise that resolve with a Dictionary that contain ",(0,n.jsx)(t.code,{children:"finalKeyData"})," field to be used to initialize the tKey."]}),"\n"]}),"\n",(0,n.jsx)(t.pre,{children:(0,n.jsx)(t.code,{className:"language-swift",children:'tdsdk.triggerLogin().done{ data in\n    print("user data", data)\n    self.userData = data\n}.catch{ err in\n    print(err)\n}\n'})}),"\n",(0,n.jsx)(t.h2,{id:"instantiating-tkey",children:"Instantiating tKey"}),"\n",(0,n.jsx)(t.pre,{children:(0,n.jsx)(t.code,{className:"language-swift",children:"let rss_comm = try RssComm()\nlet thresholdKey = try? ThresholdKey(\n  storage_layer: storage_layer,\n  service_provider: service_provider,\n  enable_logging: true,\n  manual_sync: false,\n  rss_comm: rss_comm)\n"})}),"\n",(0,n.jsx)(t.h3,{id:"parameters",children:"Parameters"}),"\n",(0,n.jsxs)(t.table,{children:[(0,n.jsx)(t.thead,{children:(0,n.jsxs)(t.tr,{children:[(0,n.jsx)(t.th,{children:"Parameter"}),(0,n.jsx)(t.th,{children:"Type"}),(0,n.jsx)(t.th,{children:"Description"}),(0,n.jsx)(t.th,{children:"Mandatory"})]})}),(0,n.jsxs)(t.tbody,{children:[(0,n.jsxs)(t.tr,{children:[(0,n.jsx)(t.td,{children:(0,n.jsx)(t.code,{children:"metadata"})}),(0,n.jsx)(t.td,{children:(0,n.jsx)(t.code,{children:"Metadata"})}),(0,n.jsx)(t.td,{children:"Metadata object containing the metadata details of tKey."}),(0,n.jsx)(t.td,{children:"No"})]}),(0,n.jsxs)(t.tr,{children:[(0,n.jsx)(t.td,{children:(0,n.jsx)(t.code,{children:"shares"})}),(0,n.jsx)(t.td,{children:(0,n.jsx)(t.code,{children:"ShareStorePolyIdIndexMap"})}),(0,n.jsx)(t.td,{children:"Array of ShareStore with PolyId."}),(0,n.jsx)(t.td,{children:"No"})]}),(0,n.jsxs)(t.tr,{children:[(0,n.jsx)(t.td,{children:(0,n.jsx)(t.code,{children:"storage_layer"})}),(0,n.jsx)(t.td,{children:(0,n.jsx)(t.code,{children:"StorageLayer"})}),(0,n.jsx)(t.td,{children:"Takes in the Storage Provider Instance"}),(0,n.jsx)(t.td,{children:"No"})]}),(0,n.jsxs)(t.tr,{children:[(0,n.jsx)(t.td,{children:(0,n.jsx)(t.code,{children:"service_provider"})}),(0,n.jsx)(t.td,{children:(0,n.jsx)(t.code,{children:"ServiceProvider"})}),(0,n.jsx)(t.td,{children:"Takes in the Service Provider Instance"}),(0,n.jsx)(t.td,{children:"No"})]}),(0,n.jsxs)(t.tr,{children:[(0,n.jsx)(t.td,{children:(0,n.jsx)(t.code,{children:"local_matadata_transitions"})}),(0,n.jsx)(t.td,{children:(0,n.jsx)(t.code,{children:"Metadata"})}),(0,n.jsx)(t.td,{children:"Existing local metadata to be used."}),(0,n.jsx)(t.td,{children:"No"})]}),(0,n.jsxs)(t.tr,{children:[(0,n.jsx)(t.td,{children:(0,n.jsx)(t.code,{children:"last_fetch_cloud_metadata"})}),(0,n.jsx)(t.td,{children:(0,n.jsx)(t.code,{children:"Metadata"})}),(0,n.jsx)(t.td,{children:"Existing cloud metadata to be used."}),(0,n.jsx)(t.td,{children:"No"})]}),(0,n.jsxs)(t.tr,{children:[(0,n.jsx)(t.td,{children:(0,n.jsx)(t.code,{children:"enable_logging"})}),(0,n.jsx)(t.td,{children:(0,n.jsx)(t.code,{children:"Bool"})}),(0,n.jsx)(t.td,{children:"This option is used to specify whether to enable logging or not."}),(0,n.jsx)(t.td,{children:"No"})]}),(0,n.jsxs)(t.tr,{children:[(0,n.jsx)(t.td,{children:(0,n.jsx)(t.code,{children:"manual_sync"})}),(0,n.jsx)(t.td,{children:(0,n.jsx)(t.code,{children:"Bool"})}),(0,n.jsx)(t.td,{children:"manual sync provides atomicity to your tkey share. If manual_sync is true, you should sync your local metadata transitions manually to your storage_layer, which means your storage layer doesn\u2019t know the local changes of your tkey unless you manually sync, gives atomicity. Otherwise, If manual_sync is false, then your local metadata changes will be synced automatically to your storage layer. If manual_sync = true and want to synchronize manually, you need to call sync_local_metadata_transitions() manually."}),(0,n.jsx)(t.td,{children:"No"})]}),(0,n.jsxs)(t.tr,{children:[(0,n.jsx)(t.td,{children:(0,n.jsx)(t.code,{children:"rss_comm"})}),(0,n.jsx)(t.td,{children:(0,n.jsx)(t.code,{children:"RssComm"})}),(0,n.jsx)(t.td,{children:"RssComm object to be used. RSS client, required for TSS."}),(0,n.jsx)(t.td,{children:"No"})]})]})]}),"\n",(0,n.jsx)(t.h3,{id:"example",children:"Example"}),"\n",(0,n.jsx)(t.pre,{children:(0,n.jsx)(t.code,{className:"language-swift",children:'let finalKeyData = userData["finalKeyData"] as? [String: Any]\n\nlet postboxkey = finalKeyData["privKey"] as? String\n\nlet verifier =  userData["verifier"] as? String\nlet verifierId = userData["verifierId"] as? String\n\nlet storage_layer = try? StorageLayer(\n  enable_logging: true,\n  host_url: "https://metadata.tor.us",\n  server_time_offset: 2)\n\nlet fnd = NodeDetailManager(network: .sapphire(.SAPPHIRE_DEVNET))\nlet nodeDetails = try await fnd.getNodeDetails(verifier: verifier, verifierID: verifierId)\n\nlet service_provider = try? ServiceProvider(\n  enable_logging: true,\n  postbox_key: postboxkey,\n  useTss: true,\n  verifier: verifier,\n  verifierId: verifierId,\n  nodeDetails: nodeDetails )\n\nlet rss_comm = try RssComm()\n\nlet thresholdKey = try? ThresholdKey(\n  storage_layer: storage_layer,\n  service_provider: service_provider,\n  enable_logging: true,\n  manual_sync: false,\n  rss_comm: rss_comm)\n'})}),"\n",(0,n.jsx)(t.p,{children:"The following parameters are required to initialize MPC tKey:"}),"\n",(0,n.jsx)(t.pre,{children:(0,n.jsx)(t.code,{className:"language-swift",children:'@State private var signatures: [[String: Any]]!\n@State private var tssEndpoint: [String]!\n\nlet fetchKey = finalKeyData["evmAddress"] as? String\n\nlet sessionData = userData["sessionData"] as? [String: Any]\n\nlet sessionTokenData = sessionData["sessionTokenData"] as? [SessionToken]\n\nsignatures = sessionTokenData.map { token in\n    return [  "data": Data(hex: token.token)!.base64EncodedString(),\n              "sig": token.signature ]\n}\n\nlet torusUtils = TorusUtils(\n  enableOneKey: true,\n  network: .sapphire(.SAPPHIRE_DEVNET) )\n\ntssEndpoint = nodeDetails!.torusNodeTSSEndpoints\n'})}),"\n",(0,n.jsx)(t.h2,{id:"thresholdkey",children:(0,n.jsx)(t.code,{children:"ThresholdKey"})}),"\n",(0,n.jsxs)(t.p,{children:["The login with the tKey SDK is a two-step process. First, you need to trigger the login process by calling the ",(0,n.jsx)(t.code,{children:"triggerLogin()"})," function of the\nCustomAuth SDK. Using the returned information, use the ",(0,n.jsx)(t.code,{children:"initialize()"})," function of the tKey to generate the Threshold Key corresponding to the user."]}),"\n",(0,n.jsxs)(t.p,{children:["However, before starting this process, you must set up Custom Authentication on your Web3Auth Dashboard. You must\n",(0,n.jsx)(t.a,{href:"/auth-provider-setup/verifiers",children:"Create a Verifier"})," from the ",(0,n.jsx)(t.strong,{children:"Custom Auth"})," section of the\n",(0,n.jsx)(t.a,{href:"https://dashboard.web3auth.io",children:"Web3Auth Developer Dashboard"})," with your desired configuration."]}),"\n",(0,n.jsx)(t.admonition,{type:"tip",children:(0,n.jsxs)(t.p,{children:["For further information on how to set up and use a verifier, please visit the\n",(0,n.jsx)(t.a,{href:"/pnp/features/custom-authentication",children:(0,n.jsx)(t.strong,{children:"Custom Authentication Documentation"})}),"."]})}),"\n",(0,n.jsx)(t.h3,{id:"triggering-login-and-initializing-service-provider",children:"Triggering Login and Initializing Service Provider"}),"\n",(0,n.jsx)(t.pre,{children:(0,n.jsx)(t.code,{className:"language-swift",children:'import CustomAuth\n\nlet sub = SubVerifierDetails(\n  loginType: .web, // default .web\n  loginProvider: "TYPE_OF_LOGIN", // .google, .facebook, .discord and other supported login providers\n  clientId: "CLIENT_ID",\n  verifierName: "VERIFIER_NAME",\n  redirectURL: "tdsdk://tdsdk/oauthCallback",\n  browserRedirectURL: "https://scripts.toruswallet.io/redirect.html")\n\nlet tdsdk = CustomAuth(\n  aggregateVerifierType: "TYPE_OF_VERIFIER", // singleLogin, singleIdVerifier supported\n  aggregateVerifierName: "VERIFIER_NAME", // Web3Auth Custom verifier name\n  subVerifierDetails: [sub],\n  network: .SAPPHIRE_DEVNET,\n  enableOneKey: true)\n\ntdsdk.triggerLogin().done{ data in\n    print("user data", data)\n\n    let finalKeyData = data["finalKeyData"] as? [String: Any]\n    let verifier =  data["verifier"] as? String\n    let verifierId = data["verifierId"] as? String\n    let postboxkey = finalKeyData["privKey"] as? String\n\n\n    let fnd = NodeDetailManager(network: .sapphire(.SAPPHIRE_DEVNET))\n    let nodeDetails = try await fnd.getNodeDetails(verifier: verifier, verifierID: verifierId)\n\n    let service_provider = try? ServiceProvider(\n      enable_logging: true,\n      postbox_key: postboxkey,\n      useTss: true,\n      verifier: verifier,\n      verifierId: verifierId,\n      nodeDetails: nodeDetails )\n\n    }.catch{ err in\n        print(err)\n    }\n'})}),"\n",(0,n.jsx)(t.h3,{id:"instantiate-tkey",children:"Instantiate tKey"}),"\n",(0,n.jsx)(t.pre,{children:(0,n.jsx)(t.code,{className:"language-swift",children:'let torusUtils = TorusUtils(\n  enableOneKey: true,\n  network: .sapphire(.SAPPHIRE_DEVNET) )\n\nlet storage_layer = try? StorageLayer(\n  enable_logging: true,\n  host_url: "https://metadata.tor.us",\n  server_time_offset: 2)\n\nlet rss_comm = try RssComm()\n\nlet thresholdKey = try? ThresholdKey(\n  storage_layer: storage_layer,\n  service_provider: service_provider,\n  enable_logging: true,\n  manual_sync: false,\n  rss_comm: rss_comm)\n\nthreshold_key = thresholdKey\n'})}),"\n",(0,n.jsx)(t.h4,{id:"parameters-1",children:"Parameters"}),"\n",(0,n.jsxs)(t.table,{children:[(0,n.jsx)(t.thead,{children:(0,n.jsxs)(t.tr,{children:[(0,n.jsx)(t.th,{children:"Parameter"}),(0,n.jsx)(t.th,{children:"Type"}),(0,n.jsx)(t.th,{children:"Description"}),(0,n.jsx)(t.th,{children:"Mandatory"})]})}),(0,n.jsxs)(t.tbody,{children:[(0,n.jsxs)(t.tr,{children:[(0,n.jsx)(t.td,{children:(0,n.jsx)(t.code,{children:"metadata"})}),(0,n.jsx)(t.td,{children:(0,n.jsx)(t.code,{children:"Metadata"})}),(0,n.jsx)(t.td,{children:"Metadata object containing the metadata details of tKey."}),(0,n.jsx)(t.td,{children:"No"})]}),(0,n.jsxs)(t.tr,{children:[(0,n.jsx)(t.td,{children:(0,n.jsx)(t.code,{children:"shares"})}),(0,n.jsx)(t.td,{children:(0,n.jsx)(t.code,{children:"ShareStorePolyIdIndexMap"})}),(0,n.jsx)(t.td,{children:"Array of ShareStore with PolyId."}),(0,n.jsx)(t.td,{children:"No"})]}),(0,n.jsxs)(t.tr,{children:[(0,n.jsx)(t.td,{children:(0,n.jsx)(t.code,{children:"storage_layer"})}),(0,n.jsx)(t.td,{children:(0,n.jsx)(t.code,{children:"StorageLayer"})}),(0,n.jsx)(t.td,{children:"Takes in the Storage Provider Instance"}),(0,n.jsx)(t.td,{children:"No"})]}),(0,n.jsxs)(t.tr,{children:[(0,n.jsx)(t.td,{children:(0,n.jsx)(t.code,{children:"service_provider"})}),(0,n.jsx)(t.td,{children:(0,n.jsx)(t.code,{children:"ServiceProvider"})}),(0,n.jsx)(t.td,{children:"Takes in the Service Provider Instance"}),(0,n.jsx)(t.td,{children:"No"})]}),(0,n.jsxs)(t.tr,{children:[(0,n.jsx)(t.td,{children:(0,n.jsx)(t.code,{children:"local_matadata_transitions"})}),(0,n.jsx)(t.td,{children:(0,n.jsx)(t.code,{children:"Metadata"})}),(0,n.jsx)(t.td,{children:"Existing local metadata to be used."}),(0,n.jsx)(t.td,{children:"No"})]}),(0,n.jsxs)(t.tr,{children:[(0,n.jsx)(t.td,{children:(0,n.jsx)(t.code,{children:"last_fetch_cloud_metadata"})}),(0,n.jsx)(t.td,{children:(0,n.jsx)(t.code,{children:"Metadata"})}),(0,n.jsx)(t.td,{children:"Existing cloud metadata to be used."}),(0,n.jsx)(t.td,{children:"No"})]}),(0,n.jsxs)(t.tr,{children:[(0,n.jsx)(t.td,{children:(0,n.jsx)(t.code,{children:"enable_logging"})}),(0,n.jsx)(t.td,{children:(0,n.jsx)(t.code,{children:"Bool"})}),(0,n.jsx)(t.td,{children:"This option is used to specify whether to enable logging or not."}),(0,n.jsx)(t.td,{children:"No"})]}),(0,n.jsxs)(t.tr,{children:[(0,n.jsx)(t.td,{children:(0,n.jsx)(t.code,{children:"manual_sync"})}),(0,n.jsx)(t.td,{children:(0,n.jsx)(t.code,{children:"Bool"})}),(0,n.jsx)(t.td,{children:"manual sync provides atomicity to your tkey share. If manual_sync is true, you should sync your local metadata transitions manually to your storage_layer, which means your storage layer doesn\u2019t know the local changes of your tkey unless you manually sync, gives atomicity. Otherwise, If manual_sync is false, then your local metadata changes will be synced automatically to your storage layer. If manual_sync = true and want to synchronize manually, you need to call sync_local_metadata_transitions() manually."}),(0,n.jsx)(t.td,{children:"No"})]}),(0,n.jsxs)(t.tr,{children:[(0,n.jsx)(t.td,{children:(0,n.jsx)(t.code,{children:"rss_comm"})}),(0,n.jsx)(t.td,{children:(0,n.jsx)(t.code,{children:"RssComm"})}),(0,n.jsx)(t.td,{children:"RssComm object to be used. RSS client, required for TSS."}),(0,n.jsx)(t.td,{children:"No"})]})]})]}),"\n",(0,n.jsx)(t.h3,{id:"initialize-tkey",children:"Initialize tKey"}),"\n",(0,n.jsx)(t.h4,{id:"threshold_keyinitializeparams",children:(0,n.jsx)(t.code,{children:"threshold_key.initialize(params?)"})}),"\n",(0,n.jsx)(t.p,{children:"Once you have triggered the login process, you're ready to initialize the tKey. This will generate a Threshold Key corresponding to your login\nprovider."}),"\n",(0,n.jsx)(t.h4,{id:"parameters-2",children:"Parameters"}),"\n",(0,n.jsxs)(t.table,{children:[(0,n.jsx)(t.thead,{children:(0,n.jsxs)(t.tr,{children:[(0,n.jsx)(t.th,{children:"Parameter"}),(0,n.jsx)(t.th,{children:"Type"}),(0,n.jsx)(t.th,{children:"Description"}),(0,n.jsx)(t.th,{children:"Mandatory"})]})}),(0,n.jsxs)(t.tbody,{children:[(0,n.jsxs)(t.tr,{children:[(0,n.jsx)(t.td,{children:(0,n.jsx)(t.code,{children:"import_share"})}),(0,n.jsx)(t.td,{children:"String"}),(0,n.jsx)(t.td,{children:"An optional string representing the import share."}),(0,n.jsx)(t.td,{children:"No"})]}),(0,n.jsxs)(t.tr,{children:[(0,n.jsx)(t.td,{children:(0,n.jsx)(t.code,{children:"input"})}),(0,n.jsx)(t.td,{children:"ShareStore"}),(0,n.jsx)(t.td,{children:"An optional ShareStore object representing the input."}),(0,n.jsx)(t.td,{children:"No"})]}),(0,n.jsxs)(t.tr,{children:[(0,n.jsx)(t.td,{children:(0,n.jsx)(t.code,{children:"never_initialize_new_key"})}),(0,n.jsx)(t.td,{children:"Bool"}),(0,n.jsx)(t.td,{children:"Do not initialize a new tKey if an existing one is found."}),(0,n.jsx)(t.td,{children:"No"})]}),(0,n.jsxs)(t.tr,{children:[(0,n.jsx)(t.td,{children:(0,n.jsx)(t.code,{children:"include_local_metadata_transitions"})}),(0,n.jsx)(t.td,{children:"Bool"}),(0,n.jsx)(t.td,{children:"Proritize existing metadata transitions over cloud fetched transitions."}),(0,n.jsx)(t.td,{children:"No"})]}),(0,n.jsxs)(t.tr,{children:[(0,n.jsx)(t.td,{children:(0,n.jsx)(t.code,{children:"use_tss"})}),(0,n.jsx)(t.td,{children:"Bool"}),(0,n.jsx)(t.td,{children:"Whether TSS is used or not."}),(0,n.jsx)(t.td,{children:"No"})]}),(0,n.jsxs)(t.tr,{children:[(0,n.jsx)(t.td,{children:(0,n.jsx)(t.code,{children:"device_tss_share"})}),(0,n.jsx)(t.td,{children:"String"}),(0,n.jsx)(t.td,{children:"An optional string representing the device share."}),(0,n.jsx)(t.td,{children:"No"})]}),(0,n.jsxs)(t.tr,{children:[(0,n.jsx)(t.td,{children:(0,n.jsx)(t.code,{children:"device_tss_index"})}),(0,n.jsx)(t.td,{children:(0,n.jsx)(t.code,{children:"Int32"})}),(0,n.jsx)(t.td,{children:"An optional integer representing the device share index."}),(0,n.jsx)(t.td,{children:"No"})]}),(0,n.jsxs)(t.tr,{children:[(0,n.jsx)(t.td,{children:(0,n.jsx)(t.code,{children:"tss_factor_pub"})}),(0,n.jsx)(t.td,{children:(0,n.jsx)(t.code,{children:"KeyPoint"})}),(0,n.jsx)(t.td,{children:"An optional KeyPoint object representing the tss factor public key."}),(0,n.jsx)(t.td,{children:"No"})]})]})]}),"\n",(0,n.jsx)(t.pre,{children:(0,n.jsx)(t.code,{className:"language-swift",metastring:'title="Usage"',children:'guard let key_details = try? await threshold_key.initialize(never_initialize_new_key: false, include_local_metadata_transitions: false) else {\n  alertContent = "Failed to get key details"\n  return\n}\ntotalShares = Int(key_details.total_shares)\nthreshold = Int(key_details.threshold)\n'})}),"\n",(0,n.jsx)(t.h3,{id:"get_all_tss_tags",children:(0,n.jsx)(t.code,{children:"get_all_tss_tags()"})}),"\n",(0,n.jsx)(t.p,{children:"This function returns all the tags of the tss shares."}),"\n",(0,n.jsx)(t.pre,{children:(0,n.jsx)(t.code,{className:"language-swift",metastring:'title="Usage"',children:"let tags = try? await threshold_key.get_all_tss_tags()\n"})}),"\n",(0,n.jsx)(t.h2,{id:"tss-module",children:(0,n.jsx)(t.code,{children:"TSS Module"})}),"\n",(0,n.jsx)(t.h3,{id:"get_tss_tag",children:(0,n.jsx)(t.code,{children:"get_tss_tag()"})}),"\n",(0,n.jsx)(t.p,{children:"This function returns the tss tag."}),"\n",(0,n.jsx)(t.h4,{id:"function-definition",children:"Function Definition"}),"\n",(0,n.jsx)(t.pre,{children:(0,n.jsx)(t.code,{className:"language-swift",children:'public static func get_tss_tag(threshold_key: ThresholdKey) throws -> String {\n  var errorCode: Int32 = -1\n  let result = withUnsafeMutablePointer(to: &errorCode, { error in\n      threshold_key_get_tss_tag(threshold_key.pointer, error) })\n  guard errorCode == 0 else {\n      throw RuntimeError("Error in get_tss_tag")\n  }\n  let string = String(cString: result!)\n  string_free(result)\n  return string\n}\n'})}),"\n",(0,n.jsx)(t.h4,{id:"parameters-3",children:"Parameters"}),"\n",(0,n.jsxs)(t.table,{children:[(0,n.jsx)(t.thead,{children:(0,n.jsxs)(t.tr,{children:[(0,n.jsx)(t.th,{children:"Parameter"}),(0,n.jsx)(t.th,{children:"Type"}),(0,n.jsx)(t.th,{children:"Description"}),(0,n.jsx)(t.th,{children:"Mandatory"})]})}),(0,n.jsx)(t.tbody,{children:(0,n.jsxs)(t.tr,{children:[(0,n.jsx)(t.td,{children:(0,n.jsx)(t.code,{children:"threshold_key"})}),(0,n.jsx)(t.td,{children:(0,n.jsx)(t.code,{children:"ThresholdKey"})}),(0,n.jsx)(t.td,{children:"ThresholdKey object to be used."}),(0,n.jsx)(t.td,{})]})})]}),"\n",(0,n.jsx)(t.pre,{children:(0,n.jsx)(t.code,{className:"language-swift",metastring:'title="Usage"',children:"let selected_tag = try TssModule.get_tss_tag(threshold_key: threshold_key)\n"})}),"\n",(0,n.jsx)(t.h3,{id:"get_tss_share",children:(0,n.jsx)(t.code,{children:"get_tss_share()"})}),"\n",(0,n.jsx)(t.p,{children:"This function returns the tss share."}),"\n",(0,n.jsx)(t.h4,{id:"function-definition-1",children:"Function Definition"}),"\n",(0,n.jsx)(t.pre,{children:(0,n.jsx)(t.code,{className:"language-swift",children:'public static func get_tss_share(threshold_key: ThresholdKey, tss_tag: String, factorKey: String, threshold: Int32 = 0) async throws -> (String, String) {\n  if factorKey.count > 66 { throw RuntimeError("Invalid factor Key") }\n  try await TssModule.set_tss_tag(threshold_key: threshold_key, tss_tag: tss_tag)\n\n  var errorCode: Int32 = -1\n\n  let curvePointer = UnsafeMutablePointer<Int8>(mutating: (threshold_key.curveN as NSString).utf8String)\n  let factorKeyPointer = UnsafeMutablePointer<Int8>(mutating: (factorKey as NSString).utf8String)\n\n  let result = withUnsafeMutablePointer(to: &errorCode, { error in\n      threshold_key_get_tss_share(threshold_key.pointer, factorKeyPointer, threshold, curvePointer, error)\n  })\n  guard errorCode == 0 else {\n      throw RuntimeError("Error in ThresholdKey get_tss_share")\n  }\n  let string = String(cString: result!)\n  string_free(result)\n  let splitString = string.split(separator: ",", maxSplits: 2)\n  return (String(splitString[0]), String(splitString[1]))\n}\n'})}),"\n",(0,n.jsx)(t.h4,{id:"parameters-4",children:"Parameters"}),"\n",(0,n.jsxs)(t.table,{children:[(0,n.jsx)(t.thead,{children:(0,n.jsxs)(t.tr,{children:[(0,n.jsx)(t.th,{children:"Parameter"}),(0,n.jsx)(t.th,{children:"Type"}),(0,n.jsx)(t.th,{children:"Description"}),(0,n.jsx)(t.th,{children:"Mandatory"})]})}),(0,n.jsxs)(t.tbody,{children:[(0,n.jsxs)(t.tr,{children:[(0,n.jsx)(t.td,{children:(0,n.jsx)(t.code,{children:"threshold_key"})}),(0,n.jsx)(t.td,{children:"ThresholdKey"}),(0,n.jsx)(t.td,{children:"ThresholdKey object to be used."}),(0,n.jsx)(t.td,{children:"Yes"})]}),(0,n.jsxs)(t.tr,{children:[(0,n.jsx)(t.td,{children:(0,n.jsx)(t.code,{children:"tss_tag"})}),(0,n.jsx)(t.td,{children:"String"}),(0,n.jsx)(t.td,{children:"A string representing the tss tag."}),(0,n.jsx)(t.td,{children:"Yes"})]}),(0,n.jsxs)(t.tr,{children:[(0,n.jsx)(t.td,{children:(0,n.jsx)(t.code,{children:"factorKey"})}),(0,n.jsx)(t.td,{children:"String"}),(0,n.jsx)(t.td,{children:"A string representing the factor key."}),(0,n.jsx)(t.td,{children:"Yes"})]}),(0,n.jsxs)(t.tr,{children:[(0,n.jsx)(t.td,{children:(0,n.jsx)(t.code,{children:"threshold"})}),(0,n.jsx)(t.td,{children:"Int32"}),(0,n.jsx)(t.td,{children:"An integer representing the threshold."}),(0,n.jsx)(t.td,{children:"No"})]})]})]}),"\n",(0,n.jsx)(t.pre,{children:(0,n.jsx)(t.code,{className:"language-swift",metastring:'title="Usage"',children:"let (tssIndex, tssShare) = try await TssModule.get_tss_share(threshold_key: threshold_key, tss_tag: selected_tag, factorKey: factorKey)\n"})}),"\n",(0,n.jsx)(t.h3,{id:"get_tss_nonce",children:(0,n.jsx)(t.code,{children:"get_tss_nonce()"})}),"\n",(0,n.jsx)(t.h4,{id:"function-definition-2",children:"Function Definition"}),"\n",(0,n.jsx)(t.pre,{children:(0,n.jsx)(t.code,{className:"language-swift",children:'public static func get_tss_nonce(threshold_key: ThresholdKey, tss_tag: String, prefetch: Bool = false) throws -> Int32 {\n    var errorCode: Int32 = -1\n    let tss_tag_pointer: UnsafeMutablePointer<Int8>? = UnsafeMutablePointer<Int8>(mutating: NSString(string: tss_tag).utf8String)\n    var nonce = withUnsafeMutablePointer(to: &errorCode, { error in\n        threshold_key_get_tss_nonce(threshold_key.pointer, tss_tag_pointer, error) })\n    guard errorCode == 0 else {\n        throw RuntimeError("Error in ThresholdKey get_tss_nonce")\n    }\n\n    if prefetch {\n        nonce += 1\n    }\n\n    return nonce\n}\n'})}),"\n",(0,n.jsx)(t.h4,{id:"parameters-5",children:"Parameters"}),"\n",(0,n.jsxs)(t.table,{children:[(0,n.jsx)(t.thead,{children:(0,n.jsxs)(t.tr,{children:[(0,n.jsx)(t.th,{children:"Parameter"}),(0,n.jsx)(t.th,{children:"Type"}),(0,n.jsx)(t.th,{children:"Description"}),(0,n.jsx)(t.th,{children:"Mandatory"})]})}),(0,n.jsxs)(t.tbody,{children:[(0,n.jsxs)(t.tr,{children:[(0,n.jsx)(t.td,{children:(0,n.jsx)(t.code,{children:"threshold_key"})}),(0,n.jsx)(t.td,{children:"ThresholdKey"}),(0,n.jsx)(t.td,{children:"ThresholdKey object to be used."}),(0,n.jsx)(t.td,{children:"Yes"})]}),(0,n.jsxs)(t.tr,{children:[(0,n.jsx)(t.td,{children:(0,n.jsx)(t.code,{children:"tss_tag"})}),(0,n.jsx)(t.td,{children:"String"}),(0,n.jsx)(t.td,{children:"A string representing the tss tag."}),(0,n.jsx)(t.td,{children:"Yes"})]}),(0,n.jsxs)(t.tr,{children:[(0,n.jsx)(t.td,{children:(0,n.jsx)(t.code,{children:"prefetch"})}),(0,n.jsx)(t.td,{children:"Bool"}),(0,n.jsx)(t.td,{children:"A boolean representing whether to prefetch or not."}),(0,n.jsx)(t.td,{children:"No"})]})]})]}),"\n",(0,n.jsx)(t.pre,{children:(0,n.jsx)(t.code,{className:"language-swift",metastring:'title="Usage"',children:"let tssNonce = try TssModule.get_tss_nonce(threshold_key: threshold_key, tss_tag: selected_tag)\n"})}),"\n",(0,n.jsx)(t.h3,{id:"gettsspubaddress",children:(0,n.jsx)(t.code,{children:"getTssPubAddress()"})}),"\n",(0,n.jsx)(t.p,{children:"This function returns the tss pub address."}),"\n",(0,n.jsx)(t.h4,{id:"function-definition-3",children:"Function Definition"}),"\n",(0,n.jsx)(t.pre,{children:(0,n.jsx)(t.code,{className:"language-swift",children:'public static func getTssPubAddress(threshold_key: ThresholdKey, tssTag: String, nonce: String, nodeDetails: AllNodeDetailsModel, torusUtils: TorusUtils) async throws -> GetTSSPubKeyResult {\n    let extendedVerifierId = try threshold_key.get_extended_verifier_id()\n    let split = extendedVerifierId.components(separatedBy: "\\u{001c}")\n\n    let result = try await torusUtils.getPublicAddress(endpoints: nodeDetails.torusNodeEndpoints, torusNodePubs: nodeDetails.torusNodePub, verifier: split[0], verifierId: split[1], extendedVerifierId: "\\(split[1])\\u{0015}\\(tssTag)\\u{0016}\\(nonce)")\n\n    print("result in service provider", result)\n    guard let x = result.finalKeyData?.X, let y = result.finalKeyData?.Y, let nodeIndexes = result.nodesData?.nodeIndexes else {\n        throw RuntimeError("conversion error")\n    }\n    let pubKey = GetTSSPubKeyResult.Point(x: x, y: y)\n    return GetTSSPubKeyResult(publicKey: pubKey, nodeIndexes: nodeIndexes)\n}\n'})}),"\n",(0,n.jsx)(t.h4,{id:"parameters-6",children:"Parameters"}),"\n",(0,n.jsxs)(t.table,{children:[(0,n.jsx)(t.thead,{children:(0,n.jsxs)(t.tr,{children:[(0,n.jsx)(t.th,{children:"Parameter"}),(0,n.jsx)(t.th,{children:"Type"}),(0,n.jsx)(t.th,{children:"Description"}),(0,n.jsx)(t.th,{children:"Mandatory"})]})}),(0,n.jsxs)(t.tbody,{children:[(0,n.jsxs)(t.tr,{children:[(0,n.jsx)(t.td,{children:(0,n.jsx)(t.code,{children:"threshold_key"})}),(0,n.jsx)(t.td,{children:"ThresholdKey"}),(0,n.jsx)(t.td,{children:"ThresholdKey object to be used."}),(0,n.jsx)(t.td,{children:"Yes"})]}),(0,n.jsxs)(t.tr,{children:[(0,n.jsx)(t.td,{children:(0,n.jsx)(t.code,{children:"tss_tag"})}),(0,n.jsx)(t.td,{children:"String"}),(0,n.jsx)(t.td,{children:"A string representing the tss tag."}),(0,n.jsx)(t.td,{children:"Yes"})]}),(0,n.jsxs)(t.tr,{children:[(0,n.jsx)(t.td,{children:(0,n.jsx)(t.code,{children:"nonce"})}),(0,n.jsx)(t.td,{children:"String"}),(0,n.jsx)(t.td,{children:"A string representing the nonce."}),(0,n.jsx)(t.td,{children:"Yes"})]}),(0,n.jsxs)(t.tr,{children:[(0,n.jsx)(t.td,{children:(0,n.jsx)(t.code,{children:"nodeDetails"})}),(0,n.jsx)(t.td,{children:"AllNodeDetailsModel"}),(0,n.jsx)(t.td,{children:"An AllNodeDetailsModel object containing the node details."}),(0,n.jsx)(t.td,{children:"Yes"})]}),(0,n.jsxs)(t.tr,{children:[(0,n.jsx)(t.td,{children:(0,n.jsx)(t.code,{children:"torusUtils"})}),(0,n.jsx)(t.td,{children:"TorusUtils"}),(0,n.jsx)(t.td,{children:"A TorusUtils object containing the torus utils."}),(0,n.jsx)(t.td,{children:"Yes"})]})]})]}),"\n",(0,n.jsx)(t.pre,{children:(0,n.jsx)(t.code,{className:"language-swift",metastring:'title="Usage"',children:"let tssPublicAddressInfo = try await TssModule.getTssPubAddress(threshold_key: threshold_key, tssTag: selected_tag, nonce: String(tssNonce), nodeDetails: nodeDetails, torusUtils: torusUtils)\n"})}),"\n",(0,n.jsx)(t.h3,{id:"get_tss_pub_key",children:(0,n.jsx)(t.code,{children:"get_tss_pub_key()"})}),"\n",(0,n.jsx)(t.p,{children:"This function returns the tss public key."}),"\n",(0,n.jsx)(t.h4,{id:"function-definition-4",children:"Function Definition"}),"\n",(0,n.jsx)(t.pre,{children:(0,n.jsx)(t.code,{className:"language-swift",children:'public static func get_tss_pub_key(threshold_key: ThresholdKey, tss_tag: String) async throws -> String {\n    try await TssModule.set_tss_tag(threshold_key: threshold_key, tss_tag: tss_tag)\n\n    var errorCode: Int32 = -1\n\n    let result = withUnsafeMutablePointer(to: &errorCode, { error in\n        threshold_key_get_tss_public_key(threshold_key.pointer, error) })\n    guard errorCode == 0 else {\n        throw RuntimeError("Error in get_tss_tag")\n    }\n    let string = String(cString: result!)\n    string_free(result)\n    return string\n}\n'})}),"\n",(0,n.jsx)(t.h4,{id:"parameters-7",children:"Parameters"}),"\n",(0,n.jsxs)(t.table,{children:[(0,n.jsx)(t.thead,{children:(0,n.jsxs)(t.tr,{children:[(0,n.jsx)(t.th,{children:"Parameter"}),(0,n.jsx)(t.th,{children:"Type"}),(0,n.jsx)(t.th,{children:"Description"}),(0,n.jsx)(t.th,{children:"Mandatory"})]})}),(0,n.jsxs)(t.tbody,{children:[(0,n.jsxs)(t.tr,{children:[(0,n.jsx)(t.td,{children:(0,n.jsx)(t.code,{children:"threshold_key"})}),(0,n.jsx)(t.td,{children:"ThresholdKey"}),(0,n.jsx)(t.td,{children:"ThresholdKey object to be used."}),(0,n.jsx)(t.td,{children:"Yes"})]}),(0,n.jsxs)(t.tr,{children:[(0,n.jsx)(t.td,{children:(0,n.jsx)(t.code,{children:"tss_tag"})}),(0,n.jsx)(t.td,{children:"String"}),(0,n.jsx)(t.td,{children:"A string representing the tss tag."}),(0,n.jsx)(t.td,{children:"Yes"})]})]})]}),"\n",(0,n.jsx)(t.pre,{children:(0,n.jsx)(t.code,{className:"language-swift",metastring:'title="Usage"',children:'tss_pub_key = try await TssModule.get_tss_pub_key(threshold_key: threshold_key, tss_tag: "default")\n'})}),"\n",(0,n.jsx)(t.h3,{id:"create_tagged_tss_share",children:(0,n.jsx)(t.code,{children:"create_tagged_tss_share()"})}),"\n",(0,n.jsx)(t.p,{children:"This function creates a tagged tss share."}),"\n",(0,n.jsx)(t.h4,{id:"function-definition-5",children:"Function Definition"}),"\n",(0,n.jsx)(t.pre,{children:(0,n.jsx)(t.code,{className:"language-swift",children:"public static func create_tagged_tss_share(threshold_key: ThresholdKey, tss_tag: String, deviceTssShare: String?, factorPub: String, deviceTssIndex: Int32, nodeDetails: AllNodeDetailsModel, torusUtils: TorusUtils) async throws {\n    try await TssModule.set_tss_tag(threshold_key: threshold_key, tss_tag: tss_tag)\n    try await TssModule.update_tss_pub_key(threshold_key: threshold_key, tss_tag: tss_tag, nodeDetails: nodeDetails, torusUtils: torusUtils)\n    return try await withCheckedThrowingContinuation {\n        continuation in\n        create_tagged_tss_share(threshold_key: threshold_key, deviceTssShare: deviceTssShare, factorPub: factorPub, deviceTssIndex: deviceTssIndex) {\n            result in\n            switch result {\n            case let .success(result):\n                continuation.resume(returning: result)\n            case let .failure(error):\n                continuation.resume(throwing: error)\n            }\n        }\n    }\n}\n"})}),"\n",(0,n.jsx)(t.h4,{id:"parameters-8",children:"Parameters"}),"\n",(0,n.jsxs)(t.table,{children:[(0,n.jsx)(t.thead,{children:(0,n.jsxs)(t.tr,{children:[(0,n.jsx)(t.th,{children:"Parameter"}),(0,n.jsx)(t.th,{children:"Type"}),(0,n.jsx)(t.th,{children:"Description"}),(0,n.jsx)(t.th,{children:"Mandatory"})]})}),(0,n.jsxs)(t.tbody,{children:[(0,n.jsxs)(t.tr,{children:[(0,n.jsx)(t.td,{children:(0,n.jsx)(t.code,{children:"threshold_key"})}),(0,n.jsx)(t.td,{children:"ThresholdKey"}),(0,n.jsx)(t.td,{children:"ThresholdKey object to be used."}),(0,n.jsx)(t.td,{children:"Yes"})]}),(0,n.jsxs)(t.tr,{children:[(0,n.jsx)(t.td,{children:(0,n.jsx)(t.code,{children:"tss_tag"})}),(0,n.jsx)(t.td,{children:"String"}),(0,n.jsx)(t.td,{children:"A string representing the tss tag."}),(0,n.jsx)(t.td,{children:"Yes"})]}),(0,n.jsxs)(t.tr,{children:[(0,n.jsx)(t.td,{children:(0,n.jsx)(t.code,{children:"deviceTssShare"})}),(0,n.jsx)(t.td,{children:"String"}),(0,n.jsx)(t.td,{children:"A string representing the device tss share."}),(0,n.jsx)(t.td,{children:"No"})]}),(0,n.jsxs)(t.tr,{children:[(0,n.jsx)(t.td,{children:(0,n.jsx)(t.code,{children:"factorPub"})}),(0,n.jsx)(t.td,{children:"String"}),(0,n.jsx)(t.td,{children:"A string representing the factor public key"}),(0,n.jsx)(t.td,{children:"Yes"})]}),(0,n.jsxs)(t.tr,{children:[(0,n.jsx)(t.td,{children:(0,n.jsx)(t.code,{children:"deviceTssIndex"})}),(0,n.jsx)(t.td,{children:"Int32"}),(0,n.jsx)(t.td,{children:"An integer representing the device index."}),(0,n.jsx)(t.td,{children:"Yes"})]}),(0,n.jsxs)(t.tr,{children:[(0,n.jsx)(t.td,{children:(0,n.jsx)(t.code,{children:"nodeDetails"})}),(0,n.jsx)(t.td,{children:"AllNodeDetailsModel"}),(0,n.jsx)(t.td,{children:"An AllNodeDetailsModel object representing the node details."}),(0,n.jsx)(t.td,{children:"Yes"})]}),(0,n.jsxs)(t.tr,{children:[(0,n.jsx)(t.td,{children:(0,n.jsx)(t.code,{children:"torusUtils"})}),(0,n.jsx)(t.td,{children:"TorusUtils"}),(0,n.jsx)(t.td,{children:"A TorusUtils object to be used."}),(0,n.jsx)(t.td,{children:"Yes"})]})]})]}),"\n",(0,n.jsx)(t.pre,{children:(0,n.jsx)(t.code,{className:"language-swift",metastring:'title="Usage"',children:'// generate factor key\nlet factorKey = try PrivateKey.generate()\n// derive factor pub\nlet factorPub = try factorKey.toPublic()\n\ntry await TssModule.create_tagged_tss_share(\n  threshold_key: self.threshold_key,\n  tss_tag: "default",\n  deviceTssShare: nil,\n  factorPub: factorPub,\n  deviceTssIndex: 2,\n  nodeDetails: self.nodeDetails!,\n  torusUtils: self.torusUtils!)\n'})}),"\n",(0,n.jsx)(t.h3,{id:"get_all_factor_pub",children:(0,n.jsx)(t.code,{children:"get_all_factor_pub()"})}),"\n",(0,n.jsx)(t.p,{children:"This function returns the tss factor public key."}),"\n",(0,n.jsx)(t.h4,{id:"function-definition-6",children:"Function Definition"}),"\n",(0,n.jsx)(t.pre,{children:(0,n.jsx)(t.code,{className:"language-swift",children:'public static func get_all_factor_pub(threshold_key: ThresholdKey, tss_tag: String) async throws -> [String] {\n    try await TssModule.set_tss_tag(threshold_key: threshold_key, tss_tag: tss_tag)\n\n    var errorCode: Int32 = -1\n\n    let result = withUnsafeMutablePointer(to: &errorCode, { error in\n        threshold_key_get_tss_tag_factor_pub(threshold_key.pointer, error) })\n    guard errorCode == 0 else {\n        throw RuntimeError("Error in get_all_factor_pub")\n    }\n    let string = String(cString: result!)\n    string_free(result)\n    guard let data = string.data(using: .utf8) else {\n        throw RuntimeError("Error in get_all_factor_pub : Invalid output ")\n    }\n    guard let result_vec = try JSONSerialization.jsonObject(with: data) as? [String] else {\n        throw RuntimeError("Error in get_all_factor_pub : Invalid output ")\n    }\n\n    return result_vec\n}\n'})}),"\n",(0,n.jsx)(t.h4,{id:"parameters-9",children:"Parameters"}),"\n",(0,n.jsxs)(t.table,{children:[(0,n.jsx)(t.thead,{children:(0,n.jsxs)(t.tr,{children:[(0,n.jsx)(t.th,{children:"Parameter"}),(0,n.jsx)(t.th,{children:"Type"}),(0,n.jsx)(t.th,{children:"Description"}),(0,n.jsx)(t.th,{children:"Mandatory"})]})}),(0,n.jsxs)(t.tbody,{children:[(0,n.jsxs)(t.tr,{children:[(0,n.jsx)(t.td,{children:(0,n.jsx)(t.code,{children:"threshold_key"})}),(0,n.jsx)(t.td,{children:"ThresholdKey"}),(0,n.jsx)(t.td,{children:"ThresholdKey object to be used."}),(0,n.jsx)(t.td,{children:"Yes"})]}),(0,n.jsxs)(t.tr,{children:[(0,n.jsx)(t.td,{children:(0,n.jsx)(t.code,{children:"tss_tag"})}),(0,n.jsx)(t.td,{children:"String"}),(0,n.jsx)(t.td,{children:"A string representing the tss tag."}),(0,n.jsx)(t.td,{children:"Yes"})]})]})]}),"\n",(0,n.jsx)(t.pre,{children:(0,n.jsx)(t.code,{className:"language-swift",metastring:'title="Usage"',children:'factor_pub = try await TssModule.get_all_factor_pub(threshold_key: threshold_key, tss_tag: "default")\n'})}),"\n",(0,n.jsx)(t.h3,{id:"add_factor_pub",children:(0,n.jsx)(t.code,{children:"add_factor_pub()"})}),"\n",(0,n.jsx)(t.p,{children:"This function adds a factor public key."}),"\n",(0,n.jsx)(t.h4,{id:"function-definition-7",children:"Function Definition"}),"\n",(0,n.jsx)(t.pre,{children:(0,n.jsx)(t.code,{className:"language-swift",children:'public static func add_factor_pub(threshold_key: ThresholdKey, tss_tag: String, factor_key: String, auth_signatures: [String], new_factor_pub: String, new_tss_index: Int32, selected_servers: [Int32]? = nil, nodeDetails: AllNodeDetailsModel, torusUtils: TorusUtils) async throws {\n    if factor_key.count > 66 { throw RuntimeError("Invalid factor Key") }\n    try await TssModule.set_tss_tag(threshold_key: threshold_key, tss_tag: tss_tag)\n\n    let (tss_index, tss_share) = try await get_tss_share(threshold_key: threshold_key, tss_tag: tss_tag, factorKey: factor_key)\n    try await TssModule.generate_tss_share(threshold_key: threshold_key, tss_tag: tss_tag, input_tss_share: tss_share, tss_input_index: Int32(tss_index)!, auth_signatures: auth_signatures, new_factor_pub: new_factor_pub, new_tss_index: new_tss_index, nodeDetails: nodeDetails, torusUtils: torusUtils, selected_servers: selected_servers)\n}\n'})}),"\n",(0,n.jsx)(t.h4,{id:"parameters-10",children:"Parameters"}),"\n",(0,n.jsxs)(t.table,{children:[(0,n.jsx)(t.thead,{children:(0,n.jsxs)(t.tr,{children:[(0,n.jsx)(t.th,{children:"Parameter"}),(0,n.jsx)(t.th,{children:"Type"}),(0,n.jsx)(t.th,{children:"Description"}),(0,n.jsx)(t.th,{children:"Mandatory"})]})}),(0,n.jsxs)(t.tbody,{children:[(0,n.jsxs)(t.tr,{children:[(0,n.jsx)(t.td,{children:(0,n.jsx)(t.code,{children:"threshold_key"})}),(0,n.jsx)(t.td,{children:"ThresholdKey"}),(0,n.jsx)(t.td,{children:"ThresholdKey object to be used."}),(0,n.jsx)(t.td,{children:"Yes"})]}),(0,n.jsxs)(t.tr,{children:[(0,n.jsx)(t.td,{children:(0,n.jsx)(t.code,{children:"tss_tag"})}),(0,n.jsx)(t.td,{children:"String"}),(0,n.jsx)(t.td,{children:"A string representing the tss tag."}),(0,n.jsx)(t.td,{children:"Yes"})]}),(0,n.jsxs)(t.tr,{children:[(0,n.jsx)(t.td,{children:(0,n.jsx)(t.code,{children:"factor_key"})}),(0,n.jsx)(t.td,{children:"String"}),(0,n.jsx)(t.td,{children:"A string representing the factor key."}),(0,n.jsx)(t.td,{children:"Yes"})]}),(0,n.jsxs)(t.tr,{children:[(0,n.jsx)(t.td,{children:(0,n.jsx)(t.code,{children:"auth_signatures"})}),(0,n.jsx)(t.td,{children:"[String]"}),(0,n.jsx)(t.td,{children:"An array of strings representing the auth signatures."}),(0,n.jsx)(t.td,{children:"Yes"})]}),(0,n.jsxs)(t.tr,{children:[(0,n.jsx)(t.td,{children:(0,n.jsx)(t.code,{children:"new_factor_pub"})}),(0,n.jsx)(t.td,{children:"String"}),(0,n.jsx)(t.td,{children:"A string representing the new factor public key."}),(0,n.jsx)(t.td,{children:"Yes"})]}),(0,n.jsxs)(t.tr,{children:[(0,n.jsx)(t.td,{children:(0,n.jsx)(t.code,{children:"new_tss_index"})}),(0,n.jsx)(t.td,{children:"Int32"}),(0,n.jsx)(t.td,{children:"An integer representing the new tss index."}),(0,n.jsx)(t.td,{children:"Yes"})]}),(0,n.jsxs)(t.tr,{children:[(0,n.jsx)(t.td,{children:(0,n.jsx)(t.code,{children:"selected_servers"})}),(0,n.jsx)(t.td,{children:"[Int32]?"}),(0,n.jsx)(t.td,{children:"An array of integers representing the selected servers."}),(0,n.jsx)(t.td,{children:"No"})]}),(0,n.jsxs)(t.tr,{children:[(0,n.jsx)(t.td,{children:(0,n.jsx)(t.code,{children:"nodeDetails"})}),(0,n.jsx)(t.td,{children:"AllNodeDetailsModel"}),(0,n.jsx)(t.td,{children:"An AllNodeDetailsModel object representing the node details."}),(0,n.jsx)(t.td,{children:"Yes"})]}),(0,n.jsxs)(t.tr,{children:[(0,n.jsx)(t.td,{children:(0,n.jsx)(t.code,{children:"torusUtils"})}),(0,n.jsx)(t.td,{children:"TorusUtils"}),(0,n.jsx)(t.td,{children:"A TorusUtils object to be used."}),(0,n.jsx)(t.td,{children:"Yes"})]})]})]}),"\n",(0,n.jsx)(t.pre,{children:(0,n.jsx)(t.code,{className:"language-swift",metastring:'title="Usage"',children:"try await TssModule.add_factor_pub(threshold_key: threshold_key, tss_tag: selected_tag, factor_key: factorKey, auth_signatures: sigs, new_factor_pub: newFactorPub, new_tss_index: tssShareIndex, nodeDetails: nodeDetails!, torusUtils: torusUtils!)\n"})}),"\n",(0,n.jsx)(t.h3,{id:"copy_factor_pub",children:(0,n.jsx)(t.code,{children:"copy_factor_pub()"})}),"\n",(0,n.jsx)(t.p,{children:"This function copies a factor public key."}),"\n",(0,n.jsx)(t.h4,{id:"function-definition-8",children:"Function Definition"}),"\n",(0,n.jsx)(t.pre,{children:(0,n.jsx)(t.code,{className:"language-swift",children:'public static func copy_factor_pub(threshold_key: ThresholdKey, tss_tag: String, factorKey: String, newFactorPub: String, tss_index: Int32, threshold: Int32 = 0) async throws {\n    if factorKey.count > 66 { throw RuntimeError("Invalid factor Key") }\n    try await TssModule.set_tss_tag(threshold_key: threshold_key, tss_tag: tss_tag)\n\n    return try await withCheckedThrowingContinuation {\n        continuation in\n        copy_factor_pub(threshold_key: threshold_key, factorKey: factorKey, newFactorPub: newFactorPub, tss_index: tss_index) {\n            result in\n            switch result {\n            case let .success(result):\n                continuation.resume(returning: result)\n            case let .failure(error):\n                continuation.resume(throwing: error)\n            }\n        }\n    }\n}\n'})}),"\n",(0,n.jsx)(t.h4,{id:"parameters-11",children:"Parameters"}),"\n",(0,n.jsxs)(t.table,{children:[(0,n.jsx)(t.thead,{children:(0,n.jsxs)(t.tr,{children:[(0,n.jsx)(t.th,{children:"Parameter"}),(0,n.jsx)(t.th,{children:"Type"}),(0,n.jsx)(t.th,{children:"Description"}),(0,n.jsx)(t.th,{children:"Mandatory"})]})}),(0,n.jsxs)(t.tbody,{children:[(0,n.jsxs)(t.tr,{children:[(0,n.jsx)(t.td,{children:(0,n.jsx)(t.code,{children:"threshold_key"})}),(0,n.jsx)(t.td,{children:"ThresholdKey"}),(0,n.jsx)(t.td,{children:"ThresholdKey object to be used."}),(0,n.jsx)(t.td,{children:"Yes"})]}),(0,n.jsxs)(t.tr,{children:[(0,n.jsx)(t.td,{children:(0,n.jsx)(t.code,{children:"tss_tag"})}),(0,n.jsx)(t.td,{children:"String"}),(0,n.jsx)(t.td,{children:"A string representing the tss tag."}),(0,n.jsx)(t.td,{children:"Yes"})]}),(0,n.jsxs)(t.tr,{children:[(0,n.jsx)(t.td,{children:(0,n.jsx)(t.code,{children:"factor_key"})}),(0,n.jsx)(t.td,{children:"String"}),(0,n.jsx)(t.td,{children:"A string representing the factor key."}),(0,n.jsx)(t.td,{children:"Yes"})]}),(0,n.jsxs)(t.tr,{children:[(0,n.jsx)(t.td,{children:(0,n.jsx)(t.code,{children:"new_factor_pub"})}),(0,n.jsx)(t.td,{children:"String"}),(0,n.jsx)(t.td,{children:"A string representing the new factor public key."}),(0,n.jsx)(t.td,{children:"Yes"})]}),(0,n.jsxs)(t.tr,{children:[(0,n.jsx)(t.td,{children:(0,n.jsx)(t.code,{children:"tss_index"})}),(0,n.jsx)(t.td,{children:"Int32"}),(0,n.jsx)(t.td,{children:"An integer representing the tss index."}),(0,n.jsx)(t.td,{children:"Yes"})]}),(0,n.jsxs)(t.tr,{children:[(0,n.jsx)(t.td,{children:(0,n.jsx)(t.code,{children:"threshold"})}),(0,n.jsx)(t.td,{children:"Int32"}),(0,n.jsx)(t.td,{children:"An integer representing the threshold."}),(0,n.jsx)(t.td,{children:"No"})]})]})]}),"\n",(0,n.jsx)(t.pre,{children:(0,n.jsx)(t.code,{className:"language-swift",metastring:'title="Usage"',children:"try await TssModule.copy_factor_pub(threshold_key: threshold_key, tss_tag: selected_tag, factorKey: factorKey, newFactorPub: newFactorPub, tss_index: tssShareIndex)\n"})}),"\n",(0,n.jsx)(t.h3,{id:"delete_factor_pub",children:(0,n.jsx)(t.code,{children:"delete_factor_pub()"})}),"\n",(0,n.jsx)(t.p,{children:"This function deletes a factor public key."}),"\n",(0,n.jsx)(t.h4,{id:"function-definition-9",children:"Function Definition"}),"\n",(0,n.jsx)(t.pre,{children:(0,n.jsx)(t.code,{className:"language-swift",children:'public static func delete_factor_pub(threshold_key: ThresholdKey, tss_tag: String, factor_key: String, auth_signatures: [String], delete_factor_pub: String, nodeDetails: AllNodeDetailsModel, torusUtils: TorusUtils, selected_servers: [Int32]? = nil) async throws {\n    if factor_key.count > 66 { throw RuntimeError("Invalid factor Key") }\n    try await TssModule.set_tss_tag(threshold_key: threshold_key, tss_tag: tss_tag)\n\n    let (tss_index, tss_share) = try await get_tss_share(threshold_key: threshold_key, tss_tag: tss_tag, factorKey: factor_key)\n    try await TssModule.delete_tss_share(threshold_key: threshold_key, tss_tag: tss_tag, input_tss_share: tss_share, tss_input_index: Int32(tss_index)!, auth_signatures: auth_signatures, delete_factor_pub: delete_factor_pub, nodeDetails: nodeDetails, torusUtils: torusUtils, selected_servers: selected_servers)\n}\n'})}),"\n",(0,n.jsx)(t.h4,{id:"parameters-12",children:"Parameters"}),"\n",(0,n.jsxs)(t.table,{children:[(0,n.jsx)(t.thead,{children:(0,n.jsxs)(t.tr,{children:[(0,n.jsx)(t.th,{children:"Parameter"}),(0,n.jsx)(t.th,{children:"Type"}),(0,n.jsx)(t.th,{children:"Description"}),(0,n.jsx)(t.th,{children:"Mandatory"})]})}),(0,n.jsxs)(t.tbody,{children:[(0,n.jsxs)(t.tr,{children:[(0,n.jsx)(t.td,{children:(0,n.jsx)(t.code,{children:"threshold_key"})}),(0,n.jsx)(t.td,{children:"ThresholdKey"}),(0,n.jsx)(t.td,{children:"ThresholdKey object to be used."}),(0,n.jsx)(t.td,{children:"Yes"})]}),(0,n.jsxs)(t.tr,{children:[(0,n.jsx)(t.td,{children:(0,n.jsx)(t.code,{children:"tss_tag"})}),(0,n.jsx)(t.td,{children:"String"}),(0,n.jsx)(t.td,{children:"A string representing the tss tag."}),(0,n.jsx)(t.td,{children:"Yes"})]}),(0,n.jsxs)(t.tr,{children:[(0,n.jsx)(t.td,{children:(0,n.jsx)(t.code,{children:"factor_key"})}),(0,n.jsx)(t.td,{children:"String"}),(0,n.jsx)(t.td,{children:"A string representing the factor key."}),(0,n.jsx)(t.td,{children:"Yes"})]}),(0,n.jsxs)(t.tr,{children:[(0,n.jsx)(t.td,{children:(0,n.jsx)(t.code,{children:"auth_signatures"})}),(0,n.jsx)(t.td,{children:"[String]"}),(0,n.jsx)(t.td,{children:"An array of strings representing the auth signatures."}),(0,n.jsx)(t.td,{children:"Yes"})]}),(0,n.jsxs)(t.tr,{children:[(0,n.jsx)(t.td,{children:(0,n.jsx)(t.code,{children:"delete_factor_pub"})}),(0,n.jsx)(t.td,{children:"String"}),(0,n.jsx)(t.td,{children:"A string representing the delete factor public key."}),(0,n.jsx)(t.td,{children:"Yes"})]}),(0,n.jsxs)(t.tr,{children:[(0,n.jsx)(t.td,{children:(0,n.jsx)(t.code,{children:"selected_servers"})}),(0,n.jsx)(t.td,{children:"[Int32]?"}),(0,n.jsx)(t.td,{children:"An array of integers representing the selected servers."}),(0,n.jsx)(t.td,{children:"No"})]}),(0,n.jsxs)(t.tr,{children:[(0,n.jsx)(t.td,{children:(0,n.jsx)(t.code,{children:"nodeDetails"})}),(0,n.jsx)(t.td,{children:"AllNodeDetailsModel"}),(0,n.jsx)(t.td,{children:"An AllNodeDetailsModel object representing the node details."}),(0,n.jsx)(t.td,{children:"Yes"})]}),(0,n.jsxs)(t.tr,{children:[(0,n.jsx)(t.td,{children:(0,n.jsx)(t.code,{children:"torusUtils"})}),(0,n.jsx)(t.td,{children:"TorusUtils"}),(0,n.jsx)(t.td,{children:"A TorusUtils object to be used."}),(0,n.jsx)(t.td,{children:"Yes"})]})]})]}),"\n",(0,n.jsx)(t.pre,{children:(0,n.jsx)(t.code,{className:"language-swift",metastring:'title="Usage"',children:"try await TssModule.delete_factor_pub(threshold_key: threshold_key, tss_tag: selected_tag, factor_key: factorKey, auth_signatures: sigs, delete_factor_pub: deleteFactorPK.toPublic(), nodeDetails: nodeDetails!, torusUtils: torusUtils!)\n"})}),"\n",(0,n.jsx)(t.h3,{id:"example-1",children:"Example"}),"\n",(0,n.jsx)(t.admonition,{title:"example",type:"info",children:(0,n.jsxs)(t.p,{children:["Explore our ",(0,n.jsx)(t.a,{href:"https://github.com/torusresearch/tkey-rust-ios-example/tree/alpha",children:(0,n.jsx)(t.strong,{children:"example application"})})," and try the SDK yourself."]})})]})}function x(e={}){const{wrapper:t}={...(0,r.a)(),...e.components};return t?(0,n.jsx)(t,{...e,children:(0,n.jsx)(h,{...e})}):h(e)}},30831:(e,t,s)=>{s.d(t,{Z:()=>i});var n=s(35742),r=s(85893);function i(e){const{title:t,description:s,image:i,slug:d,keywords:l}=e;return(0,r.jsxs)(n.Z,{children:[t?(0,r.jsxs)("title",{children:[t," | Web3Auth "]}):(0,r.jsx)("title",{children:"Documentation | Web3Auth"}),s?(0,r.jsx)("meta",{name:"description",content:s}):(0,r.jsx)("meta",{name:"description",content:"Web3Auth is simple, non-custodial auth infrastructure that enables Web3 wallets and applications to provide seamless user logins for both mainstream and native Web3 users."}),l?l.length>0&&(0,r.jsx)("meta",{name:"keywords",content:`web3auth, blockchain, solana, ethereum, multi party computation, ${l.join(", ")}`}):(0,r.jsx)("meta",{name:"keywords",content:"web3auth, blockchain, web3, web3.js, ethers.js, solana, ethereum, passwordless, passwordless magic link, multi party computation, tkey, torus, web3 auth, auth"}),(0,r.jsx)("meta",{property:"og:site_name",content:"Web3Auth"}),(0,r.jsx)("meta",{property:"og:type",content:"website"}),t?(0,r.jsx)("meta",{property:"og:title",content:t}):(0,r.jsx)("meta",{property:"og:title",content:"Documentation | Web3Auth"}),s?(0,r.jsx)("meta",{property:"og:description",content:s}):(0,r.jsx)("meta",{property:"og:description",content:"Web3Auth is simple, non-custodial auth infrastructure that enables Web3 wallets and applications to provide seamless user logins for both mainstream and native Web3 users."}),d?(0,r.jsx)("meta",{property:"og:url",content:`https://web3auth.io/docs${d}`}):(0,r.jsx)("meta",{property:"og:url",content:"https://web3auth.io/docs"}),i?(0,r.jsx)("meta",{property:"og:image",content:i}):(0,r.jsx)("meta",{property:"og:image",content:"http://web3auth.io/docs/images/docs-meta-cards/documentation-card.png"}),(0,r.jsx)("meta",{name:"twitter:card",content:"summary_large_image"}),(0,r.jsx)("meta",{name:"twitter:site",content:"@Web3Auth"}),(0,r.jsx)("meta",{name:"twitter:creator",content:"@Web3Auth"}),i?(0,r.jsx)("meta",{name:"twitter:image",content:i}):(0,r.jsx)("meta",{name:"twitter:image",content:"http://web3auth.io/docs/images/docs-meta-cards/documentation-card.png"}),t?(0,r.jsx)("meta",{itemProp:"name",content:t}):(0,r.jsx)("meta",{itemProp:"name",content:"Documentation | Web3Auth"}),s?(0,r.jsx)("meta",{itemProp:"description",content:s}):(0,r.jsx)("meta",{itemProp:"description",content:"Web3Auth is simple, non-custodial auth infrastructure that enables Web3 wallets and applications to provide seamless user logins for both mainstream and native Web3 users."}),i?(0,r.jsx)("meta",{itemProp:"image",content:i}):(0,r.jsx)("meta",{itemProp:"image",content:"http://web3auth.io/docs/images/docs-meta-cards/documentation-card.png"}),(0,r.jsx)("meta",{name:"author",content:"Web3Auth"})]})}},11151:(e,t,s)=>{s.d(t,{Z:()=>l,a:()=>d});var n=s(67294);const r={},i=n.createContext(r);function d(e){const t=n.useContext(i);return n.useMemo((function(){return"function"==typeof e?e(t):{...t,...e}}),[t,e])}function l(e){let t;return t=e.disableParentContext?"function"==typeof e.components?e.components(r):e.components||r:d(e.components),n.createElement(i.Provider,{value:t},e.children)}}}]);