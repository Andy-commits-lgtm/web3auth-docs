"use strict";(self.webpackChunkweb3auth_docs=self.webpackChunkweb3auth_docs||[]).push([[19783],{18786:(e,t,n)=>{n.d(t,{ZP:()=>i});var a=n(85893),o=n(11151);function r(e){const t={code:"code",p:"p",pre:"pre",...(0,o.a)(),...e.components};return(0,a.jsxs)(a.Fragment,{children:[(0,a.jsx)(t.p,{children:"After logging in, the Web3Auth instance will provide you with information regarding the user that is logged in. This information is obtained directly\nfrom the JWT token and is not stored by Web3Auth. Therefore, this information can only be accessed through social logins after the user has logged\ninto your application."}),"\n",(0,a.jsx)(t.pre,{children:(0,a.jsx)(t.code,{className:"language-tsx",children:"const user = await web3auth.getUserInfo(); // web3auth instance\n"})})]})}function i(e={}){const{wrapper:t}={...(0,o.a)(),...e.components};return t?(0,a.jsx)(t,{...e,children:(0,a.jsx)(r,{...e})}):r(e)}},50210:(e,t,n)=>{n.d(t,{ZP:()=>c});var a=n(85893),o=n(11151),r=n(74866),i=n(85162);function s(e){const t={code:"code",pre:"pre",...(0,o.a)(),...e.components};return(0,a.jsxs)(r.Z,{defaultValue:"modal",values:[{label:"PnP Modal SDK",value:"modal"},{label:"PnP NoModal SDK",value:"no-modal"},{label:"CoreKit SFA Web SDK",value:"sfa"},{label:"CoreKit MFA tKey JS SDK",value:"tkey"}],children:[(0,a.jsx)(i.Z,{value:"modal",children:(0,a.jsx)(t.pre,{children:(0,a.jsx)(t.code,{className:"language-tsx",children:'import { Web3Auth } from "@web3auth/modal";\nimport { CommonPrivateKeyProvider } from "@web3auth/base-provider";\nimport { WEB3AUTH_NETWORK } from "@web3auth/base";\n\nconst privateKeyProvider = new CommonPrivateKeyProvider({\n  config: { chainConfig: chainConfig }\n});\n\nconst web3auth = new Web3Auth({\n  // Get it from Web3Auth Dashboard\n  clientId,\n  web3AuthNetwork: WEB3AUTH_NETWORK.SAPPHIRE_MAINNET,\n  privateKeyProvider: privateKeyProvider,\n});\n'})})}),(0,a.jsx)(i.Z,{value:"no-modal",children:(0,a.jsx)(t.pre,{children:(0,a.jsx)(t.code,{className:"language-tsx",children:'import { Web3AuthNoModal } from "@web3auth/no-modal";\nimport { OpenloginAdapter } from "@web3auth/openlogin-adapter";\nimport { CommonPrivateKeyProvider } from "@web3auth/base-provider";\nimport { WEB3AUTH_NETWORK } from "@web3auth/base";\n\nconst privateKeyProvider = new CommonPrivateKeyProvider({\n  config: {chainConfig},\n});\n\nconst web3auth = new Web3AuthNoModal({\n  clientId, // Get it from Web3Auth Dashboard\n  web3AuthNetwork: WEB3AUTH_NETWORK.SAPPHIRE_MAINNET,\n});\n\nconst openloginAdapter = new OpenloginAdapter();\nweb3auth.configureAdapter(openloginAdapter);\n'})})}),(0,a.jsx)(i.Z,{value:"sfa",children:(0,a.jsx)(t.pre,{children:(0,a.jsx)(t.code,{className:"language-tsx",children:'import { Web3Auth } from "@web3auth/single-factor-auth";\nimport { CommonPrivateKeyProvider } from "@web3auth/base-provider";\n\nconst web3auth = new Web3Auth({\n  clientId, // Get your Client ID from Web3Auth Dashboard\n  web3AuthNetwork: "sapphire_mainnet",\n});\n\nconst privateKeyProvider = new CommonPrivateKeyProvider({\n  config: { chainConfig },\n});\n'})})}),(0,a.jsx)(i.Z,{value:"tkey",children:(0,a.jsx)(t.pre,{children:(0,a.jsx)(t.code,{className:"language-tsx",children:'import { SfaServiceProvider } from "@tkey/service-provider-sfa";\nimport { CommonPrivateKeyProvider } from "@web3auth/base-provider";\n\n// Initialization of private key provider\nconst privateKeyProvider = new CommonPrivateKeyProvider({\n  config: {\n    chainConfig,\n  },\n});\n\nawait (tKey.serviceProvider as SfaServiceProvider).init(privateKeyProvider);\n'})})})]})}function c(e={}){const{wrapper:t}={...(0,o.a)(),...e.components};return t?(0,a.jsx)(t,{...e,children:(0,a.jsx)(s,{...e})}):s(e)}},74484:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>h,contentTitle:()=>u,default:()=>b,frontMatter:()=>l,metadata:()=>d,toc:()=>p});var a=n(85893),o=n(11151),r=n(74866),i=n(85162),s=n(18786),c=n(50210);const l={title:"Integrate Web3Auth with the Tezos Blockchain",sidebar_label:"Tezos",image:"content-hub/guides/banners/tezos.png",displayed_sidebar:"docs",keywords:["tezos","web3auth","authentication","blockchain"],description:"Integrate Web3Auth with the Tezos Blockchain | Documentation - Web3Auth"},u=void 0,d={id:"connect-blockchain/other/tezos",title:"Integrate Web3Auth with the Tezos Blockchain",description:"Integrate Web3Auth with the Tezos Blockchain | Documentation - Web3Auth",source:"@site/docs/connect-blockchain/other/tezos.mdx",sourceDirName:"connect-blockchain/other",slug:"/connect-blockchain/other/tezos",permalink:"/docs/connect-blockchain/other/tezos",draft:!1,unlisted:!1,editUrl:"https://github.com/web3auth/web3auth-docs/edit/master/docs/connect-blockchain/other/tezos.mdx",tags:[],version:"current",frontMatter:{title:"Integrate Web3Auth with the Tezos Blockchain",sidebar_label:"Tezos",image:"content-hub/guides/banners/tezos.png",displayed_sidebar:"docs",keywords:["tezos","web3auth","authentication","blockchain"],description:"Integrate Web3Auth with the Tezos Blockchain | Documentation - Web3Auth"},sidebar:"docs",previous:{title:"StarkNet",permalink:"/docs/connect-blockchain/other/starknet"},next:{title:"Examples",permalink:"/docs/examples"}},h={},p=[{value:"Installation",id:"installation",level:2},{value:"Initializing Provider",id:"initializing-provider",level:2},{value:"Getting the <code>chainConfig</code>",id:"getting-the-chainconfig",level:3},{value:"Initializing and instantiating the Web3Auth SDK",id:"initializing-and-instantiating-the-web3auth-sdk",level:3},{value:"Get User Info",id:"get-user-info",level:2},{value:"Get Account, Balance and Key",id:"get-account-balance-and-key",level:2},{value:"Send Transaction",id:"send-transaction",level:2},{value:"Sign Message",id:"sign-message",level:2}];function m(e){const t={a:"a",admonition:"admonition",code:"code",h2:"h2",h3:"h3",p:"p",pre:"pre",...(0,o.a)(),...e.components};return(0,a.jsxs)(a.Fragment,{children:[(0,a.jsxs)(t.p,{children:["While using the Web3Auth Web SDK for a non EVM chain like ",(0,a.jsx)(t.a,{href:"https://tezos.com/",children:"Tezos"})," you get a standard provider from which you can get the private\nkey of the user. Using this private key, you can use the corresponding libraries of the blockchain to make blockchain calls like getting user's\n",(0,a.jsx)(t.code,{children:"account"}),", fetch ",(0,a.jsx)(t.code,{children:"balance"}),", ",(0,a.jsx)(t.code,{children:"sign transaction"}),", ",(0,a.jsx)(t.code,{children:"send transaction"}),", ",(0,a.jsx)(t.code,{children:"read"})," from and ",(0,a.jsx)(t.code,{children:"write"})," to the smart contract, etc. We have highlighted a few\nmethods here for getting you started quickly on that."]}),"\n",(0,a.jsx)(t.admonition,{type:"note",children:(0,a.jsxs)(t.p,{children:["This reference is for the ",(0,a.jsx)(t.code,{children:"Web"}),", however, you can use Tezos on other Mobile and Gaming Platforms as well. Please follow our reference for\n",(0,a.jsx)(t.a,{href:"/connect-blockchain/evm/",children:"EVM Blockchains"}),", and similarly use Tezos libraries that support the platforms to use the private key and make blockchain\ncalls accordingly."]})}),"\n",(0,a.jsx)(t.h2,{id:"installation",children:"Installation"}),"\n",(0,a.jsxs)(r.Z,{groupId:"npm2yarn",children:[(0,a.jsx)(i.Z,{value:"npm",children:(0,a.jsx)(t.pre,{children:(0,a.jsx)(t.code,{className:"language-bash",children:"npm install --save @taquito/signer @taquito/taquito @taquito/utils @tezos-core-tools/crypto-utils\n"})})}),(0,a.jsx)(i.Z,{value:"yarn",label:"Yarn",children:(0,a.jsx)(t.pre,{children:(0,a.jsx)(t.code,{className:"language-bash",children:"yarn add @taquito/signer @taquito/taquito @taquito/utils @tezos-core-tools/crypto-utils\n"})})}),(0,a.jsx)(i.Z,{value:"pnpm",label:"pnpm",children:(0,a.jsx)(t.pre,{children:(0,a.jsx)(t.code,{className:"language-bash",children:"pnpm add @taquito/signer @taquito/taquito @taquito/utils @tezos-core-tools/crypto-utils\n"})})})]}),"\n",(0,a.jsx)(t.h2,{id:"initializing-provider",children:"Initializing Provider"}),"\n",(0,a.jsxs)(t.h3,{id:"getting-the-chainconfig",children:["Getting the ",(0,a.jsx)(t.code,{children:"chainConfig"})]}),"\n",(0,a.jsxs)(r.Z,{defaultValue:"mainnet",values:[{label:"Mainnet",value:"mainnet"},{label:"Testnet",value:"testnet"}],children:[(0,a.jsx)(i.Z,{value:"mainnet",children:(0,a.jsx)(t.pre,{children:(0,a.jsx)(t.code,{className:"language-typescript",children:'const chainConfig = {\n  chainNamespace: "other",\n  chainId: "0x1", //\n  rpcTarget: "https://rpc.tzbeta.net/",\n  displayName: "Tezos Mainnet",\n  blockExplorerUrl: "https://tzstats.com",\n  ticker: "XTZ",\n  tickerName: "Tezos",\n};\n'})})}),(0,a.jsx)(i.Z,{value:"testnet",children:(0,a.jsx)(t.pre,{children:(0,a.jsx)(t.code,{className:"language-typescript",children:'const chainConfig = {\n  chainNamespace: "other",\n  chainId: "0x5", //\n  rpcTarget: "https://rpc.tzbeta.net/",\n  displayName: "Tezos Testnet",\n  blockExplorerUrl: "https://tzstats.com",\n  ticker: "XTZ",\n  tickerName: "Tezos",\n};\n'})})})]}),"\n",(0,a.jsx)(t.h3,{id:"initializing-and-instantiating-the-web3auth-sdk",children:"Initializing and instantiating the Web3Auth SDK"}),"\n",(0,a.jsx)(c.ZP,{}),"\n",(0,a.jsx)(t.pre,{children:(0,a.jsx)(t.code,{className:"language-tsx",children:'import { Web3Auth } from "@web3auth/modal";\nimport { OpenloginAdapter } from "@web3auth/openlogin-adapter";\n\nconst web3auth = new Web3Auth({\n  clientId: "BPi5PB_UiIZ-cPz1GtV5i1I2iOSOHuimiXBI0e-Oe_u6X3oVAbCiAZOTEBtTXw4tsluTITPqA8zMsfxIKMjiqNQ", // get it from Web3Auth Dashboard\n  web3AuthNetwork: "sapphire_mainnet",\n  chainConfig: {\n    chainNamespace: "other", // for all non EVM and SOLANA chains, use "other"\n    rpcTarget: "https://rpc.tzbeta.net/",\n    displayName: "Tezos",\n    blockExplorerUrl: "https://tzstats.com",\n    ticker: "XTZ",\n    tickerName: "Tezos",\n  },\n});\n\n// "other" is supported through @web3auth/openlogin-adapter package.\nconst openloginAdapter = new OpenloginAdapter({\n  adapterSettings: {\n    uxMode: "popup",\n  },\n});\nweb3auth.configureAdapter(openloginAdapter);\n\nawait web3auth.initModal();\n\nconst web3authProvider = await web3auth.connect(); // web3auth.provider\n'})}),"\n",(0,a.jsx)(t.h2,{id:"get-user-info",children:"Get User Info"}),"\n",(0,a.jsx)(s.ZP,{}),"\n",(0,a.jsx)(t.h2,{id:"get-account-balance-and-key",children:"Get Account, Balance and Key"}),"\n",(0,a.jsx)(t.p,{children:"Once a user logs in, the Web3Auth SDK returns a provider. Since Web3Auth doesn't have a native provider for Tezos, we need to directly use the private\nkey to make the RPC calls."}),"\n",(0,a.jsxs)(t.p,{children:["Using the function, ",(0,a.jsx)(t.code,{children:'web3auth.provider.request({method: "private_key"})'})," from Web3Auth provider, the application can have access to the user's private\nkey. However, we cannot use this key with Tezos EC Curve specific signing functions, hence, we first derive the Tezos Key using the\n",(0,a.jsx)(t.code,{children:"getTezosKeyPair()"})," function."]}),"\n",(0,a.jsxs)(t.p,{children:["On the underhood, it uses the ",(0,a.jsx)(t.code,{children:"tezosCrypto.utils.seedToKeyPair()"})," function, where we need to pass the ",(0,a.jsx)(t.code,{children:"hex2buf(privateKey)"}),", ie. the hexadecimal to\nbyteArray converted private key. We can use the returned private key pair from this and use on Tezos transactions."]}),"\n",(0,a.jsx)(t.pre,{children:(0,a.jsx)(t.code,{className:"language-tsx",children:'import * as tezosCrypto from "@tezos-core-tools/crypto-utils";\nimport { IProvider } from "@web3auth/base";\nimport { TezosToolkit } from "@taquito/taquito";\nimport { hex2buf } from "@taquito/utils";\nimport { InMemorySigner } from "@taquito/signer";\n\nconst tezos = new TezosToolkit("https://ithacanet.ecadinfra.com");\n/*\n  Use code from the above Initializing Provider here\n*/\n\n// web3authProvider is web3auth.provider from above\nconst privateKey = await web3authProvider.request({ method: "private_key" });\n\n// derive the Tezos Key Pair from the private key\nconst keyPair = tezosCrypto.utils.seedToKeyPair(hex2buf(privateKey));\n\n// keyPair.pkh is the account address.\nconst account = keyPair?.pkh;\n\n// get balance of the account\nconst balance = await tezos.tz.getBalance(account);\n'})}),"\n",(0,a.jsx)(t.h2,{id:"send-transaction",children:"Send Transaction"}),"\n",(0,a.jsx)(t.pre,{children:(0,a.jsx)(t.code,{className:"language-tsx",children:'import * as tezosCrypto from "@tezos-core-tools/crypto-utils";\nimport { IProvider } from "@web3auth/base";\nimport { TezosToolkit } from "@taquito/taquito";\nimport { hex2buf } from "@taquito/utils";\nimport { InMemorySigner } from "@taquito/signer";\n\nconst tezos = new TezosToolkit("https://ithacanet.ecadinfra.com");\n/*\n  Use code from the above Initializing Provider here\n*/\n\n// web3authProvider is web3auth.provider from above\nconst privateKey = await web3authProvider.request({ method: "private_key" });\n\n// derive the Tezos Key Pair from the private key\nconst keyPair = tezosCrypto.utils.seedToKeyPair(hex2buf(privateKey));\n\n// keyPair.pkh is the account address.\nconst account = keyPair?.pkh;\n\n// use TacoInfra\'s RemoteSigner for better security on mainnet..\ntezos.setSignerProvider(await InMemorySigner.fromSecretKey(keyPair?.sk));\n\n// example address.\nconst address = "tz1dHzQTA4PGBk2igZ3kBrDsVXuvHdN8kvTQ";\n\n// NOTE: The account which is used to send tezos should have some balance for this transaction to go through.\n// If there is no balance, then you will receive an error - "implicit.empty_implicit_contract"\n// To solve this error, use a faucet account to send some tzs to the account.\n// Alternate solution:\n// 1. Use this link: https://tezostaquito.io/docs/making_transfers#transfer-from-an-implicit-tz1-address-to-a-tz1-address\n// 2. Modify the address and use the pkh key extracted from web3auth seed in the live code editor and click run code.\n// 3. Check balance in the account and have some fun.\nconst op = await tezos.wallet\n  .transfer({\n    to: address,\n    amount: 0.00005,\n  })\n  .send();\n\nconst txRes = await op.confirmation();\n'})}),"\n",(0,a.jsx)(t.h2,{id:"sign-message",children:"Sign Message"}),"\n",(0,a.jsx)(t.pre,{children:(0,a.jsx)(t.code,{className:"language-tsx",children:'import * as tezosCrypto from "@tezos-core-tools/crypto-utils";\nimport { IProvider } from "@web3auth/base";\nimport { TezosToolkit } from "@taquito/taquito";\nimport { hex2buf } from "@taquito/utils";\nimport { InMemorySigner } from "@taquito/signer";\n\nconst tezos = new TezosToolkit("https://ithacanet.ecadinfra.com");\n// List of available RPC Nodes -- https://tezostaquito.io/docs/rpc_nodes\n\n/*\n  Use code from the above Initializing Provider here\n*/\n\n// web3authProvider is web3auth.provider from above\nconst privateKey = await web3authProvider.request({ method: "private_key" });\n// derive the Tezos Key Pair from the private key\nconst keyPair = tezosCrypto.utils.seedToKeyPair(hex2buf(privateKey));\n\nconst signer = new InMemorySigner(keyPair.sk);\nconst message = "0x47173285a8d7341e5e972fc677286384f802f8ef42a5ec5f03bbfa254cb01fad";\nconst signature = await signer.sign(message);\n'})})]})}function b(e={}){const{wrapper:t}={...(0,o.a)(),...e.components};return t?(0,a.jsx)(t,{...e,children:(0,a.jsx)(m,{...e})}):m(e)}},85162:(e,t,n)=>{n.d(t,{Z:()=>i});n(67294);var a=n(36905);const o={tabItem:"tabItem_Ymn6"};var r=n(85893);function i(e){let{children:t,hidden:n,className:i}=e;return(0,r.jsx)("div",{role:"tabpanel",className:(0,a.Z)(o.tabItem,i),hidden:n,children:t})}},74866:(e,t,n)=>{n.d(t,{Z:()=>k});var a=n(67294),o=n(36905),r=n(12466),i=n(16550),s=n(20469),c=n(91980),l=n(67392),u=n(50012);function d(e){return a.Children.toArray(e).filter((e=>"\n"!==e)).map((e=>{if(!e||(0,a.isValidElement)(e)&&function(e){const{props:t}=e;return!!t&&"object"==typeof t&&"value"in t}(e))return e;throw new Error(`Docusaurus error: Bad <Tabs> child <${"string"==typeof e.type?e.type:e.type.name}>: all children of the <Tabs> component should be <TabItem>, and every <TabItem> should have a unique "value" prop.`)}))?.filter(Boolean)??[]}function h(e){const{values:t,children:n}=e;return(0,a.useMemo)((()=>{const e=t??function(e){return d(e).map((e=>{let{props:{value:t,label:n,attributes:a,default:o}}=e;return{value:t,label:n,attributes:a,default:o}}))}(n);return function(e){const t=(0,l.l)(e,((e,t)=>e.value===t.value));if(t.length>0)throw new Error(`Docusaurus error: Duplicate values "${t.map((e=>e.value)).join(", ")}" found in <Tabs>. Every value needs to be unique.`)}(e),e}),[t,n])}function p(e){let{value:t,tabValues:n}=e;return n.some((e=>e.value===t))}function m(e){let{queryString:t=!1,groupId:n}=e;const o=(0,i.k6)(),r=function(e){let{queryString:t=!1,groupId:n}=e;if("string"==typeof t)return t;if(!1===t)return null;if(!0===t&&!n)throw new Error('Docusaurus error: The <Tabs> component groupId prop is required if queryString=true, because this value is used as the search param name. You can also provide an explicit value such as queryString="my-search-param".');return n??null}({queryString:t,groupId:n});return[(0,c._X)(r),(0,a.useCallback)((e=>{if(!r)return;const t=new URLSearchParams(o.location.search);t.set(r,e),o.replace({...o.location,search:t.toString()})}),[r,o])]}function b(e){const{defaultValue:t,queryString:n=!1,groupId:o}=e,r=h(e),[i,c]=(0,a.useState)((()=>function(e){let{defaultValue:t,tabValues:n}=e;if(0===n.length)throw new Error("Docusaurus error: the <Tabs> component requires at least one <TabItem> children component");if(t){if(!p({value:t,tabValues:n}))throw new Error(`Docusaurus error: The <Tabs> has a defaultValue "${t}" but none of its children has the corresponding value. Available values are: ${n.map((e=>e.value)).join(", ")}. If you intend to show no default tab, use defaultValue={null} instead.`);return t}const a=n.find((e=>e.default))??n[0];if(!a)throw new Error("Unexpected error: 0 tabValues");return a.value}({defaultValue:t,tabValues:r}))),[l,d]=m({queryString:n,groupId:o}),[b,f]=function(e){let{groupId:t}=e;const n=function(e){return e?`docusaurus.tab.${e}`:null}(t),[o,r]=(0,u.Nk)(n);return[o,(0,a.useCallback)((e=>{n&&r.set(e)}),[n,r])]}({groupId:o}),v=(()=>{const e=l??b;return p({value:e,tabValues:r})?e:null})();(0,s.Z)((()=>{v&&c(v)}),[v]);return{selectedValue:i,selectValue:(0,a.useCallback)((e=>{if(!p({value:e,tabValues:r}))throw new Error(`Can't select invalid tab value=${e}`);c(e),d(e),f(e)}),[d,f,r]),tabValues:r}}var f=n(72389);const v={tabList:"tabList__CuJ",tabItem:"tabItem_LNqP"};var g=n(85893);function y(e){let{className:t,block:n,selectedValue:a,selectValue:i,tabValues:s}=e;const c=[],{blockElementScrollPositionUntilNextRender:l}=(0,r.o5)(),u=e=>{const t=e.currentTarget,n=c.indexOf(t),o=s[n].value;o!==a&&(l(t),i(o))},d=e=>{let t=null;switch(e.key){case"Enter":u(e);break;case"ArrowRight":{const n=c.indexOf(e.currentTarget)+1;t=c[n]??c[0];break}case"ArrowLeft":{const n=c.indexOf(e.currentTarget)-1;t=c[n]??c[c.length-1];break}}t?.focus()};return(0,g.jsx)("ul",{role:"tablist","aria-orientation":"horizontal",className:(0,o.Z)("tabs",{"tabs--block":n},t),children:s.map((e=>{let{value:t,label:n,attributes:r}=e;return(0,g.jsx)("li",{role:"tab",tabIndex:a===t?0:-1,"aria-selected":a===t,ref:e=>c.push(e),onKeyDown:d,onClick:u,...r,className:(0,o.Z)("tabs__item",v.tabItem,r?.className,{"tabs__item--active":a===t}),children:n??t},t)}))})}function w(e){let{lazy:t,children:n,selectedValue:o}=e;const r=(Array.isArray(n)?n:[n]).filter(Boolean);if(t){const e=r.find((e=>e.props.value===o));return e?(0,a.cloneElement)(e,{className:"margin-top--md"}):null}return(0,g.jsx)("div",{className:"margin-top--md",children:r.map(((e,t)=>(0,a.cloneElement)(e,{key:t,hidden:e.props.value!==o})))})}function x(e){const t=b(e);return(0,g.jsxs)("div",{className:(0,o.Z)("tabs-container",v.tabList),children:[(0,g.jsx)(y,{...e,...t}),(0,g.jsx)(w,{...e,...t})]})}function k(e){const t=(0,f.Z)();return(0,g.jsx)(x,{...e,children:d(e.children)},String(t))}},11151:(e,t,n)=>{n.d(t,{Z:()=>s,a:()=>i});var a=n(67294);const o={},r=a.createContext(o);function i(e){const t=a.useContext(r);return a.useMemo((function(){return"function"==typeof e?e(t):{...t,...e}}),[t,e])}function s(e){let t;return t=e.disableParentContext?"function"==typeof e.components?e.components(o):e.components||o:i(e.components),a.createElement(r.Provider,{value:t},e.children)}}}]);