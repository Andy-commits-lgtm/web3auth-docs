"use strict";(self.webpackChunkweb3auth_docs=self.webpackChunkweb3auth_docs||[]).push([[71880],{69058:(e,t,o)=>{o.d(t,{ZP:()=>p});var i=o(85893),r=o(11151),s=o(66827);const n=[{name:"",description:"Bring your own custom providers with Web3Auth, using one of the custom login schemes (either via JWT or ECDSA signatures). This way, your users can still use your existing login provider. The application should follow the JWT specification and use JWKS for signing the JWT, whose public keys are exposed by an endpoint.",tiles:[{key:"jwt",title:"JSON Web Token",icon:"logo-jwt.png",path:"/auth-provider-setup/byo-jwt-providers"},{key:"jose",title:"Jose (JWT)",icon:"logo-jwt.png",path:"/auth-provider-setup/byo-jwt-providers#using-jose"},{key:"passport-jwt",title:"Passport JWT",icon:"logo-passport.png",path:"/auth-provider-setup/byo-jwt-providers#using-passport-jwt"},{key:"custom-ecdsa",title:"Custom ECDSA",icon:"logo-ecdsa.png",path:"/auth-provider-setup/byo-jwt-providers#using-jsonwebtoken"}]}];function a(e){return(0,i.jsx)(s.Z,{tileGroups:n})}function p(e={}){const{wrapper:t}={...(0,r.a)(),...e.components};return t?(0,i.jsx)(t,{...e,children:(0,i.jsx)(a,{...e})}):a()}},58545:(e,t,o)=>{o.d(t,{ZP:()=>p});var i=o(85893),r=o(11151),s=o(66827);const n=[{name:"",description:"",tiles:[{key:"auth0",title:"Auth0",icon:"logo-auth0.png",path:"/auth-provider-setup/federated-identity-providers#auth0"},{key:"aws-cognito",title:"AWS Cognito",icon:"logo-aws-cognito.png",path:"/auth-provider-setup/federated-identity-providers#aws-cognito"},{key:"firebase",title:"Firebase",icon:"logo-firebase.png",path:"/auth-provider-setup/federated-identity-providers#firebase"}]}];function a(e){return(0,i.jsx)(s.Z,{tileGroups:n})}function p(e={}){const{wrapper:t}={...(0,r.a)(),...e.components};return t?(0,i.jsx)(t,{...e,children:(0,i.jsx)(a,{...e})}):a()}},48208:(e,t,o)=>{o.d(t,{ZP:()=>p});var i=o(85893),r=o(11151),s=o(66827);const n=[{name:"",description:"",tiles:[{key:"twitter",title:"Twitter",icon:"logo-twitter.png",path:"/auth-provider-setup/social-providers/twitter"},{key:"google",title:"Google",icon:"logo-google.png",path:"/auth-provider-setup/social-providers/google"},{key:"facebook",title:"Facebook",icon:"logo-facebook.png",path:"/auth-provider-setup/social-providers/facebook"},{key:"twitch",title:"Twitch",icon:"logo-twitch.png",path:"/auth-provider-setup/social-providers/twitch"},{key:"discord",title:"Discord",icon:"logo-discord.png",path:"/auth-provider-setup/social-providers/discord"},{key:"apple",title:"Apple",icon:"logo-apple.png",path:"/auth-provider-setup/social-providers/apple"},{key:"linkedin",title:"Linkedin",icon:"logo-linkedin.png",path:"/auth-provider-setup/social-providers/linkedin"},{key:"github",title:"GitHub",icon:"logo-github.png",path:"/auth-provider-setup/social-providers/github"},{key:"line",title:"Line",icon:"logo-line.png",path:"/auth-provider-setup/social-providers/line"},{key:"weibo",title:"Weibo",icon:"logo-weibo.png",path:"/auth-provider-setup/social-providers/weibo"},{key:"kakao",title:"KaKao",icon:"logo-kakao.png",path:"/auth-provider-setup/social-providers/kakao"},{key:"baidu",title:"Baidu",icon:"logo-baidu.png",path:"/auth-provider-setup/social-providers/baidu"},{key:"bitbucket",title:"Bitbucket",icon:"logo-bitbucket.png",path:"/auth-provider-setup/social-providers/bitbucket"},{key:"microsoft",title:"Microsoft",icon:"logo-microsoft.png",path:"/auth-provider-setup/social-providers/microsoft"},{key:"renren",title:"RenRen",icon:"logo-renren.png",path:"/auth-provider-setup/social-providers/renren"},{key:"slack",title:"Slack",icon:"logo-slack.png",path:"/auth-provider-setup/social-providers/slack"},{key:"spotify",title:"Spotify",icon:"logo-spotify.png",path:"/auth-provider-setup/social-providers/spotify"},{key:"vkontakte",title:"vKontakte",icon:"logo-vkontakte.png",path:"/auth-provider-setup/social-providers/vkontakte"},{key:"yandex",title:"Yandex",icon:"logo-yandex.png",path:"/auth-provider-setup/social-providers/yandex"}]}];function a(e){return(0,i.jsx)(s.Z,{tileGroups:n})}function p(e={}){const{wrapper:t}={...(0,r.a)(),...e.components};return t?(0,i.jsx)(t,{...e,children:(0,i.jsx)(a,{...e})}):a()}},78695:(e,t,o)=>{o.r(t),o.d(t,{assets:()=>u,contentTitle:()=>d,default:()=>g,frontMatter:()=>p,metadata:()=>l,toc:()=>c});var i=o(85893),r=o(11151),s=o(69058),n=o(58545),a=o(48208);const p={title:"Auth Provider Setup",image:"images/docs-meta-cards/documentation-card.png",displayed_sidebar:"docs",description:"Auth Provider Setup | Documentation - Web3Auth"},d=void 0,l={id:"auth-provider-setup/auth-provider-setup",title:"Auth Provider Setup",description:"Auth Provider Setup | Documentation - Web3Auth",source:"@site/docs/auth-provider-setup/auth-provider-setup.mdx",sourceDirName:"auth-provider-setup",slug:"/auth-provider-setup/",permalink:"/docs/auth-provider-setup/",draft:!1,unlisted:!1,editUrl:"https://github.com/web3auth/web3auth-docs/edit/master/docs/auth-provider-setup/auth-provider-setup.mdx",tags:[],version:"current",frontMatter:{title:"Auth Provider Setup",image:"images/docs-meta-cards/documentation-card.png",displayed_sidebar:"docs",description:"Auth Provider Setup | Documentation - Web3Auth"},sidebar:"docs",previous:{title:"Roles and Permissions",permalink:"/docs/dashboard-setup/roles-and-permissions"},next:{title:"Create Verifiers",permalink:"/docs/auth-provider-setup/verifiers"}},u={},c=[{value:"Supported Auth Providers",id:"supported-auth-providers",level:2},{value:"Social",id:"social",level:3},{value:"Federated / Identity Providers",id:"federated--identity-providers",level:3},{value:"Bring your own Custom Login Providers",id:"bring-your-own-custom-login-providers",level:3}];function h(e){const t={a:"a",admonition:"admonition",code:"code",em:"em",h2:"h2",h3:"h3",li:"li",p:"p",strong:"strong",ul:"ul",...(0,r.a)(),...e.components};return(0,i.jsxs)(i.Fragment,{children:[(0,i.jsxs)(t.p,{children:["Auth Provider setup refers to the capability of creating a ",(0,i.jsx)(t.strong,{children:"verifier"}),"(",(0,i.jsx)(t.em,{children:"a way to do custom authentication"}),") with Web3Auth. By default, Web3Auth comes\nwith a set of default verifiers that you can use out of the box."]}),"\n",(0,i.jsx)(t.admonition,{title:"Caveat with Default Verifiers",type:"info",children:(0,i.jsxs)(t.ul,{children:["\n",(0,i.jsx)(t.li,{children:(0,i.jsx)(t.strong,{children:"Migration from Default Verifiers to Custom Verifiers is not possible."})}),"\n",(0,i.jsxs)(t.li,{children:["The default verifier is not suitable for all use cases. For example, if you are using a custom JWT provider, you will need to use the\n",(0,i.jsx)(t.a,{href:"/sdk/pnp/web/no-modal/",children:(0,i.jsx)(t.code,{children:"Web3Auth Plug and Play No Modal SDK"})}),", since the Web3Auth Modal will only help you configure the social logins present\nwithin the Modal UI."]}),"\n",(0,i.jsxs)(t.li,{children:[(0,i.jsx)(t.strong,{children:"Aggregation of the default verifier is not possible."})," For example, if you want to aggregate Google and Email Passwordless, or any two/more social\nproviders, you will need to create an Aggregate Verifier, which is not possible if you start with:","\n",(0,i.jsxs)(t.ul,{children:["\n",(0,i.jsx)(t.li,{children:"a Default Verifier"}),"\n",(0,i.jsx)(t.li,{children:"or, Social Login Providers"}),"\n",(0,i.jsx)(t.li,{children:"or, Custom Providers"}),"\n"]}),"\n"]}),"\n"]})}),"\n",(0,i.jsx)(t.h2,{id:"supported-auth-providers",children:"Supported Auth Providers"}),"\n",(0,i.jsx)(t.h3,{id:"social",children:"Social"}),"\n",(0,i.jsx)(a.ZP,{}),"\n",(0,i.jsx)(t.h3,{id:"federated--identity-providers",children:"Federated / Identity Providers"}),"\n",(0,i.jsx)(n.ZP,{}),"\n",(0,i.jsx)(t.h3,{id:"bring-your-own-custom-login-providers",children:"Bring your own Custom Login Providers"}),"\n",(0,i.jsx)(s.ZP,{}),"\n",(0,i.jsxs)(t.p,{children:["There are some nuances with certain login providers, so don't hesitate to get in touch with us on ",(0,i.jsx)(t.a,{href:"https://discord.gg/web3auth",children:"Discord"})," or simply\npost your query on the ",(0,i.jsx)(t.a,{href:"https://web3auth.io/community/c/feature-request/14",children:"Community Support Forum"})," and we will take care of things from there."]})]})}function g(e={}){const{wrapper:t}={...(0,r.a)(),...e.components};return t?(0,i.jsx)(t,{...e,children:(0,i.jsx)(h,{...e})}):h(e)}},66827:(e,t,o)=>{o.d(t,{Z:()=>a});var i=o(33692),r=o(44996);const s={tileGroup:"tileGroup_L0V_",tileGroupContent:"tileGroupContent_e3oe",tile:"tile_cD2P",tileIcon:"tileIcon_Ir17",tileText:"tileText_xjfR"};var n=o(85893);function a(e){const{tileGroups:t}=e;return(0,n.jsx)(n.Fragment,{children:t.map((e=>(0,n.jsxs)("div",{className:s.tileGroup,children:[(0,n.jsx)("h3",{children:e.name}),(0,n.jsx)("p",{children:e.description}),(0,n.jsx)("div",{className:s.tileGroupContent,children:e.tiles.map((e=>(0,n.jsxs)(i.Z,{className:s.tile,to:e.path,children:[e.icon?(0,n.jsx)("img",{className:s.tileIcon,src:(0,r.Z)(`/content-hub/${e.icon}`),alt:e.icon}):(0,n.jsx)("div",{}),(0,n.jsx)("div",{className:s.tileText,children:e.title})]},e.key)))})]},e.name)))})}},11151:(e,t,o)=>{o.d(t,{Z:()=>a,a:()=>n});var i=o(67294);const r={},s=i.createContext(r);function n(e){const t=i.useContext(s);return i.useMemo((function(){return"function"==typeof e?e(t):{...t,...e}}),[t,e])}function a(e){let t;return t=e.disableParentContext?"function"==typeof e.components?e.components(r):e.components||r:n(e.components),i.createElement(s.Provider,{value:t},e.children)}}}]);