"use strict";(self.webpackChunkweb3auth_docs=self.webpackChunkweb3auth_docs||[]).push([[50610],{70284:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>l,contentTitle:()=>a,default:()=>u,frontMatter:()=>s,metadata:()=>c,toc:()=>h});var i=n(85893),r=n(11151),o=n(30831);const s={title:"Using Web3Auth Core Kit tKey SDK in a React Application",image:"content-hub/guides/banners/tkey.png",description:"Learn how to use Web3Auth Core Kit tKey SDK in your React Application",type:"guide",tags:["web","tkey","google","custom authentication","whitelabel","react","ethereum"],date:"August 10, 2022",author:"Web3Auth Team",order:2,communityPortalTopicId:64},a=void 0,c={type:"mdx",permalink:"/docs/content-hub/guides/tkey",source:"@site/src/pages/content-hub/guides/tkey.mdx",title:"Using Web3Auth Core Kit tKey SDK in a React Application",description:"Learn how to use Web3Auth Core Kit tKey SDK in your React Application",frontMatter:{title:"Using Web3Auth Core Kit tKey SDK in a React Application",image:"content-hub/guides/banners/tkey.png",description:"Learn how to use Web3Auth Core Kit tKey SDK in your React Application",type:"guide",tags:["web","tkey","google","custom authentication","whitelabel","react","ethereum"],date:"August 10, 2022",author:"Web3Auth Team",order:2,communityPortalTopicId:64},unlisted:!1},l={},h=[{value:"Quick Start",id:"quick-start",level:2},{value:"Prerequisites",id:"prerequisites",level:2},{value:"Setup",id:"setup",level:2},{value:"Setup your Google App",id:"setup-your-google-app",level:3},{value:"Setup your Web3Auth Dashboard",id:"setup-your-web3auth-dashboard",level:3},{value:"Setting up your React Project",id:"setting-up-your-react-project",level:3},{value:"Setting up the service worker",id:"setting-up-the-service-worker",level:3},{value:"Installation",id:"installation",level:2},{value:"Initialization",id:"initialization",level:2},{value:"Triggering Login using Service Provider",id:"triggering-login-using-service-provider",level:2},{value:"Initialize and Reconstruct tKey",id:"initialize-and-reconstruct-tkey",level:2},{value:"Generating a new share with a password",id:"generating-a-new-share-with-a-password",level:2},{value:"Set up Recovery Flow",id:"set-up-recovery-flow",level:2},{value:"Interacting with Blockchain",id:"interacting-with-blockchain",level:2},{value:"Example code",id:"example-code",level:2},{value:"Questions?",id:"questions",level:2}];function d(e){const t={a:"a",admonition:"admonition",blockquote:"blockquote",code:"code",em:"em",h2:"h2",h3:"h3",img:"img",li:"li",ol:"ol",p:"p",pre:"pre",strong:"strong",ul:"ul",...(0,r.a)(),...e.components};return(0,i.jsxs)(i.Fragment,{children:[(0,i.jsx)(o.Z,{title:"Using Web3Auth Core Kit tKey SDK in a React Application",description:"Learn how to use Web3Auth Core Kit tKey SDK in your React Application with Google as the authentication method.",image:"https://web3auth.io/docs/content-hub/guides/banners/tkey.png",slug:"/content-hub/guides/tkey"}),"\n",(0,i.jsxs)(t.p,{children:["This guide will help you make a react application using Web3Auth Core Kit tKey SDK, covering the basic functionality on how to use it and get started\nquickly. For a detailed reference, you can refer to the ",(0,i.jsx)(t.a,{href:"/sdk/core-kit/tkey",children:"Web3Auth Core Kit tKey SDK Reference"}),"."]}),"\n",(0,i.jsxs)(t.p,{children:[(0,i.jsx)(t.strong,{children:"Live Demo:"})," ",(0,i.jsx)(t.a,{href:"https://w3a.link/tkey-example",children:"https://w3a.link/tkey-example"})]}),"\n",(0,i.jsx)(t.h2,{id:"quick-start",children:"Quick Start"}),"\n",(0,i.jsx)(t.pre,{children:(0,i.jsx)(t.code,{className:"language-bash",children:"npx degit Web3Auth/web3auth-core-kit-examples/tkey-web/intrinsic-flow-examples/tkey-popup-flow-example tkey-demo && cd tkey-demo && npm install && npm start\n"})}),"\n",(0,i.jsx)(t.h2,{id:"prerequisites",children:"Prerequisites"}),"\n",(0,i.jsxs)(t.ul,{children:["\n",(0,i.jsx)(t.li,{children:"A basic knowledge of JavaScript and React."}),"\n",(0,i.jsx)(t.li,{children:"Ideal to have a knowledge about service workers in React."}),"\n",(0,i.jsxs)(t.li,{children:["A ",(0,i.jsx)(t.a,{href:"https://console.developers.google.com/",children:"Google Developer"})," account to be used as Login provider for Web3Auth Custom Authentication."]}),"\n",(0,i.jsxs)(t.li,{children:["Create a Web3Auth account on the ",(0,i.jsx)(t.a,{href:"https://dashboard.web3auth.io/",children:"Web3Auth Dashboard"})]}),"\n"]}),"\n",(0,i.jsx)(t.h2,{id:"setup",children:"Setup"}),"\n",(0,i.jsx)(t.h3,{id:"setup-your-google-app",children:"Setup your Google App"}),"\n",(0,i.jsxs)(t.ol,{children:["\n",(0,i.jsxs)(t.li,{children:["\n",(0,i.jsxs)(t.p,{children:["Follow Google\u2019s instructions to ",(0,i.jsx)(t.a,{href:"https://support.google.com/cloud/answer/6158849?hl=en",children:"set up an OAuth 2.0 app."})]}),"\n"]}),"\n",(0,i.jsxs)(t.li,{children:["\n",(0,i.jsxs)(t.p,{children:['Add your application\'s redirect URI into the "Authorized redirect URIs" field. This is the URL that Google will redirect to after authentication.\n',(0,i.jsx)(t.code,{children:"http://localhost:3000/serviceworker/redirect"})]}),"\n",(0,i.jsx)(t.p,{children:(0,i.jsx)(t.img,{alt:"Google OAuth2.0 App Dashboard",src:n(37392).Z+"",width:"3104",height:"1974"})}),"\n"]}),"\n",(0,i.jsxs)(t.li,{children:["\n",(0,i.jsxs)(t.p,{children:["Obtain the OAuth ",(0,i.jsx)(t.code,{children:"Client ID"})," from your ",(0,i.jsx)(t.a,{href:"https://console.developers.google.com/",children:"App on the Google Developer dashboard"})]}),"\n"]}),"\n"]}),"\n",(0,i.jsx)(t.h3,{id:"setup-your-web3auth-dashboard",children:"Setup your Web3Auth Dashboard"}),"\n",(0,i.jsxs)(t.ul,{children:["\n",(0,i.jsxs)(t.li,{children:["\n",(0,i.jsxs)(t.p,{children:["Create a ",(0,i.jsx)(t.strong,{children:"Verifier"})," from the ",(0,i.jsx)(t.strong,{children:"Custom Auth"})," Section of the ",(0,i.jsx)(t.a,{href:"https://dashboard.web3auth.io/",children:"Web3Auth Developer Dashboard"})," with following\nconfiguration:"]}),"\n",(0,i.jsxs)(t.ul,{children:["\n",(0,i.jsxs)(t.li,{children:["Choose a name of your choice for the verifier identifier. ",(0,i.jsx)(t.code,{children:"eg. google-core-verifier-ssv"})]}),"\n",(0,i.jsxs)(t.li,{children:["Select environment: ",(0,i.jsx)(t.code,{children:"testnet"}),", ",(0,i.jsx)(t.code,{children:"mainnet"}),", ",(0,i.jsx)(t.code,{children:"aqua"}),", or ",(0,i.jsx)(t.code,{children:"cyan"})," as per your requirement."]}),"\n",(0,i.jsxs)(t.li,{children:["Select ",(0,i.jsx)(t.code,{children:"Google"})," from the ",(0,i.jsx)(t.strong,{children:"Login Provider"}),". ",(0,i.jsx)(t.img,{alt:"Google - Login Providers list on Web3Auth Dashboard",src:n(59611).Z+"",width:"3276",height:"2784"})]}),"\n",(0,i.jsxs)(t.li,{children:["Paste the ",(0,i.jsx)(t.strong,{children:"Client ID"})," from the Google App(above) to the ",(0,i.jsx)(t.code,{children:"Client ID"})," field.\n",(0,i.jsx)(t.img,{alt:"Google Client ID on Web3Auth Dashboard",src:n(60571).Z+"",width:"3220",height:"2764"})]}),"\n",(0,i.jsxs)(t.li,{children:["Click on ",(0,i.jsx)(t.code,{children:"Create"})," button to create your verifier. It may take up to 10-20 minutes to deploy verifier on ",(0,i.jsx)(t.em,{children:"testnet"}),". You'll receive an email once\nit's complete."]}),"\n"]}),"\n"]}),"\n",(0,i.jsxs)(t.li,{children:["\n",(0,i.jsxs)(t.p,{children:["You will require the ",(0,i.jsx)(t.code,{children:"verifierName"})," of the newly created verifier."]}),"\n"]}),"\n"]}),"\n",(0,i.jsx)(t.h3,{id:"setting-up-your-react-project",children:"Setting up your React Project"}),"\n",(0,i.jsx)(t.p,{children:"We will need to use service workers while implementing the tKey SDK to handle the redirect login flow. This can be done by using a progressive react\napplication."}),"\n",(0,i.jsx)(t.p,{children:"For a new project, get started with the following command:"}),"\n",(0,i.jsx)(t.pre,{children:(0,i.jsx)(t.code,{className:"language-bash",children:"npx create-react-app tkey-demo --template cra-template-pwa-typescript\ncd tkey-demo\n"})}),"\n",(0,i.jsx)(t.p,{children:"For an existing project, add a service worker."}),"\n",(0,i.jsx)(t.h3,{id:"setting-up-the-service-worker",children:"Setting up the service worker"}),"\n",(0,i.jsx)(t.p,{children:"Further, we need to setup the service worker according to our needs of the project, i.e handling the redirect login flow. Service worker basically\nsits between the frontend application, browser and the network. For the simplicity of this guide, we have added a boilerplate code. The easiest way to\ndo that is as follows"}),"\n",(0,i.jsx)(t.pre,{children:(0,i.jsx)(t.code,{className:"language-bash",children:"mkdir public/serviceworker\nwget https://github.com/Web3Auth/web3auth-core-kit-examples//blob/main/tkey/tkey-react-popup-example/public/serviceworker/sw.js -O public/serviceworker/sw.js\n"})}),"\n",(0,i.jsxs)(t.blockquote,{children:["\n",(0,i.jsxs)(t.p,{children:["For polyfill issues and BigInt issue, please checkout the ",(0,i.jsx)(t.a,{href:"/troubleshooting/webpack-issues",children:"troubleshooting page"}),"."]}),"\n"]}),"\n",(0,i.jsx)(t.h2,{id:"installation",children:"Installation"}),"\n",(0,i.jsxs)(t.p,{children:["We will be starting with a 2/2 flow, i.e ",(0,i.jsx)(t.code,{children:"ShareA: Social Shares"})," and ",(0,i.jsx)(t.code,{children:"ShareB: Device Share"})," and later will allow users to add more shares of tKey. i.e\n",(0,i.jsx)(t.code,{children:"2/n"})]}),"\n",(0,i.jsxs)(t.p,{children:["For this project, we will be using ",(0,i.jsx)(t.code,{children:"@tkey/default"})," that contains all the needed functionalities of the tKey SDK."]}),"\n",(0,i.jsx)(t.pre,{children:(0,i.jsx)(t.code,{className:"language-bash",children:"npm install --save @tkey/default @tkey/web-storage @tkey/security-questions\n"})}),"\n",(0,i.jsxs)(t.ul,{children:["\n",(0,i.jsxs)(t.li,{children:[(0,i.jsx)(t.code,{children:"@tkey/web-storage"}),": This module is used to store the Device Share and used in the 2/2 flow. If you're building for Web, We recommed you to start\nwith this module. i.e ",(0,i.jsx)(t.code,{children:"2/2"}),", but there are other modules to achieve the same."]}),"\n",(0,i.jsxs)(t.li,{children:[(0,i.jsx)(t.code,{children:"@tkey/security-questions"}),": This module is used to create a ",(0,i.jsx)(t.code,{children:"Share C: Backup Share"})," allowing ",(0,i.jsx)(t.code,{children:"2/3"})," flows. This is what we have chosen for this\nguide, but there are other ways to achieve the same."]}),"\n"]}),"\n",(0,i.jsxs)(t.p,{children:["For a detailed reference, you can refer to the ",(0,i.jsx)(t.a,{href:"/sdk/core-kit/tkey",children:"Web3Auth Core Kit tKey SDK Reference"}),"."]}),"\n",(0,i.jsx)(t.h2,{id:"initialization",children:"Initialization"}),"\n",(0,i.jsx)(t.p,{children:"After Installation, the next step to use Web3Auth Core Kit tKey SDK is to Initialize the SDK."}),"\n",(0,i.jsx)(t.p,{children:(0,i.jsx)(t.code,{children:"src/tkey.ts"})}),"\n",(0,i.jsx)(t.pre,{children:(0,i.jsx)(t.code,{className:"language-tsx",children:'import ThresholdKey from "@tkey/default";\nimport WebStorageModule from "@tkey/web-storage";\nimport SecurityQuestionsModule from "@tkey/security-questions";\n\n// Configuration of Service Provider\nconst customAuthArgs = {\n  baseUrl: `${window.location.origin}/serviceworker`,\n  network: "sapphire_mainnet", // based on the verifier network.\n};\n// Configuration of Modules\nconst webStorageModule = new WebStorageModule();\nconst securityQuestionsModule = new SecurityQuestionsModule();\n\n// Instantiation of tKey\nexport const tKey = new ThresholdKey({\n  modules: {\n    webStorage: webStorageModule,\n    securityQuestions: securityQuestionsModule,\n  },\n  customAuthArgs: customAuthArgs as any,\n});\n'})}),"\n",(0,i.jsx)(t.p,{children:(0,i.jsx)(t.code,{children:"src/App.tsx"})}),"\n",(0,i.jsx)(t.pre,{children:(0,i.jsx)(t.code,{className:"language-tsx",children:'import { useEffect } from "react";\nimport { tKey } from "./tkey";\n\nfunction App() {\n  // Init Service Provider inside the useEffect Method\n  useEffect(() => {\n    const init = async () => {\n      // Initialization of Service Provider\n      try {\n        await (tKey.serviceProvider as any).init();\n      } catch (error) {\n        console.error(error);\n      }\n    };\n    init();\n  }, []);\n}\n'})}),"\n",(0,i.jsx)(t.h2,{id:"triggering-login-using-service-provider",children:"Triggering Login using Service Provider"}),"\n",(0,i.jsxs)(t.p,{children:["Once you have initialized the Web3Auth Service Provider, you're ready to trigger the login process. This is a needed step since this will generate a\nprivate key which will be needed by the tKey to generate it's share. This is done by calling the ",(0,i.jsx)(t.code,{children:"triggerLogin()"})," function within the ",(0,i.jsx)(t.code,{children:"tKey"}),"\ninstance's of ",(0,i.jsx)(t.code,{children:"serviceProvider"})," property."]}),"\n",(0,i.jsx)(t.pre,{children:(0,i.jsx)(t.code,{className:"language-tsx",children:'const triggerLogin = async () => {\n  try {\n    // Triggering Login using Service Provider ==> opens the popup\n    const loginResponse = await (tKey.serviceProvider as any).triggerLogin({\n      typeOfLogin: "google", // type of login\n      verifier: "your-web3auth-verifier-name",\n      clientId: "your-google-client-id",\n    });\n  } catch (error) {\n    console.log(error);\n  }\n};\n'})}),"\n",(0,i.jsx)(t.h2,{id:"initialize-and-reconstruct-tkey",children:"Initialize and Reconstruct tKey"}),"\n",(0,i.jsx)(t.p,{children:"Once you have triggered the login process, you're ready to initialize the tKey. This will generate you a Threshold Key corresponding to your login\nprovider. The below code shows how the device share is added to reconstruct the final private key in the frontend."}),"\n",(0,i.jsx)(t.pre,{children:(0,i.jsx)(t.code,{className:"language-tsx",children:'const initializeNewKey = async () => {\n  try {\n    await triggerLogin(); // Calls the triggerLogin() function above\n    // Initialization of tKey\n    await tKey.initialize(); // 1/2 flow\n    // Gets the deviceShare\n    try {\n      await (tKey.modules.webStorage as any).inputShareFromWebStorage(); // 2/2 flow\n    } catch (error) {\n      console.error(error);\n      // highlight-next-line\n      await recoverShare(); // <-- We\'ll address this later in this guide.\n    }\n\n    // Checks the requiredShares to reconstruct the tKey,\n    // starts from 2 by default and each of the above share reduce it by one.\n    const { requiredShares } = tKey.getKeyDetails();\n    if (requiredShares <= 0) {\n      const reconstructedKey = await tKey.reconstructKey();\n      console.log("Private Key: " + reconstructedKey.privKey.toString("hex"));\n      // This private key will be used to make blockchain calls.\n    }\n  } catch (error) {\n    console.error(error, "caught");\n  }\n};\n'})}),"\n",(0,i.jsx)(t.h2,{id:"generating-a-new-share-with-a-password",children:"Generating a new share with a password"}),"\n",(0,i.jsxs)(t.p,{children:["Generate a new share(",(0,i.jsx)(t.code,{children:"ShareC: Backup Share"}),") using the security questions module enabling ",(0,i.jsx)(t.code,{children:"2/3"})," flow. One can add more shares from ShareC, but for\nsimplicity, this is what we have chosen for this guide."]}),"\n",(0,i.jsx)(t.admonition,{title:"Mandatory step",type:"warning",children:(0,i.jsx)(t.p,{children:"It is mandatory to set up a backup share; upon losing access to device Share, the user will also lose access to their account."})}),"\n",(0,i.jsx)(t.pre,{children:(0,i.jsx)(t.code,{className:"language-tsx",children:'const generateNewShareWithPassword = async () => {\n  // swal is just a pretty dialog box\n  swal("Enter password (>10 characters)", {\n    content: "input" as any,\n  }).then(async (value) => {\n    if (value.length > 10) {\n      await (tKey.modules.securityQuestions as any).generateNewShareWithSecurityQuestions(value, "whats your password?");\n      swal("Success", "Successfully generated new share with password.", "success");\n    } else {\n      swal("Error", "Password must be > 10 characters", "error");\n    }\n  });\n};\n'})}),"\n",(0,i.jsx)(t.h2,{id:"set-up-recovery-flow",children:"Set up Recovery Flow"}),"\n",(0,i.jsxs)(t.p,{children:["The Recovery flow generates a new share and adds it into the ",(0,i.jsx)(t.code,{children:"WebStorageModule"}),". To do so, we take the answer of the Question from the\n",(0,i.jsx)(t.code,{children:"SecurityQuestionsModule"})," setup in the ",(0,i.jsx)(t.code,{children:"generateNewShareWithPassword()"})," function above."]}),"\n",(0,i.jsx)(t.pre,{children:(0,i.jsx)(t.code,{className:"language-tsx",children:'const recoverShare = async () => {\n  // swal is just a pretty dialog box\n  swal("Enter password (>10 characters)", {\n    content: "input" as any,\n  }).then(async (value) => {\n    if (value.length > 10) {\n      try {\n        await (tKey.modules.securityQuestions as any).inputShareFromSecurityQuestions(value); // 2/2 flow\n        tKey.reconstructKey();\n        const shareStore = await tKey.generateNewShare();\n        await (tKey.modules.webStorage as any).storeDeviceShare(shareStore.newShareStores[1]);\n        swal("Success", "Successfully logged you in with the recovery password.", "success");\n      } catch (error) {\n        swal("Error", (error as any)?.message.toString(), "error");\n        logout();\n      }\n    } else {\n      swal("Error", "Password must be >= 11 characters", "error");\n      logout();\n    }\n  });\n};\n'})}),"\n",(0,i.jsx)(t.h2,{id:"interacting-with-blockchain",children:"Interacting with Blockchain"}),"\n",(0,i.jsxs)(t.p,{children:["Once you have generated the private key, you can use it to make blockchain calls. The key generated by tKey is of type ",(0,i.jsx)(t.code,{children:"secp256k1"}),", which is\ncompatible with EVM-based blockchains like Ethereum, Polygon, and many others that use the same curve. However, you can also convert this key into\nother curves and utilize it. For example, we have a dedicated package for converting this module to the ",(0,i.jsx)(t.code,{children:"ed25519"})," curve for usage in Solana and other\nblockchains that use this curve."]}),"\n",(0,i.jsx)(t.p,{children:"In addition to that, we have dedicated provider packages for EVM and Solana Blockchain libraries. You can check out their respective documentation\nhere:"}),"\n",(0,i.jsxs)(t.ul,{children:["\n",(0,i.jsxs)(t.li,{children:["Getting a Ethereum Provider from tKey: ",(0,i.jsx)(t.a,{href:"/sdk/helper-sdks/providers/evm",children:"Ethereum Provider"})]}),"\n",(0,i.jsxs)(t.li,{children:["Getting a Solana Provider from tKey: ",(0,i.jsx)(t.a,{href:"/sdk/helper-sdks/providers/solana",children:"Solana Provider"})]}),"\n"]}),"\n",(0,i.jsx)(t.admonition,{type:"tip",children:(0,i.jsxs)(t.p,{children:["You can checkout our ",(0,i.jsx)(t.a,{href:"/connect-blockchain",children:"Connect Blockchain"})," documentation which has a detailed guide on how to connect to major blockchains out\nthere."]})}),"\n",(0,i.jsx)(t.h2,{id:"example-code",children:"Example code"}),"\n",(0,i.jsxs)(t.p,{children:["The code for the application we developed in this guide can be found in the\n",(0,i.jsx)(t.a,{href:"https://github.com/Web3Auth/web3auth-core-kit-examples/tree/main/tkey-web/intrinsic-flow-examples/tkey-popup-flow-example",children:"examples repository"}),".\nCheck it out and try running it locally yourself!"]}),"\n",(0,i.jsx)(t.h2,{id:"questions",children:"Questions?"}),"\n",(0,i.jsxs)(t.p,{children:["Ask us on ",(0,i.jsx)(t.a,{href:"https://web3auth.io/community",children:"Web3Auth's Community Support Portal"})]})]})}function u(e={}){const{wrapper:t}={...(0,r.a)(),...e.components};return t?(0,i.jsx)(t,{...e,children:(0,i.jsx)(d,{...e})}):d(e)}},30831:(e,t,n)=>{n.d(t,{Z:()=>o});var i=n(35742),r=n(85893);function o(e){const{title:t,description:n,image:o,slug:s,keywords:a}=e;return(0,r.jsxs)(i.Z,{children:[t?(0,r.jsxs)("title",{children:[t," | Web3Auth "]}):(0,r.jsx)("title",{children:"Documentation | Web3Auth"}),n?(0,r.jsx)("meta",{name:"description",content:n}):(0,r.jsx)("meta",{name:"description",content:"Web3Auth is simple, non-custodial auth infrastructure that enables Web3 wallets and applications to provide seamless user logins for both mainstream and native Web3 users."}),a?a.length>0&&(0,r.jsx)("meta",{name:"keywords",content:`web3auth, blockchain, solana, ethereum, multi party computation, ${a.join(", ")}`}):(0,r.jsx)("meta",{name:"keywords",content:"web3auth, blockchain, web3, web3.js, ethers.js, solana, ethereum, passwordless, passwordless magic link, multi party computation, tkey, torus, web3 auth, auth"}),(0,r.jsx)("meta",{property:"og:site_name",content:"Web3Auth"}),(0,r.jsx)("meta",{property:"og:type",content:"website"}),t?(0,r.jsx)("meta",{property:"og:title",content:t}):(0,r.jsx)("meta",{property:"og:title",content:"Documentation | Web3Auth"}),n?(0,r.jsx)("meta",{property:"og:description",content:n}):(0,r.jsx)("meta",{property:"og:description",content:"Web3Auth is simple, non-custodial auth infrastructure that enables Web3 wallets and applications to provide seamless user logins for both mainstream and native Web3 users."}),s?(0,r.jsx)("meta",{property:"og:url",content:`https://web3auth.io/docs${s}`}):(0,r.jsx)("meta",{property:"og:url",content:"https://web3auth.io/docs"}),o?(0,r.jsx)("meta",{property:"og:image",content:o}):(0,r.jsx)("meta",{property:"og:image",content:"http://web3auth.io/docs/images/docs-meta-cards/documentation-card.png"}),(0,r.jsx)("meta",{name:"twitter:card",content:"summary_large_image"}),(0,r.jsx)("meta",{name:"twitter:site",content:"@Web3Auth"}),(0,r.jsx)("meta",{name:"twitter:creator",content:"@Web3Auth"}),o?(0,r.jsx)("meta",{name:"twitter:image",content:o}):(0,r.jsx)("meta",{name:"twitter:image",content:"http://web3auth.io/docs/images/docs-meta-cards/documentation-card.png"}),t?(0,r.jsx)("meta",{itemProp:"name",content:t}):(0,r.jsx)("meta",{itemProp:"name",content:"Documentation | Web3Auth"}),n?(0,r.jsx)("meta",{itemProp:"description",content:n}):(0,r.jsx)("meta",{itemProp:"description",content:"Web3Auth is simple, non-custodial auth infrastructure that enables Web3 wallets and applications to provide seamless user logins for both mainstream and native Web3 users."}),o?(0,r.jsx)("meta",{itemProp:"image",content:o}):(0,r.jsx)("meta",{itemProp:"image",content:"http://web3auth.io/docs/images/docs-meta-cards/documentation-card.png"}),(0,r.jsx)("meta",{name:"author",content:"Web3Auth"})]})}},37392:(e,t,n)=>{n.d(t,{Z:()=>i});const i=n.p+"assets/images/google-app-redirect-uri-5de760ce07053974b124ec811e21f5fc.png"},60571:(e,t,n)=>{n.d(t,{Z:()=>i});const i=n.p+"assets/images/google-verifier-110bc264fddbbea4a47044e81e18f27f.png"},59611:(e,t,n)=>{n.d(t,{Z:()=>i});const i=n.p+"assets/images/login-providers-list-a7226c97c4c45f24c44ec4523e92fa93.png"},11151:(e,t,n)=>{n.d(t,{Z:()=>a,a:()=>s});var i=n(67294);const r={},o=i.createContext(r);function s(e){const t=i.useContext(o);return i.useMemo((function(){return"function"==typeof e?e(t):{...t,...e}}),[t,e])}function a(e){let t;return t=e.disableParentContext?"function"==typeof e.components?e.components(r):e.components||r:s(e.components),i.createElement(o.Provider,{value:t},e.children)}}}]);