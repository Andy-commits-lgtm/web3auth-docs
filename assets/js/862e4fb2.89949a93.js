"use strict";(self.webpackChunkweb3auth_docs=self.webpackChunkweb3auth_docs||[]).push([[24968],{2324:(e,n,t)=>{t.r(n),t.d(n,{assets:()=>u,contentTitle:()=>d,default:()=>b,frontMatter:()=>l,metadata:()=>h,toc:()=>p});var o=t(85893),a=t(11151),i=t(30831),s=t(51636),r=t(43513),c=t(86546);const l={title:"Creating a Multichain Connection with Web3Auth and React PnP no-modal SDK",image:"content-hub/guides/banners/multichain.png",description:"Learn how to connect to different blockchain using Web3Auth.",type:"guide",tags:["multichain","polkadot","evm","ethereum","aptos","cosmos","no-modal","web3auth","react"],date:"Febreaury 9, 2024",author:"Web3Auth Team",order:1,communityPortalTopicId:null},d=void 0,h={type:"mdx",permalink:"/docs/content-hub/guides/pnp-no-modal-multichain",source:"@site/src/pages/content-hub/guides/pnp-no-modal-multichain.mdx",title:"Creating a Multichain Connection with Web3Auth and React PnP no-modal SDK",description:"Learn how to connect to different blockchain using Web3Auth.",frontMatter:{title:"Creating a Multichain Connection with Web3Auth and React PnP no-modal SDK",image:"content-hub/guides/banners/multichain.png",description:"Learn how to connect to different blockchain using Web3Auth.",type:"guide",tags:["multichain","polkadot","evm","ethereum","aptos","cosmos","no-modal","web3auth","react"],date:"Febreaury 9, 2024",author:"Web3Auth Team",order:1,communityPortalTopicId:null},unlisted:!1},u={},p=[{value:"Quick Start",id:"quick-start",level:2},{value:"Prerequisites",id:"prerequisites",level:2},{value:"Setup your Web3Auth Dashboard",id:"setup-your-web3auth-dashboard",level:2},{value:"Using the Web3Auth Plug and Play No Modal SDK",id:"using-the-web3auth-plug-and-play-no-modal-sdk",level:2},{value:"Installation",id:"installation",level:3},{value:"Instantiating Web3Auth",id:"instantiating-web3auth",level:4},{value:"Login with Web3Auth",id:"login-with-web3auth",level:3},{value:"Get Public Address from different blockchains",id:"get-public-address-from-different-blockchains",level:3},{value:"EVM (Polygon mumbai testnet)",id:"evm-polygon-mumbai-testnet",level:2},{value:"Solana",id:"solana",level:2},{value:"Tezos",id:"tezos",level:2},{value:"StarkEx and StarkNet",id:"starkex-and-starknet",level:2},{value:"Polkadot",id:"polkadot",level:2},{value:"Get all the public wallets",id:"get-all-the-public-wallets",level:3},{value:"Conclusion",id:"conclusion",level:3},{value:"References",id:"references",level:3}];function m(e){const n={a:"a",admonition:"admonition",code:"code",h2:"h2",h3:"h3",h4:"h4",li:"li",p:"p",pre:"pre",strong:"strong",ul:"ul",...(0,a.a)(),...e.components};return(0,o.jsxs)(o.Fragment,{children:[(0,o.jsx)(i.Z,{title:"Creating a Multichain Connection with Web3Auth and PnP no-modal SDK",description:"Learn how to connect to different blockchain using Web3Auth.",image:"https://web3auth.io/docs/content-hub/guides/banners/multichain.png",slug:"/content-hub/guides/pnp-no-modal-multichain-connection"}),"\n","\n","\n",(0,o.jsx)(n.p,{children:"This guide will cover the basics of how to integrate Web3Auth with different blockchains at the same time. In this demo you will be able to\nauthenticate with different social logins and different addresses from each blockchain. Of course, you can interact and sign transactions with any of\nthem."}),"\n",(0,o.jsxs)(n.p,{children:["You will be able to make calls like get the user's ",(0,o.jsx)(n.code,{children:"account"}),", fetch ",(0,o.jsx)(n.code,{children:"balance"}),", ",(0,o.jsx)(n.code,{children:"sign transaction"}),", ",(0,o.jsx)(n.code,{children:"send transaction"}),", ",(0,o.jsx)(n.code,{children:"read"})," from and ",(0,o.jsx)(n.code,{children:"write"})," to\nsmart contracts, etc."]}),"\n",(0,o.jsxs)(n.p,{children:[(0,o.jsxs)(n.strong,{children:["The Web3Auth Web SDK supports all blockchains that follow the ",(0,o.jsx)(n.code,{children:"secp256k1"})," & ",(0,o.jsx)(n.code,{children:"ed25519"})," curves"]}),". This includes all EVM like (Ethereum, Polygon\nBinance Smart Chain, etc) and non-EVM like (Aptos, Cosmos, Polkadot, Solana, Tezos, etc) blockchains."]}),"\n",(0,o.jsx)(n.admonition,{type:"note",children:(0,o.jsxs)(n.p,{children:["This reference is for the ",(0,o.jsx)(n.code,{children:"Web"}),", but you can use all the blockchains on ",(0,o.jsx)(n.code,{children:"Android"}),", ",(0,o.jsx)(n.code,{children:"iOS"}),", ",(0,o.jsx)(n.code,{children:"React Native"}),", ",(0,o.jsx)(n.code,{children:"Flutter"}),", ",(0,o.jsx)(n.code,{children:"Unity"})," & ",(0,o.jsx)(n.code,{children:"Unreal"})," as well.\nPlease follow our reference for ",(0,o.jsx)(n.a,{href:"/connect-blockchain/ethereum/",children:"Ethereum"}),", and similarly use corresponding blockchain libraries that support the\nplatforms to use the private key and make blockchain calls accordingly."]})}),"\n",(0,o.jsx)(n.h2,{id:"quick-start",children:"Quick Start"}),"\n",(0,o.jsx)(n.pre,{children:(0,o.jsx)(n.code,{className:"language-bash",children:"npx degit Web3Auth/web3auth-pnp-examples/web-no-modal-sdk/blockchain-connection-examples/multi-chain-no-modal-example/ w3a-multi-chain-no-modal-demo && cd w3a-multi-chain-no-modal-demo && npm install && npm run start\n"})}),"\n",(0,o.jsx)(n.h2,{id:"prerequisites",children:"Prerequisites"}),"\n",(0,o.jsx)(s.ZP,{}),"\n",(0,o.jsx)(n.h2,{id:"setup-your-web3auth-dashboard",children:"Setup your Web3Auth Dashboard"}),"\n",(0,o.jsx)(r.ZP,{}),"\n",(0,o.jsx)(n.h2,{id:"using-the-web3auth-plug-and-play-no-modal-sdk",children:"Using the Web3Auth Plug and Play No Modal SDK"}),"\n",(0,o.jsxs)(n.p,{children:["To use the Web3Auth Plug and Play No Modal SDK, you need to add the dependency of the respective platform SDK of Web3Auth to your project. To learn\nmore about the available SDKs, please have a look at this ",(0,o.jsx)(n.a,{href:"/sdk",children:"documentation page"}),"."]}),"\n",(0,o.jsxs)(n.p,{children:["For the purpose of this guide, we will discuss the ",(0,o.jsx)(n.a,{href:"/sdk/pnp/web/no-modal",children:"Web3Auth Plug and Play No Modal SDK"})," and the different blockchain\nproviders."]}),"\n",(0,o.jsx)(c.ZP,{}),"\n",(0,o.jsx)(n.h3,{id:"installation",children:"Installation"}),"\n",(0,o.jsx)(n.p,{children:"We need many dependencies to make this work::"}),"\n",(0,o.jsx)(n.pre,{children:(0,o.jsx)(n.code,{className:"language-bash",children:"npm install @web3auth/base @web3auth/no-modal @web3auth/openlogin-adapter @web3auth/ethereum-provider @web3auth/solana-provider @polkadot/api @polkadot/util-crypto @taquito/signer @taquito/taquito @taquito/utils @tezos-core-tools/crypto-utils @starkware-industries/starkware-crypto-utils web3 ethers\n"})}),"\n",(0,o.jsx)(n.h4,{id:"instantiating-web3auth",children:"Instantiating Web3Auth"}),"\n",(0,o.jsx)(n.p,{children:"Import the required modules for web3auth and any providers you want to use."}),"\n",(0,o.jsx)(n.pre,{children:(0,o.jsx)(n.code,{className:"language-tsx",children:'import { Web3AuthNoModal } from "@web3auth/no-modal";\nimport { OpenloginAdapter } from "@web3auth/openlogin-adapter";\nimport { IProvider, WALLET_ADAPTERS } from "@web3auth/base";\nimport { EthereumPrivateKeyProvider } from "@web3auth/ethereum-provider";\nimport { web3AuthConfig, openloginAdapterConfig } from "./config/web3auth";\n\n// EVM\nimport Web3 from "web3";\n// Solana\nimport { SolanaPrivateKeyProvider, SolanaWallet } from "@web3auth/solana-provider";\n// Tezos\n//@ts-ignore\nimport * as tezosCrypto from "@tezos-core-tools/crypto-utils";\nimport { hex2buf } from "@taquito/utils";\n// StarkEx and StarkNet\n//@ts-ignore\nimport { ec } from "@starkware-industries/starkware-crypto-utils";\n// Polkadot\nimport { Keyring } from "@polkadot/api";\nimport { cryptoWaitReady } from "@polkadot/util-crypto";\n'})}),"\n",(0,o.jsxs)(n.p,{children:["Call ",(0,o.jsx)(n.code,{children:"init"})," when the app is loads, it will initialize the Web3Auth instance . Also don't forget to propertly configure the ",(0,o.jsx)(n.code,{children:"clientId"}),",\n",(0,o.jsx)(n.code,{children:"web3AuthConfig"})," and ",(0,o.jsx)(n.code,{children:"openloginAdapterConfig"})," objects in the ",(0,o.jsx)(n.code,{children:"config"})," directory."]}),"\n",(0,o.jsx)(n.pre,{children:(0,o.jsx)(n.code,{className:"language-tsx",children:"const init = async () => {\n  try {\n    const web3auth = new Web3AuthNoModal(web3AuthConfig);\n    setWeb3auth(web3auth);\n\n    const openloginAdapter = new OpenloginAdapter(openloginAdapterConfig);\n    web3auth.configureAdapter(openloginAdapter);\n\n    await web3auth.init();\n\n    setProvider(web3auth.provider);\n    if (web3auth.connected) {\n      setLoggedIn(true);\n    }\n  } catch (error) {\n    console.error(error);\n  }\n};\n"})}),"\n",(0,o.jsx)(n.h3,{id:"login-with-web3auth",children:"Login with Web3Auth"}),"\n",(0,o.jsxs)(n.p,{children:["You must call this function to start the login process. You can change the ",(0,o.jsx)(n.code,{children:"loginProvider"})," to any of the\n",(0,o.jsx)(n.a,{href:"https://web3auth.io/docs/sdk/pnp/web/adapters/openlogin#loginsettings",children:"available social logins"}),"."]}),"\n",(0,o.jsx)(n.pre,{children:(0,o.jsx)(n.code,{className:"language-tsx",children:'const web3authProvider = await web3auth.connectTo(WALLET_ADAPTERS.OPENLOGIN, {\n  loginProvider: "google",\n});\n'})}),"\n",(0,o.jsx)(n.h3,{id:"get-public-address-from-different-blockchains",children:"Get Public Address from different blockchains"}),"\n",(0,o.jsxs)(n.p,{children:["For each blockchain you want to connect to, you need to call the ",(0,o.jsx)(n.code,{children:"getAddress"})," function and with the private key, we will generate the public address."]}),"\n",(0,o.jsx)(n.h2,{id:"evm-polygon-mumbai-testnet",children:"EVM (Polygon mumbai testnet)"}),"\n",(0,o.jsx)(n.pre,{children:(0,o.jsx)(n.code,{className:"language-tsx",children:'const rpc = new RPC(provider);\nconst privateKey = await rpc.getPrivateKey();\n\nconst polygonPrivateKeyProvider = new EthereumPrivateKeyProvider({\n  config: {\n    chainConfig: {\n      chainNamespace: CHAIN_NAMESPACES.EIP155,\n      chainId: "0x13881",\n      rpcTarget: "https://rpc.ankr.com/polygon_mumbai",\n      displayName: "Polygon Mumbai",\n      blockExplorerUrl: "https://mumbai.polygonscan.com/",\n      ticker: "MATIC",\n      tickerName: "MATIC",\n      logo: "https://cryptologos.cc/logos/polygon-matic-logo.png"\n    },\n  },\n});\nawait polygonPrivateKeyProvider.setupProvider(privateKey);\nconst web3 = new Web3(polygonPrivateKeyProvider);\nconst address = (await web3.eth.getAccounts())[0];\nreturn address;\n'})}),"\n",(0,o.jsx)(n.h2,{id:"solana",children:"Solana"}),"\n",(0,o.jsx)(n.pre,{children:(0,o.jsx)(n.code,{className:"language-tsx",children:'const rpc = new RPC(provider);\nconst privateKey = await rpc.getPrivateKey();\n\nconst { getED25519Key } = await import("@toruslabs/openlogin-ed25519");\nconst ed25519key = getED25519Key(privateKey).sk.toString("hex");\n\n// Get user\'s Solana\'s public address\nconst solanaPrivateKeyProvider = new SolanaPrivateKeyProvider({\n  config: {\n    chainConfig: {\n      chainNamespace: CHAIN_NAMESPACES.SOLANA,\n      chainId: "0x3",\n      rpcTarget: "https://api.devnet.solana.com",\n      displayName: "Solana Mainnet",\n      blockExplorerUrl: "https://explorer.solana.com/",\n      ticker: "SOL",\n      tickerName: "Solana",\n      logo: "",\n    },\n  },\n});\nawait solanaPrivateKeyProvider.setupProvider(ed25519key);\nconsole.log(solanaPrivateKeyProvider.provider);\n\nconst solanaWallet = new SolanaWallet(solanaPrivateKeyProvider.provider as any);\nconst solana_address = await solanaWallet.requestAccounts();\nreturn "0x" + solana_address[0];\n'})}),"\n",(0,o.jsx)(n.h2,{id:"tezos",children:"Tezos"}),"\n",(0,o.jsx)(n.pre,{children:(0,o.jsx)(n.code,{className:"language-tsx",children:'const rpc = new RPC(provider);\nconst privateKey = await rpc.getPrivateKey();\nconst keyPairTezos = tezosCrypto.utils.seedToKeyPair(hex2buf(privateKey));\nconst address = "0x" + keyPairTezos?.pkh;\nreturn address;\n'})}),"\n",(0,o.jsx)(n.h2,{id:"starkex-and-starknet",children:"StarkEx and StarkNet"}),"\n",(0,o.jsx)(n.pre,{children:(0,o.jsx)(n.code,{className:"language-tsx",children:'const rpc = new RPC(provider);\nconst privateKey = await rpc.getPrivateKey();\nconst keyPairStarkEx = ec.keyFromPrivate(privateKey, "hex");\nconst starkex_account = ec.keyFromPublic(keyPairStarkEx.getPublic(true, "hex"), "hex");\nconst address = "0x" + starkex_account.pub.getX().toString("hex");\nreturn address;\n'})}),"\n",(0,o.jsx)(n.h2,{id:"polkadot",children:"Polkadot"}),"\n",(0,o.jsx)(n.pre,{children:(0,o.jsx)(n.code,{className:"language-tsx",children:'await cryptoWaitReady();\nconst rpc = new RPC(provider);\nconst privateKey = (await rpc.getPrivateKey()) as string;\nconst keyring = new Keyring({ ss58Format: 42, type: "sr25519" });\n\nconst keyPair = keyring.addFromUri("0x" + privateKey);\nconst address = "0x" + keyPair.address;\nreturn address;\n'})}),"\n",(0,o.jsx)(n.h3,{id:"get-all-the-public-wallets",children:"Get all the public wallets"}),"\n",(0,o.jsx)(n.p,{children:"As you can see in the full example, we get the public address from each blockchain. In this case, It's clear that you can interact with different\nblockchains at the same time."}),"\n",(0,o.jsxs)(n.p,{children:["And in Web3auth we have\n",(0,o.jsx)(n.a,{href:"https://github.com/Web3Auth/web3auth-pnp-examples/tree/main/web-no-modal-sdk/blockchain-connection-examples",children:"several examples"})," of how to interact\nwith ",(0,o.jsx)(n.a,{href:"https://web3auth.io/docs/connect-blockchain#mpc-providers",children:"any blockchain"}),"."]}),"\n",(0,o.jsx)(n.p,{children:"We also have some examples of how to interact with Cosmos, Aptos, Algorand and XRPL."}),"\n",(0,o.jsx)(n.h3,{id:"conclusion",children:"Conclusion"}),"\n",(0,o.jsx)(n.p,{children:"This guide has walked you through the seamless process of creating a multichain connection using Web3Auth and the React PnP no-modal SDK. By\nintegrating Web3Auth, developers are empowered to build applications that are not only blockchain agnostic but also user-friendly, leveraging social\nlogins for authentication across multiple blockchains."}),"\n",(0,o.jsx)(n.p,{children:"The provided examples and code snippets have shown how to initialize Web3Auth, configure adapters, and retrieve public addresses for different\nblockchains, highlighting the flexibility and power of Web3Auth in handling diverse blockchain technologies. With this knowledge, developers can now\nextend their applications to support a wide range of blockchains."}),"\n",(0,o.jsx)(n.p,{children:"As the blockchain ecosystem continues to evolve, tools like Web3Auth will play a crucial role in simplifying access and interaction with blockchain\ntechnologies."}),"\n",(0,o.jsxs)(n.p,{children:["If you want to interact with a specific blockchain and you are having trouble with the code, pleaes contact us in our\n",(0,o.jsx)(n.a,{href:"https://web3auth.io/community/",children:"community"}),"."]}),"\n",(0,o.jsx)(n.h3,{id:"references",children:"References"}),"\n",(0,o.jsxs)(n.ul,{children:["\n",(0,o.jsx)(n.li,{children:(0,o.jsx)(n.a,{href:"https://web3auth.io/docs/sdk/pnp/web/no-modal/",children:"https://web3auth.io/docs/sdk/pnp/web/no-modal/"})}),"\n",(0,o.jsx)(n.li,{children:(0,o.jsx)(n.a,{href:"https://web3auth.io/docs/sdk/helper-sdks/providers/",children:"https://web3auth.io/docs/sdk/helper-sdks/providers/"})}),"\n",(0,o.jsx)(n.li,{children:(0,o.jsx)(n.a,{href:"https://web3auth.io/docs/examples?product=Plug+and+Play&sdk=Plug+and+Play+Web+Modal+SDK",children:"https://web3auth.io/docs/examples?product=Plug+and+Play&sdk=Plug+and+Play+Web+Modal+SDK"})}),"\n"]})]})}function b(e={}){const{wrapper:n}={...(0,a.a)(),...e.components};return n?(0,o.jsx)(n,{...e,children:(0,o.jsx)(m,{...e})}):m(e)}},86546:(e,n,t)=>{t.d(n,{ZP:()=>s});var o=t(85893),a=t(11151);function i(e){const n={a:"a",h4:"h4",p:"p",...(0,a.a)(),...e.components};return(0,o.jsxs)(o.Fragment,{children:[(0,o.jsx)(n.h4,{id:"setting-up-your-base-project-for-using-web3-libraries",children:"Setting up your base project for using Web3 libraries:"}),"\n",(0,o.jsxs)(n.p,{children:["If you are starting from scratch, to set up this project locally, you will need to create a base Web application, where you can install the required\ndependencies. However, while working with Web3, there are a few base libraries, which need additional configuration. This is because certain packages\nare not available in the browser environment, and we need to polyfill them manually. You can follow\n",(0,o.jsx)(n.a,{href:"/troubleshooting/webpack-issues",children:"this documentation"})," where we have mentioned the configuration changes for some popular frameworks for your\nreference."]})]})}function s(e={}){const{wrapper:n}={...(0,a.a)(),...e.components};return n?(0,o.jsx)(n,{...e,children:(0,o.jsx)(i,{...e})}):i(e)}},43513:(e,n,t)=>{t.d(n,{ZP:()=>s});var o=t(85893),a=t(11151);function i(e){const n={a:"a",code:"code",img:"img",li:"li",p:"p",strong:"strong",ul:"ul",...(0,a.a)(),...e.components};return(0,o.jsxs)(n.ul,{children:["\n",(0,o.jsxs)(n.li,{children:["\n",(0,o.jsxs)(n.p,{children:["Create a Project from the ",(0,o.jsx)(n.strong,{children:"Project"})," Section of the ",(0,o.jsx)(n.a,{href:"https://dashboard.web3auth.io/",children:"Web3Auth Developer Dashboard"}),"."]}),"\n",(0,o.jsx)(n.p,{children:(0,o.jsx)(n.img,{alt:"Plug n Play Project Creation on Web3Auth Dashboard",src:t(53558).Z+"",width:"1840",height:"1191"})}),"\n",(0,o.jsxs)(n.ul,{children:["\n",(0,o.jsxs)(n.li,{children:["\n",(0,o.jsxs)(n.p,{children:["Enter your desired ",(0,o.jsx)(n.strong,{children:"Project name"}),"."]}),"\n"]}),"\n",(0,o.jsxs)(n.li,{children:["\n",(0,o.jsxs)(n.p,{children:["Select the ",(0,o.jsx)(n.strong,{children:"Product"})," you want to use. For this guide, we'll be using the ",(0,o.jsx)(n.strong,{children:"Plug n Play"})," product."]}),"\n"]}),"\n",(0,o.jsxs)(n.li,{children:["\n",(0,o.jsxs)(n.p,{children:["Select the ",(0,o.jsx)(n.strong,{children:"Platform type"})," you want to use. For this guide, we'll be using the ",(0,o.jsx)(n.strong,{children:"Web Application"})," as the platform."]}),"\n"]}),"\n",(0,o.jsxs)(n.li,{children:["\n",(0,o.jsxs)(n.p,{children:["Select the Web3Auth Network as ",(0,o.jsx)(n.code,{children:"Sapphire Devnet"}),". We recommend creating a project in the ",(0,o.jsx)(n.code,{children:"sapphire_devnet"})," network during development. While\nmoving to a production environment, make sure to convert your project to ",(0,o.jsx)(n.code,{children:"sapphire_mainnet"})," or any of the legacy mainnet network ",(0,o.jsx)(n.code,{children:"mainnet"}),",\n",(0,o.jsx)(n.code,{children:"aqua"}),", or ",(0,o.jsx)(n.code,{children:"cyan"})," network. Otherwise, you'll end up losing users and keys."]}),"\n"]}),"\n",(0,o.jsxs)(n.li,{children:["\n",(0,o.jsxs)(n.p,{children:["Select the blockchain(s) you'll be building this project on. For interoperability with Torus Wallets, you have the option of allowing the user's\nprivate key to be used in other applications using Torus Wallets (",(0,o.jsx)(n.a,{href:"https://app.tor.us",children:"EVM"}),", ",(0,o.jsx)(n.a,{href:"https://solana.tor.us",children:"Solana"}),",\n",(0,o.jsx)(n.a,{href:"https://xrpl.tor.us",children:"XRPL"})," & ",(0,o.jsx)(n.a,{href:"https://casper.tor.us",children:"Casper"}),")."]}),"\n"]}),"\n",(0,o.jsxs)(n.li,{children:["\n",(0,o.jsxs)(n.p,{children:["Finally, once you create the project, you have the option to whitelist your URLs for the project. ",(0,o.jsx)(n.strong,{children:"Please whitelist the domains where your\nproject will be hosted."})]}),"\n",(0,o.jsx)(n.p,{children:(0,o.jsx)(n.img,{alt:"Plug n Play Project - Whitelist",src:t(41991).Z+"",width:"1840",height:"1191"})}),"\n"]}),"\n"]}),"\n"]}),"\n"]})}function s(e={}){const{wrapper:n}={...(0,a.a)(),...e.components};return n?(0,o.jsx)(n,{...e,children:(0,o.jsx)(i,{...e})}):i(e)}},51636:(e,n,t)=>{t.d(n,{ZP:()=>s});var o=t(85893),a=t(11151);function i(e){const n={a:"a",li:"li",p:"p",ul:"ul",...(0,a.a)(),...e.components};return(0,o.jsxs)(n.ul,{children:["\n",(0,o.jsxs)(n.li,{children:["\n",(0,o.jsx)(n.p,{children:"For Web Apps: A basic knowledge of JavaScript is required to use Web3Auth SDK."}),"\n"]}),"\n",(0,o.jsxs)(n.li,{children:["\n",(0,o.jsxs)(n.p,{children:["For Mobile Apps: For the Web3Auth Mobile SDKs, you have a choice between iOS, Android, React Native & Flutter. Please refer to the\n",(0,o.jsx)(n.a,{href:"/sdk",children:"Web3Auth SDK Reference"})," for more information."]}),"\n"]}),"\n",(0,o.jsxs)(n.li,{children:["\n",(0,o.jsxs)(n.p,{children:["Create a Web3Auth account on the ",(0,o.jsx)(n.a,{href:"https://dashboard.web3auth.io",children:"Web3Auth Dashboard"})]}),"\n"]}),"\n"]})}function s(e={}){const{wrapper:n}={...(0,a.a)(),...e.components};return n?(0,o.jsx)(n,{...e,children:(0,o.jsx)(i,{...e})}):i(e)}},30831:(e,n,t)=>{t.d(n,{Z:()=>i});var o=t(35742),a=t(85893);function i(e){const{title:n,description:t,image:i,slug:s,keywords:r}=e;return(0,a.jsxs)(o.Z,{children:[n?(0,a.jsxs)("title",{children:[n," | Web3Auth "]}):(0,a.jsx)("title",{children:"Documentation | Web3Auth"}),t?(0,a.jsx)("meta",{name:"description",content:t}):(0,a.jsx)("meta",{name:"description",content:"Web3Auth is simple, non-custodial auth infrastructure that enables Web3 wallets and applications to provide seamless user logins for both mainstream and native Web3 users."}),r?r.length>0&&(0,a.jsx)("meta",{name:"keywords",content:`web3auth, blockchain, solana, ethereum, multi party computation, ${r.join(", ")}`}):(0,a.jsx)("meta",{name:"keywords",content:"web3auth, blockchain, web3, web3.js, ethers.js, solana, ethereum, passwordless, passwordless magic link, multi party computation, tkey, torus, web3 auth, auth"}),(0,a.jsx)("meta",{property:"og:site_name",content:"Web3Auth"}),(0,a.jsx)("meta",{property:"og:type",content:"website"}),n?(0,a.jsx)("meta",{property:"og:title",content:n}):(0,a.jsx)("meta",{property:"og:title",content:"Documentation | Web3Auth"}),t?(0,a.jsx)("meta",{property:"og:description",content:t}):(0,a.jsx)("meta",{property:"og:description",content:"Web3Auth is simple, non-custodial auth infrastructure that enables Web3 wallets and applications to provide seamless user logins for both mainstream and native Web3 users."}),s?(0,a.jsx)("meta",{property:"og:url",content:`https://web3auth.io/docs${s}`}):(0,a.jsx)("meta",{property:"og:url",content:"https://web3auth.io/docs"}),i?(0,a.jsx)("meta",{property:"og:image",content:i}):(0,a.jsx)("meta",{property:"og:image",content:"http://web3auth.io/docs/images/docs-meta-cards/documentation-card.png"}),(0,a.jsx)("meta",{name:"twitter:card",content:"summary_large_image"}),(0,a.jsx)("meta",{name:"twitter:site",content:"@Web3Auth"}),(0,a.jsx)("meta",{name:"twitter:creator",content:"@Web3Auth"}),i?(0,a.jsx)("meta",{name:"twitter:image",content:i}):(0,a.jsx)("meta",{name:"twitter:image",content:"http://web3auth.io/docs/images/docs-meta-cards/documentation-card.png"}),n?(0,a.jsx)("meta",{itemProp:"name",content:n}):(0,a.jsx)("meta",{itemProp:"name",content:"Documentation | Web3Auth"}),t?(0,a.jsx)("meta",{itemProp:"description",content:t}):(0,a.jsx)("meta",{itemProp:"description",content:"Web3Auth is simple, non-custodial auth infrastructure that enables Web3 wallets and applications to provide seamless user logins for both mainstream and native Web3 users."}),i?(0,a.jsx)("meta",{itemProp:"image",content:i}):(0,a.jsx)("meta",{itemProp:"image",content:"http://web3auth.io/docs/images/docs-meta-cards/documentation-card.png"}),(0,a.jsx)("meta",{name:"author",content:"Web3Auth"})]})}},53558:(e,n,t)=>{t.d(n,{Z:()=>o});const o=t.p+"assets/images/create-project-name-c9005c16b664f81f25e56e63c9cc503a.png"},41991:(e,n,t)=>{t.d(n,{Z:()=>o});const o=t.p+"assets/images/project-whitelist-ec0210471c902c254ff14a90813adfd3.png"},11151:(e,n,t)=>{t.d(n,{Z:()=>r,a:()=>s});var o=t(67294);const a={},i=o.createContext(a);function s(e){const n=o.useContext(i);return o.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function r(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(a):e.components||a:s(e.components),o.createElement(i.Provider,{value:n},e.children)}}}]);