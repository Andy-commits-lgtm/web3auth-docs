"use strict";(self.webpackChunkweb3auth_docs=self.webpackChunkweb3auth_docs||[]).push([[27126],{90658:(e,t,n)=>{n.d(t,{ZP:()=>a});var r=n(85893),i=n(11151);function o(e){const t={a:"a",code:"code",em:"em",img:"img",li:"li",p:"p",strong:"strong",ul:"ul",...(0,i.a)(),...e.components};return(0,r.jsxs)(r.Fragment,{children:[(0,r.jsxs)(t.p,{children:["Create a Firebase ",(0,r.jsx)(t.strong,{children:"Verifier"})," from the ",(0,r.jsx)(t.strong,{children:"Custom Authentication"})," tab of your Web3Auth Project."]}),"\n",(0,r.jsxs)(t.ul,{children:["\n",(0,r.jsxs)(t.li,{children:["\n",(0,r.jsxs)(t.p,{children:["Click on the ",(0,r.jsx)(t.code,{children:"Custom Authentication"})," tab of your ",(0,r.jsx)(t.a,{href:"/dashboard-setup/projects-and-analytics#create-a-new-project",children:"Web3Auth Project"}),"."]}),"\n"]}),"\n",(0,r.jsxs)(t.li,{children:["\n",(0,r.jsxs)(t.p,{children:["Click on the ",(0,r.jsx)(t.code,{children:"Create Verifier"})," button."]}),"\n"]}),"\n",(0,r.jsxs)(t.li,{children:["\n",(0,r.jsxs)(t.p,{children:["Enter a name of your choice for the verifier identifier. ",(0,r.jsx)(t.code,{children:"eg. w3a-firebase-demo"})]}),"\n"]}),"\n",(0,r.jsxs)(t.li,{children:["\n",(0,r.jsxs)(t.p,{children:["Select ",(0,r.jsx)(t.code,{children:"Custom Providers"})," from the ",(0,r.jsx)(t.strong,{children:"Choose a Login Provider"})," section.\n",(0,r.jsx)(t.img,{alt:"Verifier Modal on Web3Auth Dashboard",src:n(50473).Z+"",width:"1840",height:"1191"})]}),"\n"]}),"\n",(0,r.jsxs)(t.li,{children:["\n",(0,r.jsxs)(t.p,{children:[(0,r.jsx)(t.strong,{children:"JWKS Endpoint"}),": Enter ",(0,r.jsx)(t.code,{children:"https://www.googleapis.com/service_accounts/v1/jwk/securetoken@system.gserviceaccount.com"})," as the JWKS endpoint for the\nFirebase."]}),"\n"]}),"\n",(0,r.jsxs)(t.li,{children:["\n",(0,r.jsx)(t.p,{children:"Now you have the option to paste a sample idToken(JWT) to get the fields for the JWT validation. This step is optional, but if you have a sample JWT\nyou can paste it here to get the fields for the JWT validation. You can also skip this step and fill in the fields manually."}),"\n"]}),"\n",(0,r.jsxs)(t.li,{children:["\n",(0,r.jsx)(t.p,{children:"The following are the JWT validation fields needed for the Firebase JWT validation:"}),"\n",(0,r.jsxs)(t.ul,{children:["\n",(0,r.jsxs)(t.li,{children:["Type ",(0,r.jsx)(t.code,{children:"iss"})," as a field and ",(0,r.jsx)(t.code,{children:"https://securetoken.google.com/FIREBASE-PROJECT-ID"})," as a value."]}),"\n",(0,r.jsxs)(t.li,{children:["Next, type ",(0,r.jsx)(t.code,{children:"aud"})," as a field and ",(0,r.jsx)(t.code,{children:"FIREBASE-PROJECT-ID"})," as a value."]}),"\n"]}),"\n",(0,r.jsx)(t.p,{children:(0,r.jsx)(t.strong,{children:(0,r.jsxs)(t.em,{children:["Note: Replace the ",(0,r.jsx)(t.code,{children:"FIREBASE-PROJECT-ID"})," with your Firebase Project ID."]})})}),"\n"]}),"\n",(0,r.jsxs)(t.li,{children:["\n",(0,r.jsxs)(t.p,{children:["Next, Select ",(0,r.jsx)(t.code,{children:"Sub"}),", ",(0,r.jsx)(t.code,{children:"Email"})," or a ",(0,r.jsx)(t.code,{children:"Custom"})," value from the dropdown for the ",(0,r.jsx)(t.strong,{children:"JWT Verifier ID"}),". This is the field that will be used as the verifier\nID for the user, and it has to be unique for each user."]}),"\n"]}),"\n",(0,r.jsxs)(t.li,{children:["\n",(0,r.jsxs)(t.p,{children:["Finally, Click on the ",(0,r.jsx)(t.code,{children:"Create"})," button to create your verifier."]}),"\n"]}),"\n"]}),"\n",(0,r.jsx)(t.p,{children:(0,r.jsx)(t.img,{alt:"Verifier Modal on Web3Auth Dashboard",src:n(45025).Z+"",width:"1840",height:"1192"})}),"\n",(0,r.jsxs)(t.p,{children:["It may take up to 10 minutes to deploy the verifier on ",(0,r.jsx)(t.em,{children:"sapphire_devnet"}),". You'll receive an email once it's complete."]})]})}function a(e={}){const{wrapper:t}={...(0,i.a)(),...e.components};return t?(0,r.jsx)(t,{...e,children:(0,r.jsx)(o,{...e})}):o(e)}},49116:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>h,contentTitle:()=>c,default:()=>m,frontMatter:()=>l,metadata:()=>d,toc:()=>u});var r=n(85893),i=n(11151),o=n(90658),a=n(74866),s=n(85162);const l={title:"X(Twitter) Social Login with Web3Auth",sidebar_label:"Twitter",displayed_sidebar:"docs",description:"Twitter Social Login with Web3Auth | Documentation - Web3Auth"},c=void 0,d={id:"auth-provider-setup/social-providers/twitter",title:"X(Twitter) Social Login with Web3Auth",description:"Twitter Social Login with Web3Auth | Documentation - Web3Auth",source:"@site/docs/auth-provider-setup/social-providers/twitter.mdx",sourceDirName:"auth-provider-setup/social-providers",slug:"/auth-provider-setup/social-providers/twitter",permalink:"/docs/auth-provider-setup/social-providers/twitter",draft:!1,unlisted:!1,editUrl:"https://github.com/web3auth/web3auth-docs/edit/master/docs/auth-provider-setup/social-providers/twitter.mdx",tags:[],version:"current",frontMatter:{title:"X(Twitter) Social Login with Web3Auth",sidebar_label:"Twitter",displayed_sidebar:"docs",description:"Twitter Social Login with Web3Auth | Documentation - Web3Auth"},sidebar:"docs",previous:{title:"Social Providers",permalink:"/docs/auth-provider-setup/social-providers/"},next:{title:"Google",permalink:"/docs/auth-provider-setup/social-providers/google"}},h={},u=[{value:"Set up Twitter via Auth0",id:"set-up-twitter-via-auth0",level:2},{value:"Example",id:"example",level:3},{value:"Set up Twitter via Firebase",id:"set-up-twitter-via-firebase",level:2},{value:"Example",id:"example-1",level:3}];function p(e){const t={a:"a",admonition:"admonition",code:"code",h2:"h2",h3:"h3",img:"img",li:"li",ol:"ol",p:"p",pre:"pre",strong:"strong",...(0,i.a)(),...e.components};return(0,r.jsxs)(r.Fragment,{children:[(0,r.jsx)(t.admonition,{type:"note",children:(0,r.jsx)(t.p,{children:"Twitter login can be performed in various ways, depending on the use case. We have demonstrated this with Auth0 & Firebase, but this can be done with\nany other Federated/JWT providers."})}),"\n",(0,r.jsxs)(t.h2,{id:"set-up-twitter-via-auth0",children:["Set up ",(0,r.jsx)(t.a,{href:"https://auth0.com/blog/how-to-add-a-twitter-social-connection-in-auth0/#Setup-Twitter-connection",children:"Twitter via Auth0"})]}),"\n",(0,r.jsxs)(t.ol,{children:["\n",(0,r.jsxs)(t.li,{children:["\n",(0,r.jsxs)(t.p,{children:["Create an Auth0 verifier for your application by selecting ",(0,r.jsx)(t.code,{children:"Auth0"})," as the Login provider from this modal.\n",(0,r.jsx)(t.img,{alt:"Twitter - Login Providers list on Web3Auth Dashboard",src:n(87047).Z+"",width:"1840",height:"1191"})]}),"\n"]}),"\n",(0,r.jsxs)(t.li,{children:["\n",(0,r.jsxs)(t.p,{children:["Select ",(0,r.jsx)(t.code,{children:"Twitter"})," as the ",(0,r.jsx)(t.strong,{children:"Authentication Type"})," based on the dropdown.\n",(0,r.jsx)(t.img,{alt:"Twitter - Auth0 Authentication Type list on Web3Auth Dashboard",src:n(6821).Z+"",width:"1840",height:"1191"})]}),"\n"]}),"\n",(0,r.jsxs)(t.li,{children:["\n",(0,r.jsxs)(t.p,{children:["Enter the ",(0,r.jsx)(t.code,{children:"Auth0 Client ID"})," and ",(0,r.jsx)(t.code,{children:"Auth0 Domain"})," from your Auth0 application. See how to create a new Auth0 application\n",(0,r.jsx)(t.a,{href:"https://auth0.com/docs/quickstart/webapp/",children:"here"}),"."]}),"\n",(0,r.jsxs)(t.p,{children:[(0,r.jsx)(t.img,{alt:"Twitter - Domain and Client ID from Auth0 Dashboard",src:n(88699).Z+"",width:"713",height:"388"}),"\n",(0,r.jsx)(t.img,{alt:"Twitter - Auth0 Client ID and Auth0 Domain on Web3Auth Dashboard",src:n(47407).Z+"",width:"2624",height:"1902"})]}),"\n"]}),"\n",(0,r.jsxs)(t.li,{children:["\n",(0,r.jsxs)(t.p,{children:["Add the ",(0,r.jsx)(t.a,{href:"https://marketplace.auth0.com/integrations/twitter-social-connection",children:"Twitter Social Connection"})," to your Auth0 application."]}),"\n"]}),"\n",(0,r.jsxs)(t.li,{children:["\n",(0,r.jsxs)(t.p,{children:["Click on the ",(0,r.jsx)(t.code,{children:"Create"})," button to create ",(0,r.jsx)(t.code,{children:"Twitter"})," Custom Authentication via Auth0 verifier."]}),"\n"]}),"\n"]}),"\n",(0,r.jsx)(t.h3,{id:"example",children:"Example"}),"\n",(0,r.jsx)(t.pre,{children:(0,r.jsx)(t.code,{className:"language-tsx",children:'import { Web3AuthNoModal } from "@web3auth/no-modal";\nimport { OpenloginAdapter } from "@web3auth/openlogin-adapter";\nimport { EthereumPrivateKeyProvider } from "@web3auth/ethereum-provider";\n\nconst clientId = "BPi5PB_UiIZ-cPz1GtV5i1I2iOSOHuimiXBI0e-Oe_u6X3oVAbCiAZOTEBtTXw4tsluTITPqA8zMsfxIKMjiqNQ";\n// get it from https://dashboard.web3auth.io by creating a project.\n\nconst chainConfig = {\n  chainNamespace: "eip155",\n  chainId: "0x1",\n  rpcTarget: "https://rpc.ankr.com/eth",\n  displayName: "Ethereum Mainnet",\n  blockExplorerUrl: "https://etherscan.io",\n  ticker: "ETH",\n  tickerName: "Ethereum",\n  logo: "https://images.toruswallet.io/ethereum.svg"\n};\n\nconst privateKeyProvider = new EthereumPrivateKeyProvider({\n  config: { chainConfig },\n});\n\n\nconst web3auth = new Web3AuthNoModal({\n  clientId,\n  web3AuthNetwork: "sapphire_mainnet",\n  privateKeyProvider: privateKeyProvider,\n});\n\nconst openloginAdapter = new OpenloginAdapter({\n  privateKeyProvider,\n  adapterSettings: {\n    loginConfig: {\n      jwt: {\n        verifier: "w3a-auth0-demo", // Pass the Verifier name here\n        typeOfLogin: "jwt", // Pass on the login provider of the verifier you\'ve created\n        clientId: "hUVVf4SEsZT7syOiL0gLU9hFEtm2gQ6O", // Pass on the Auth0 `Client ID` here\n      },\n    },\n  },\n});\n\nweb3auth.configureAdapter(openloginAdapter);\nsetWeb3auth(web3auth);\n\n// Initialize\nawait web3auth.init();\n\n// Login with Twitter / X\nawait web3auth.connectTo(WALLET_ADAPTERS.OPENLOGIN, {\n  loginProvider: "jwt",\n  extraLoginOptions: {\n    domain: "https://web3auth.au.auth0.com", // Pass on the Auth0 `Domain` here\n    verifierIdField: "sub", // Pass on the field name of the `sub` field in the JWT\n    connection: "twitter", // Use this to skip Auth0 Modal for Twitter / X login\n  },\n});\n'})}),"\n",(0,r.jsxs)(t.h2,{id:"set-up-twitter-via-firebase",children:["Set up ",(0,r.jsx)(t.a,{href:"https://firebase.google.com/docs/auth/web/twitter-login",children:"Twitter via Firebase"})]}),"\n",(0,r.jsx)(o.ZP,{}),"\n",(0,r.jsx)(t.h3,{id:"example-1",children:"Example"}),"\n",(0,r.jsxs)(a.Z,{defaultValue:"no-modal",values:[{label:"PnP NoModal",value:"no-modal"},{label:"CoreKit SFA",value:"sfa"},{label:"CoreKit MFA (tKey)",value:"tkey"}],children:[(0,r.jsx)(s.Z,{value:"no-modal",children:(0,r.jsx)(t.pre,{children:(0,r.jsx)(t.code,{className:"language-tsx",children:'import { Web3AuthNoModal } from "@web3auth/no-modal";\nimport { OpenloginAdapter } from "@web3auth/openlogin-adapter";\nimport { EthereumPrivateKeyProvider } from "@web3auth/ethereum-provider";\nimport { initializeApp } from "firebase/app";\nimport { TwitterAuthProvider, getAuth, signInWithPopup, UserCredential } from "firebase/auth";\n\nconst clientId = "BPi5PB_UiIZ-cPz1GtV5i1I2iOSOHuimiXBI0e-Oe_u6X3oVAbCiAZOTEBtTXw4tsluTITPqA8zMsfxIKMjiqNQ";\n// get it from https://dashboard.web3auth.io by creating a project.\n\n// Your web app\'s Firebase configuration\nconst firebaseConfig = {\n  apiKey: "AIzaSyB0nd9YsPLu-tpdCrsXn8wgsWVAiYEpQ_E", // Replace with your Firebase project\'s API key\n  authDomain: "web3auth-oauth-logins.firebaseapp.com", // Replace with your Firebase project\'s auth domain\n  projectId: "web3auth-oauth-logins", // Replace with your Firebase project\'s ID\n  storageBucket: "web3auth-oauth-logins.appspot.com", // Replace with your Firebase project\'s storage bucket\n  messagingSenderId: "461819774167", // Replace with your Firebase project\'s messaging sender ID\n  appId: "1:461819774167:web:e74addfb6cc88f3b5b9c92", // Replace with your Firebase project\'s app ID\n};\n\nconst chainConfig = {\n  chainNamespace: "eip155",\n  chainId: "0x1",\n  rpcTarget: "https://rpc.ankr.com/eth",\n  displayName: "Ethereum Mainnet",\n  blockExplorerUrl: "https://etherscan.io",\n  ticker: "ETH",\n  tickerName: "Ethereum",\n  logo: "https://images.toruswallet.io/ethereum.svg"\n};\n\nconst privateKeyProvider = new EthereumPrivateKeyProvider({\n  config: { chainConfig },\n});\n\n\nconst web3auth = new Web3AuthNoModal({\n  clientId,\n  web3AuthNetwork: "sapphire_mainnet",\n  privateKeyProvider: privateKeyProvider,\n});\n\n\nconst openloginAdapter = new OpenloginAdapter({\n  privateKeyProvider,\n  adapterSettings: {\n    loginConfig: {\n      jwt: {\n        verifier: "web3auth-firebase-examples", // Pass the Verifier name here\n        typeOfLogin: "jwt",\n        clientId,\n      },\n    },\n  },\n});\n\nweb3auth.configureAdapter(openloginAdapter);\nsetWeb3auth(web3auth);\n\n// Initialize\nawait web3auth.init();\n\nconst signInWithTwitter = async (): Promise<UserCredential> => {\n    try {\n      const app = initializeApp(firebaseConfig);\n      const auth = getAuth(app);\n      const twitterProvider = new TwitterAuthProvider();\n      const res = await signInWithPopup(auth, twitterProvider);\n      console.log(res);\n      return res;\n    } catch (err) {\n      console.error(err);\n      throw err;\n    }\n  };\n\nconst loginRes = await signInWithTwitter();\n\nconst idToken = await loginRes.user.getIdToken(true);\n\n// Login with Twitter / X\nawait web3auth.connectTo(WALLET_ADAPTERS.OPENLOGIN, {\n  WALLET_ADAPTERS.OPENLOGIN,\n  {\n    loginProvider: "jwt",\n    extraLoginOptions: {\n      id_token: idToken,\n      verifierIdField: "sub",\n    },\n  }\n});\n'})})}),(0,r.jsx)(s.Z,{value:"sfa",children:(0,r.jsx)(t.pre,{children:(0,r.jsx)(t.code,{className:"language-tsx",children:'import { Web3Auth } from "@web3auth/single-factor-auth";\nimport { ADAPTER_EVENTS, CHAIN_NAMESPACES, IProvider } from "@web3auth/base";\nimport { EthereumPrivateKeyProvider } from "@web3auth/ethereum-provider";\nimport { TwitterAuthProvider, getAuth, signInWithPopup, UserCredential } from "firebase/auth";\n\nconst clientId = "BPi5PB_UiIZ-cPz1GtV5i1I2iOSOHuimiXBI0e-Oe_u6X3oVAbCiAZOTEBtTXw4tsluTITPqA8zMsfxIKMjiqNQ"; // get from https://dashboard.web3auth.io\n\nconst verifier = "w3a-firebase-demo";\n\nconst chainConfig = {\n  chainNamespace: CHAIN_NAMESPACES.EIP155,\n  chainId: "0x1", // Please use 0x1 for Mainnet\n  rpcTarget: "https://rpc.ankr.com/eth",\n  displayName: "Ethereum Mainnet",\n  blockExplorer: "https://etherscan.io/",\n  ticker: "ETH",\n  tickerName: "Ethereum",\n};\n\nconst web3auth = new Web3Auth({\n  clientId, // Get your Client ID from Web3Auth Dashboard\n  web3AuthNetwork: "sapphire_mainnet",\n});\n\nconst privateKeyProvider = new EthereumPrivateKeyProvider({\n  config: { chainConfig },\n});\n\nawait web3auth.init(privateKeyProvider);\n\nconst signInWithTwitter = async (): Promise<UserCredential> => {\n  try {\n    const app = initializeApp(firebaseConfig);\n    const auth = getAuth(app);\n    const twitterProvider = new TwitterAuthProvider();\n    const res = await signInWithPopup(auth, twitterProvider);\n    console.log(res);\n    return res;\n  } catch (err) {\n    console.error(err);\n    throw err;\n  }\n};\n\nconst loginRes = await signInWithTwitter();\n\nconst idToken = await loginRes.user.getIdToken(true);\n// parse the id token to get the user info\nconst userInfo = parseToken(idToken); // parseToken is a function to parse the id token\n\nconst web3authProvider = await web3auth.connect({\n  verifier,\n  verifierId: userInfo.sub,\n  idToken,\n});\n'})})}),(0,r.jsx)(s.Z,{value:"tkey",children:(0,r.jsx)(t.pre,{children:(0,r.jsx)(t.code,{className:"language-tsx",children:'import ThresholdKey from "@tkey/core";\nimport SFAServiceProvider from "@tkey/service-provider-sfa";\nimport TorusStorageLayer from "@tkey/storage-layer-torus";\nimport { ShareSerializationModule } from "@tkey/share-serialization";\nimport { SfaServiceProvider } from "@tkey/service-provider-sfa";\nimport { WebStorageModule } from "@tkey/web-storage";\nimport { Web3 } from "web3";\nimport { EthereumPrivateKeyProvider } from "@web3auth/ethereum-provider";\nimport { IProvider } from "@web3auth/base";\nimport { TwitterAuthProvider, getAuth, signInWithPopup, UserCredential } from "firebase/auth";\n\nconst clientId = "BPi5PB_UiIZ-cPz1GtV5i1I2iOSOHuimiXBI0e-Oe_u6X3oVAbCiAZOTEBtTXw4tsluTITPqA8zMsfxIKMjiqNQ"; // get from https://dashboard.web3auth.io\n\nconst verifier = "w3a-firebase-demo";\n\n// Configuration of Service Provider\nconst serviceProvider = new SFAServiceProvider({ web3AuthOptions });\n\n// Instantiation of Storage Layer\nconst storageLayer = new TorusStorageLayer({\n  hostUrl: "https://metadata.tor.us",\n});\n\n// Configuration of Modules\nconst webStorage = new WebStorageModule();\nconst shareSerialization = new ShareSerializationModule();\n\n// Instantiation of tKey\nconst tKey = new ThresholdKey({\n  serviceProvider,\n  storageLayer,\n  modules: {\n    shareSerialization,\n    webStorage,\n  },\n});\n\n// Initialization of private key provider\nconst privateKeyProvider = new EthereumPrivateKeyProvider({\n  config: {\n    chainConfig,\n  },\n});\n\nawait (tKey.serviceProvider as SfaServiceProvider).init(privateKeyProvider);\n\n// login with Firebase\nconst signInWithTwitter = async (): Promise<UserCredential> => {\n  try {\n    const app = initializeApp(firebaseConfig);\n    const auth = getAuth(app);\n    const twitterProvider = new TwitterAuthProvider();\n    const res = await signInWithPopup(auth, twitterProvider);\n    console.log(res);\n    return res;\n  } catch (err) {\n    console.error(err);\n    throw err;\n  }\n};\n\nconst loginRes = await signInWithTwitter();\n\nconst idToken = await loginRes.user.getIdToken(true);\nconst userInfo = parseToken(idToken); // parseToken is a function to parse the id token\n\nawait (tKey.serviceProvider as SfaServiceProvider).connect({\n  verifier,\n  verifierId: userInfo.sub,\n  idToken,\n});\n\nawait tKey.initialize();\n'})})})]}),"\n",(0,r.jsx)(t.admonition,{title:"Example",type:"tip",children:(0,r.jsxs)(t.p,{children:["You can find a working example of\n",(0,r.jsx)(t.a,{href:"https://github.com/Web3Auth/web3auth-pnp-examples/blob/main/web-no-modal-sdk/custom-authentication/single-verifier-examples/firebase-no-modal-example/src/App.tsx",children:(0,r.jsx)(t.strong,{children:"Twitter login via Firebase with Web3Auth here"})}),"."]})})]})}function m(e={}){const{wrapper:t}={...(0,i.a)(),...e.components};return t?(0,r.jsx)(t,{...e,children:(0,r.jsx)(p,{...e})}):p(e)}},85162:(e,t,n)=>{n.d(t,{Z:()=>a});n(67294);var r=n(36905);const i={tabItem:"tabItem_Ymn6"};var o=n(85893);function a(e){let{children:t,hidden:n,className:a}=e;return(0,o.jsx)("div",{role:"tabpanel",className:(0,r.Z)(i.tabItem,a),hidden:n,children:t})}},74866:(e,t,n)=>{n.d(t,{Z:()=>A});var r=n(67294),i=n(36905),o=n(12466),a=n(16550),s=n(20469),l=n(91980),c=n(67392),d=n(50012);function h(e){return r.Children.toArray(e).filter((e=>"\n"!==e)).map((e=>{if(!e||(0,r.isValidElement)(e)&&function(e){const{props:t}=e;return!!t&&"object"==typeof t&&"value"in t}(e))return e;throw new Error(`Docusaurus error: Bad <Tabs> child <${"string"==typeof e.type?e.type:e.type.name}>: all children of the <Tabs> component should be <TabItem>, and every <TabItem> should have a unique "value" prop.`)}))?.filter(Boolean)??[]}function u(e){const{values:t,children:n}=e;return(0,r.useMemo)((()=>{const e=t??function(e){return h(e).map((e=>{let{props:{value:t,label:n,attributes:r,default:i}}=e;return{value:t,label:n,attributes:r,default:i}}))}(n);return function(e){const t=(0,c.l)(e,((e,t)=>e.value===t.value));if(t.length>0)throw new Error(`Docusaurus error: Duplicate values "${t.map((e=>e.value)).join(", ")}" found in <Tabs>. Every value needs to be unique.`)}(e),e}),[t,n])}function p(e){let{value:t,tabValues:n}=e;return n.some((e=>e.value===t))}function m(e){let{queryString:t=!1,groupId:n}=e;const i=(0,a.k6)(),o=function(e){let{queryString:t=!1,groupId:n}=e;if("string"==typeof t)return t;if(!1===t)return null;if(!0===t&&!n)throw new Error('Docusaurus error: The <Tabs> component groupId prop is required if queryString=true, because this value is used as the search param name. You can also provide an explicit value such as queryString="my-search-param".');return n??null}({queryString:t,groupId:n});return[(0,l._X)(o),(0,r.useCallback)((e=>{if(!o)return;const t=new URLSearchParams(i.location.search);t.set(o,e),i.replace({...i.location,search:t.toString()})}),[o,i])]}function f(e){const{defaultValue:t,queryString:n=!1,groupId:i}=e,o=u(e),[a,l]=(0,r.useState)((()=>function(e){let{defaultValue:t,tabValues:n}=e;if(0===n.length)throw new Error("Docusaurus error: the <Tabs> component requires at least one <TabItem> children component");if(t){if(!p({value:t,tabValues:n}))throw new Error(`Docusaurus error: The <Tabs> has a defaultValue "${t}" but none of its children has the corresponding value. Available values are: ${n.map((e=>e.value)).join(", ")}. If you intend to show no default tab, use defaultValue={null} instead.`);return t}const r=n.find((e=>e.default))??n[0];if(!r)throw new Error("Unexpected error: 0 tabValues");return r.value}({defaultValue:t,tabValues:o}))),[c,h]=m({queryString:n,groupId:i}),[f,b]=function(e){let{groupId:t}=e;const n=function(e){return e?`docusaurus.tab.${e}`:null}(t),[i,o]=(0,d.Nk)(n);return[i,(0,r.useCallback)((e=>{n&&o.set(e)}),[n,o])]}({groupId:i}),g=(()=>{const e=c??f;return p({value:e,tabValues:o})?e:null})();(0,s.Z)((()=>{g&&l(g)}),[g]);return{selectedValue:a,selectValue:(0,r.useCallback)((e=>{if(!p({value:e,tabValues:o}))throw new Error(`Can't select invalid tab value=${e}`);l(e),h(e),b(e)}),[h,b,o]),tabValues:o}}var b=n(72389);const g={tabList:"tabList__CuJ",tabItem:"tabItem_LNqP"};var w=n(85893);function v(e){let{className:t,block:n,selectedValue:r,selectValue:a,tabValues:s}=e;const l=[],{blockElementScrollPositionUntilNextRender:c}=(0,o.o5)(),d=e=>{const t=e.currentTarget,n=l.indexOf(t),i=s[n].value;i!==r&&(c(t),a(i))},h=e=>{let t=null;switch(e.key){case"Enter":d(e);break;case"ArrowRight":{const n=l.indexOf(e.currentTarget)+1;t=l[n]??l[0];break}case"ArrowLeft":{const n=l.indexOf(e.currentTarget)-1;t=l[n]??l[l.length-1];break}}t?.focus()};return(0,w.jsx)("ul",{role:"tablist","aria-orientation":"horizontal",className:(0,i.Z)("tabs",{"tabs--block":n},t),children:s.map((e=>{let{value:t,label:n,attributes:o}=e;return(0,w.jsx)("li",{role:"tab",tabIndex:r===t?0:-1,"aria-selected":r===t,ref:e=>l.push(e),onKeyDown:h,onClick:d,...o,className:(0,i.Z)("tabs__item",g.tabItem,o?.className,{"tabs__item--active":r===t}),children:n??t},t)}))})}function x(e){let{lazy:t,children:n,selectedValue:i}=e;const o=(Array.isArray(n)?n:[n]).filter(Boolean);if(t){const e=o.find((e=>e.props.value===i));return e?(0,r.cloneElement)(e,{className:"margin-top--md"}):null}return(0,w.jsx)("div",{className:"margin-top--md",children:o.map(((e,t)=>(0,r.cloneElement)(e,{key:t,hidden:e.props.value!==i})))})}function j(e){const t=f(e);return(0,w.jsxs)("div",{className:(0,i.Z)("tabs-container",g.tabList),children:[(0,w.jsx)(v,{...e,...t}),(0,w.jsx)(x,{...e,...t})]})}function A(e){const t=(0,b.Z)();return(0,w.jsx)(j,{...e,children:h(e.children)},String(t))}},88699:(e,t,n)=>{n.d(t,{Z:()=>r});const r=n.p+"assets/images/create-verifier-auth0-filled-common-d138f69a9802bc60dc68484d3ea7e500.png"},47407:(e,t,n)=>{n.d(t,{Z:()=>r});const r=n.p+"assets/images/create-verifier-auth0-unfilled-3e776a3ff9d8a7d8d9574238180e5209.png"},87047:(e,t,n)=>{n.d(t,{Z:()=>r});const r=n.p+"assets/images/create-verifier-auth0-d3d29d61412cd450daca94128c4849bd.png"},45025:(e,t,n)=>{n.d(t,{Z:()=>r});const r=n.p+"assets/images/create-verifier-custom-jwt-filled-77ef7ca581ae023543a09a9515367dba.png"},50473:(e,t,n)=>{n.d(t,{Z:()=>r});const r=n.p+"assets/images/create-verifier-custom-jwt-ebb56e916d8d8ae86a97d4a95b0bbe1b.png"},6821:(e,t,n)=>{n.d(t,{Z:()=>r});const r=n.p+"assets/images/create-verifier-google-148f3865b67c367b130d345a89b74fc7.png"},11151:(e,t,n)=>{n.d(t,{Z:()=>s,a:()=>a});var r=n(67294);const i={},o=r.createContext(i);function a(e){const t=r.useContext(o);return r.useMemo((function(){return"function"==typeof e?e(t):{...t,...e}}),[t,e])}function s(e){let t;return t=e.disableParentContext?"function"==typeof e.components?e.components(i):e.components||i:a(e.components),r.createElement(o.Provider,{value:t},e.children)}}}]);