"use strict";(self.webpackChunkweb3auth_docs=self.webpackChunkweb3auth_docs||[]).push([[35800],{45300:(e,n,t)=>{t.d(n,{ZP:()=>l});var o=t(85893),i=t(11151),r=t(85162),a=t(74866);function s(e){const n={code:"code",pre:"pre",...(0,i.a)(),...e.components};return(0,o.jsxs)(a.Z,{defaultValue:"google",values:[{label:"Google",value:"google"},{label:"Facebook",value:"facebook"},{label:"Discord",value:"discord"},{label:"Twitch",value:"twitch"}],children:[(0,o.jsx)(r.Z,{value:"google",children:(0,o.jsx)(n.pre,{children:(0,o.jsx)(n.code,{className:"language-tsx",children:'import OpenloginAdapter from "@web3auth/openlogin-adapter";\n\nconst openloginAdapter = new OpenloginAdapter({\n  adapterSettings: {\n    clientId, //Optional - Provide only if you haven\'t provided it in the Web3Auth Instantiation Code\n    uxMode: "popup",\n    // highlight-start\n    loginConfig: {\n      // Google login\n      google: {\n        verifier: "YOUR_GOOGLE_VERIFIER_NAME", // Please create a verifier on the developer dashboard and pass the name here\n        typeOfLogin: "google", // Pass on the login provider of the verifier you\'ve created\n        clientId: "GOOGLE_CLIENT_ID.apps.googleusercontent.com", // Pass on the clientId of the login provider here - Please note this differs from the Web3Auth ClientID. This is the JWT Client ID\n      },\n    },\n    // highlight-end\n  },\n  privateKeyProvider,\n});\nweb3auth.configureAdapter(openloginAdapter);\n'})})}),(0,o.jsx)(r.Z,{value:"facebook",children:(0,o.jsx)(n.pre,{children:(0,o.jsx)(n.code,{className:"language-tsx",children:'import OpenloginAdapter from "@web3auth/openlogin-adapter";\n\nconst openloginAdapter = new OpenloginAdapter({\n  adapterSettings: {\n    clientId, //Optional - Provide only if you haven\'t provided it in the Web3Auth Instantiation Code\n    uxMode: "popup",\n    // highlight-start\n    loginConfig: {\n      // Facebook login\n      facebook: {\n        verifier: "YOUR_FACEBOOK_VERIFIER_NAME", // Please create a verifier on the developer dashboard and pass the name here\n        typeOfLogin: "facebook", // Pass on the login provider of the verifier you\'ve created\n        clientId: "FACEBOOK_CLIENT_ID_1234567890", // Pass on the clientId of the login provider here - Please note this differs from the Web3Auth ClientID. This is the JWT Client ID\n      },\n    },\n    // highlight-end\n  },\n  privateKeyProvider,\n});\nweb3auth.configureAdapter(openloginAdapter);\n'})})}),(0,o.jsx)(r.Z,{value:"discord",children:(0,o.jsx)(n.pre,{children:(0,o.jsx)(n.code,{className:"language-tsx",children:'import OpenloginAdapter from "@web3auth/openlogin-adapter";\n\nconst openloginAdapter = new OpenloginAdapter({\n  adapterSettings: {\n    clientId, //Optional - Provide only if you haven\'t provided it in the Web3Auth Instantiation Code\n    uxMode: "popup",\n    // highlight-start\n    loginConfig: {\n      // Discord login\n      discord: {\n        verifier: "YOUR_DISCORD_VERIFIER_NAME", // Please create a verifier on the developer dashboard and pass the name here\n        typeOfLogin: "discord", // Pass on the login provider of the verifier you\'ve created\n        clientId: "DISCORD_CLIENT_ID_1234567890", //use your app client id you got from discord\n      },\n    },\n    // highlight-end\n  },\n  privateKeyProvider,\n});\nweb3auth.configureAdapter(openloginAdapter);\n'})})}),(0,o.jsx)(r.Z,{value:"twitch",children:(0,o.jsx)(n.pre,{children:(0,o.jsx)(n.code,{className:"language-tsx",children:'import OpenloginAdapter from "@web3auth/openlogin-adapter";\n\nconst openloginAdapter = new OpenloginAdapter({\n  adapterSettings: {\n    clientId, //Optional - Provide only if you haven\'t provided it in the Web3Auth Instantiation Code\n    uxMode: "popup",\n    // highlight-start\n    loginConfig: {\n      // Facebook login\n      facebook: {\n        verifier: "YOUR_TWITCH_VERIFIER_NAME", // Please create a verifier on the developer dashboard and pass the name here\n        typeOfLogin: "twitch", // Pass on the login provider of the verifier you\'ve created\n        clientId: "TWITCH_CLIENT_ID_1234567890", //use your app client id you got from twitch\n      },\n    },\n    // highlight-end\n  },\n  privateKeyProvider,\n});\nweb3auth.configureAdapter(openloginAdapter);\n'})})})]})}function l(e={}){const{wrapper:n}={...(0,i.a)(),...e.components};return n?(0,o.jsx)(n,{...e,children:(0,o.jsx)(s,{...e})}):s(e)}},78709:(e,n,t)=>{t.d(n,{ZP:()=>l});var o=t(85893),i=t(11151),r=t(85162),a=t(74866);function s(e){const n={a:"a",code:"code",p:"p",pre:"pre",table:"table",tbody:"tbody",td:"td",th:"th",thead:"thead",tr:"tr",...(0,i.a)(),...e.components};return(0,o.jsxs)(a.Z,{defaultValue:"table",values:[{label:"Table",value:"table"},{label:"Type Declarations",value:"type"}],children:[(0,o.jsxs)(r.Z,{value:"table",children:[(0,o.jsx)(n.p,{children:(0,o.jsx)(n.code,{children:'loginConfig: { "identifier of social login": { params } }'})}),(0,o.jsx)(n.p,{children:(0,o.jsx)(n.code,{children:"params"})}),(0,o.jsxs)(n.table,{children:[(0,o.jsx)(n.thead,{children:(0,o.jsxs)(n.tr,{children:[(0,o.jsx)(n.th,{children:"Parameter"}),(0,o.jsx)(n.th,{children:"Type"}),(0,o.jsx)(n.th,{children:"Description"}),(0,o.jsx)(n.th,{children:"Mandatory"})]})}),(0,o.jsxs)(n.tbody,{children:[(0,o.jsxs)(n.tr,{children:[(0,o.jsx)(n.td,{children:(0,o.jsx)(n.code,{children:"verifier"})}),(0,o.jsx)(n.td,{children:(0,o.jsx)(n.code,{children:"string"})}),(0,o.jsxs)(n.td,{children:["Identifier for the Verifier you created on the ",(0,o.jsx)(n.a,{href:"https://dashboard.web3auth.io",children:"Web3Auth Developer Dashboard"})]}),(0,o.jsx)(n.td,{children:"Yes"})]}),(0,o.jsxs)(n.tr,{children:[(0,o.jsx)(n.td,{children:(0,o.jsx)(n.code,{children:"typeOfLogin"})}),(0,o.jsx)(n.td,{children:(0,o.jsx)(n.code,{children:"TypeOfLogin"})}),(0,o.jsxs)(n.td,{children:["Choose your type of social login. Select from the list: ",(0,o.jsx)(n.code,{children:"google"}),", ",(0,o.jsx)(n.code,{children:"facebook"}),", ",(0,o.jsx)(n.code,{children:"twitter"}),", ",(0,o.jsx)(n.code,{children:"reddit"}),", ",(0,o.jsx)(n.code,{children:"discord"}),", ",(0,o.jsx)(n.code,{children:"twitch"}),", ",(0,o.jsx)(n.code,{children:"apple"}),", ",(0,o.jsx)(n.code,{children:"line"}),", ",(0,o.jsx)(n.code,{children:"github"}),", ",(0,o.jsx)(n.code,{children:"kakao"}),", ",(0,o.jsx)(n.code,{children:"linkedin"}),", ",(0,o.jsx)(n.code,{children:"weibo"}),", ",(0,o.jsx)(n.code,{children:"wechat"})]}),(0,o.jsx)(n.td,{children:"Yes"})]}),(0,o.jsxs)(n.tr,{children:[(0,o.jsx)(n.td,{children:(0,o.jsx)(n.code,{children:"name"})}),(0,o.jsx)(n.td,{children:(0,o.jsx)(n.code,{children:"string"})}),(0,o.jsx)(n.td,{children:"Display Name. If not provided, we use the default for openlogin app"}),(0,o.jsx)(n.td,{children:"No"})]}),(0,o.jsxs)(n.tr,{children:[(0,o.jsx)(n.td,{children:(0,o.jsx)(n.code,{children:"description?"})}),(0,o.jsx)(n.td,{children:(0,o.jsx)(n.code,{children:"string"})}),(0,o.jsx)(n.td,{children:"Description for button. If provided, it renders as a full-length button. else, icon button"}),(0,o.jsx)(n.td,{children:"No"})]}),(0,o.jsxs)(n.tr,{children:[(0,o.jsx)(n.td,{children:(0,o.jsx)(n.code,{children:"clientId?"})}),(0,o.jsx)(n.td,{children:(0,o.jsx)(n.code,{children:"string"})}),(0,o.jsx)(n.td,{children:"Custom client_id for the corresponding social provider. This is needed for connecting to your account. If not provided, we use the default for openlogin app"}),(0,o.jsx)(n.td,{children:"No"})]}),(0,o.jsxs)(n.tr,{children:[(0,o.jsx)(n.td,{children:(0,o.jsx)(n.code,{children:"verifierSubIdentifier?"})}),(0,o.jsx)(n.td,{children:(0,o.jsx)(n.code,{children:"string"})}),(0,o.jsx)(n.td,{children:"Sub identifier - used in case of creation of aggregate verifiers"}),(0,o.jsx)(n.td,{children:"No"})]}),(0,o.jsxs)(n.tr,{children:[(0,o.jsx)(n.td,{children:(0,o.jsx)(n.code,{children:"logoHover?"})}),(0,o.jsx)(n.td,{children:(0,o.jsx)(n.code,{children:"string"})}),(0,o.jsx)(n.td,{children:"Logo to be shown on mouse hover. If not provided, we use the default for openlogin app"}),(0,o.jsx)(n.td,{children:"No"})]}),(0,o.jsxs)(n.tr,{children:[(0,o.jsx)(n.td,{children:(0,o.jsx)(n.code,{children:"logoLight?"})}),(0,o.jsx)(n.td,{children:(0,o.jsx)(n.code,{children:"string"})}),(0,o.jsx)(n.td,{children:"Logo to be shown on a light background (light mode). If not provided, we use the default for openlogin app"}),(0,o.jsx)(n.td,{children:"No"})]}),(0,o.jsxs)(n.tr,{children:[(0,o.jsx)(n.td,{children:(0,o.jsx)(n.code,{children:"logoDark?"})}),(0,o.jsx)(n.td,{children:(0,o.jsx)(n.code,{children:"string"})}),(0,o.jsx)(n.td,{children:"Logo to be shown on a dark background (dark mode). If not provided, we use the default for openlogin app"}),(0,o.jsx)(n.td,{children:"No"})]}),(0,o.jsxs)(n.tr,{children:[(0,o.jsx)(n.td,{children:(0,o.jsx)(n.code,{children:"mainOption?"})}),(0,o.jsx)(n.td,{children:(0,o.jsx)(n.code,{children:"boolean"})}),(0,o.jsx)(n.td,{children:"Show login button on the main list"}),(0,o.jsx)(n.td,{children:"No"})]}),(0,o.jsxs)(n.tr,{children:[(0,o.jsx)(n.td,{children:(0,o.jsx)(n.code,{children:"showOnModal?"})}),(0,o.jsx)(n.td,{children:(0,o.jsx)(n.code,{children:"boolean"})}),(0,o.jsx)(n.td,{children:"Whether to show the login button on modal or not"}),(0,o.jsx)(n.td,{})]}),(0,o.jsxs)(n.tr,{children:[(0,o.jsx)(n.td,{children:(0,o.jsx)(n.code,{children:"showOnDesktop"})}),(0,o.jsx)(n.td,{children:(0,o.jsx)(n.code,{children:"boolean"})}),(0,o.jsx)(n.td,{children:"Whether to show the login button on desktop"}),(0,o.jsx)(n.td,{children:"No"})]}),(0,o.jsxs)(n.tr,{children:[(0,o.jsx)(n.td,{children:(0,o.jsx)(n.code,{children:"showOnMobile?"})}),(0,o.jsx)(n.td,{children:(0,o.jsx)(n.code,{children:"boolean"})}),(0,o.jsx)(n.td,{children:"Whether to show the login button on mobile"}),(0,o.jsx)(n.td,{children:"No"})]}),(0,o.jsxs)(n.tr,{children:[(0,o.jsx)(n.td,{children:(0,o.jsx)(n.code,{children:"showOnSocialBackupFactor?"})}),(0,o.jsx)(n.td,{children:(0,o.jsx)(n.code,{children:"boolean"})}),(0,o.jsx)(n.td,{children:"If we are using social logins as a backup factor, then this option will be used to show the type of social login on the social backup login screen."}),(0,o.jsx)(n.td,{children:"No"})]}),(0,o.jsxs)(n.tr,{children:[(0,o.jsx)(n.td,{children:(0,o.jsx)(n.code,{children:"jwtParameters?"})}),(0,o.jsx)(n.td,{children:(0,o.jsx)(n.code,{children:"JwtParameters"})}),(0,o.jsx)(n.td,{children:"Custom jwt parameters to configure the login. Useful for Auth0 configuration"}),(0,o.jsx)(n.td,{children:"No"})]})]})]})]}),(0,o.jsx)(r.Z,{value:"type",children:(0,o.jsx)(n.pre,{children:(0,o.jsx)(n.code,{className:"language-tsx",children:'export type LoginConfig = Record<\n  string,\n  {\n    verifier: string;\n    /**\n     * The type of login. Refer to enum `LOGIN_TYPE`\n     */\n    typeOfLogin: TypeOfLogin;\n    /**\n     * Display Name. If not provided, we use the default for openlogin app\n     */\n    name?: string;\n    /**\n     * Description for button. If provided, it renders as a full length button. else, icon button\n     */\n    description?: string;\n    /**\n     * Custom client_id. If not provided, we use the default for openlogin app\n     */\n    clientId?: string;\n    verifierSubIdentifier?: string;\n    /**\n     * Logo to be shown on mouse hover. If not provided, we use the default for openlogin app\n     */\n    logoHover?: string;\n    /**\n     * Logo to be shown on dark background (dark theme). If not provided, we use the default for openlogin app\n     */\n    logoLight?: string;\n    /**\n     * Logo to be shown on light background (light theme). If not provided, we use the default for openlogin app\n     */\n    logoDark?: string;\n    /**\n     * Show login button on the main list\n     */\n    mainOption?: boolean;\n    /**\n     * Whether to show the login button on modal or not\n     */\n    showOnModal?: boolean;\n    /**\n     * Whether to show the login button on desktop\n     */\n    showOnDesktop?: boolean;\n    /**\n     * Whether to show the login button on mobile\n     */\n    showOnMobile?: boolean;\n    /**\n     * If we are using social logins as a backup factor,\n     * then this option will be used to show the type of social login\n     * on the social backup login screen.\n     */\n    showOnSocialBackupFactor?: boolean;\n    /**\n     * Custom jwt parameters to configure the login. Useful for Auth0 configuration\n     */\n    jwtParameters?: JwtParameters;\n  }\n>;\n\nexport type TypeOfLogin =\n  | "google"\n  | "facebook"\n  | "reddit"\n  | "discord"\n  | "twitch"\n  | "apple"\n  | "github"\n  | "linkedin"\n  | "twitter"\n  | "weibo"\n  | "line"\n  | "email_password"\n  | "passwordless"\n  | "jwt"\n  | "webauthn";\n'})})})]})}function l(e={}){const{wrapper:n}={...(0,i.a)(),...e.components};return n?(0,o.jsx)(n,{...e,children:(0,o.jsx)(s,{...e})}):s(e)}},44969:(e,n,t)=>{t.r(n),t.d(n,{assets:()=>u,contentTitle:()=>c,default:()=>f,frontMatter:()=>d,metadata:()=>h,toc:()=>p});var o=t(85893),i=t(11151),r=t(74866),a=t(85162),s=t(45300),l=t(78709);const d={title:"Custom Authentication with PnP Web Modal SDK",sidebar_label:"Custom Authentication",displayed_sidebar:"sdk",description:"@web3auth/modal Custom Authentication | Documentation - Web3Auth"},c=void 0,h={id:"sdk/pnp/web/modal/custom-authentication",title:"Custom Authentication with PnP Web Modal SDK",description:"@web3auth/modal Custom Authentication | Documentation - Web3Auth",source:"@site/docs/sdk/pnp/web/modal/custom-authentication.mdx",sourceDirName:"sdk/pnp/web/modal",slug:"/sdk/pnp/web/modal/custom-authentication",permalink:"/docs/sdk/pnp/web/modal/custom-authentication",draft:!1,unlisted:!1,editUrl:"https://github.com/web3auth/web3auth-docs/edit/master/docs/sdk/pnp/web/modal/custom-authentication.mdx",tags:[],version:"current",frontMatter:{title:"Custom Authentication with PnP Web Modal SDK",sidebar_label:"Custom Authentication",displayed_sidebar:"sdk",description:"@web3auth/modal Custom Authentication | Documentation - Web3Auth"},sidebar:"sdk",previous:{title:"Whitelabel",permalink:"/docs/sdk/pnp/web/modal/whitelabel"},next:{title:"Multi Factor Authentication",permalink:"/docs/sdk/pnp/web/modal/mfa"}},u={},p=[{value:"Installing Openlogin Adapter",id:"installing-openlogin-adapter",level:2},{value:"Configuring Openlogin Adapter",id:"configuring-openlogin-adapter",level:2},{value:"<code>loginConfig</code>",id:"loginconfig",level:4},{value:"Example",id:"example",level:2}];function g(e){const n={a:"a",admonition:"admonition",code:"code",h2:"h2",h4:"h4",hr:"hr",p:"p",pre:"pre",strong:"strong",...(0,i.a)(),...e.components};return(0,o.jsxs)(o.Fragment,{children:[(0,o.jsx)(n.p,{children:"Custom Authentication is a way to authenticate users with your own custom authentication service. For example, while authenticating with Google, you\nhave the ability to use your own Google Client ID and Dashboard to authenticate users directly."}),"\n",(0,o.jsx)(n.admonition,{type:"note",children:(0,o.jsxs)(n.p,{children:["This is a paid feature and the the minimum ",(0,o.jsx)(n.a,{href:"https://web3auth.io/pricing.html",children:"pricing plan"})," to use this SDK in a production environment is the\n",(0,o.jsx)(n.strong,{children:"Growth Plan"}),". You can use this feature in the development environment for free."]})}),"\n",(0,o.jsx)(n.admonition,{type:"warning",children:(0,o.jsxs)(n.p,{children:["For a Custom JWT based authentication services you need to use the ",(0,o.jsx)(n.a,{href:"/sdk/pnp/web/no-modal",children:(0,o.jsx)(n.code,{children:"Web3Auth Plug and Play No Modal SDK"})}),", since the Web3Auth\nModal will only help you configure the social logins present within the Modal UI."]})}),"\n",(0,o.jsxs)(n.p,{children:["For enabling this, you need ",(0,o.jsx)(n.a,{href:"/auth-provider-setup/verifiers",children:"Create a Verifier"})," from the ",(0,o.jsx)(n.strong,{children:"Custom Auth"})," section of the\n",(0,o.jsx)(n.a,{href:"https://dashboard.web3auth.io",children:"Web3Auth Developer Dashboard"})," with your desired configuration."]}),"\n",(0,o.jsx)(n.admonition,{type:"tip",children:(0,o.jsxs)(n.p,{children:["If you want to know more about setting up a verifier and how to use it, please refer to the\n",(0,o.jsx)(n.a,{href:"/pnp/features/custom-authentication",children:"Custom Authentication Documentation"}),"."]})}),"\n",(0,o.jsx)(n.h2,{id:"installing-openlogin-adapter",children:"Installing Openlogin Adapter"}),"\n",(0,o.jsx)(n.hr,{}),"\n",(0,o.jsxs)(n.p,{children:["Social logins in Web3Auth are enabled by the ",(0,o.jsx)(n.a,{href:"/sdk/pnp/web/adapters/openlogin",children:(0,o.jsx)(n.code,{children:"openlogin-adapter"})}),". Natively, it is already present and preconfigured\nwithin the Plug and Play SDK, but for custom configurations, you need to install the adapter package."]}),"\n",(0,o.jsxs)(r.Z,{groupId:"npm2yarn",children:[(0,o.jsx)(a.Z,{value:"npm",children:(0,o.jsx)(n.pre,{children:(0,o.jsx)(n.code,{className:"language-bash",children:"npm install --save @web3auth/openlogin-adapter\n"})})}),(0,o.jsx)(a.Z,{value:"yarn",label:"Yarn",children:(0,o.jsx)(n.pre,{children:(0,o.jsx)(n.code,{className:"language-bash",children:"yarn add @web3auth/openlogin-adapter\n"})})}),(0,o.jsx)(a.Z,{value:"pnpm",label:"pnpm",children:(0,o.jsx)(n.pre,{children:(0,o.jsx)(n.code,{className:"language-bash",children:"pnpm add @web3auth/openlogin-adapter\n"})})})]}),"\n",(0,o.jsx)(n.h2,{id:"configuring-openlogin-adapter",children:"Configuring Openlogin Adapter"}),"\n",(0,o.jsxs)(n.p,{children:["While instantiating the Openlogin Adapter, you can pass some configuration objects to the constructor. One of these configurations is the\n",(0,o.jsx)(n.code,{children:"adapterSettings"})," configuration which enables you to make changes in the adapter, enabling you to do things like Whitelabeling and Custom\nAuthentication among other things."]}),"\n",(0,o.jsx)(n.admonition,{type:"tip",children:(0,o.jsxs)(n.p,{children:["Checkout the ",(0,o.jsx)(n.a,{href:"/sdk/pnp/web/adapters/openlogin",children:(0,o.jsx)(n.code,{children:"openlogin-adapter"})})," SDK Reference for more details on different configurations you can pass for\ncustomisations."]})}),"\n",(0,o.jsxs)(n.p,{children:["Further, the ",(0,o.jsx)(n.code,{children:"loginConfig"})," parameter of the ",(0,o.jsx)(n.code,{children:"adapterSettings"})," configuration helps us to customise the social logins. Since we're using the\n",(0,o.jsx)(n.code,{children:"@web3auth/modal"}),", ie. the Plug and Play Modal SDK, the ",(0,o.jsx)(n.code,{children:"loginConfig"})," should be corresponding to the socials mentioned in the modal. This means you\ncan use your own authentication services for the following services:"]}),"\n",(0,o.jsxs)(n.p,{children:[(0,o.jsx)(n.code,{children:"google"})," | ",(0,o.jsx)(n.code,{children:"facebook"})," | ",(0,o.jsx)(n.code,{children:"discord"})," | ",(0,o.jsx)(n.code,{children:"twitch"})," |"]}),"\n",(0,o.jsx)(n.admonition,{type:"info",children:(0,o.jsx)(n.p,{children:"You can customise all or few of the social logins and other will remain default. You can also remove the ones you don't want using the whitelabeling\noption."})}),"\n",(0,o.jsx)(n.h4,{id:"loginconfig",children:(0,o.jsx)(n.code,{children:"loginConfig"})}),"\n",(0,o.jsxs)(n.p,{children:["The ",(0,o.jsx)(n.code,{children:"loginConfig"})," parameter of ",(0,o.jsx)(n.code,{children:"adapterSettings"})," in ",(0,o.jsx)(n.code,{children:"openlogin-adapter"})," contains the following properties:"]}),"\n",(0,o.jsx)(l.ZP,{}),"\n",(0,o.jsx)(n.h2,{id:"example",children:"Example"}),"\n",(0,o.jsxs)(n.p,{children:["Since we're using the ",(0,o.jsx)(n.code,{children:"@web3auth/modal"})," ie. the Plug and Play Modal SDK, the ",(0,o.jsx)(n.code,{children:"loginConfig"})," should be corresponding to the socials mentioned in the\nmodal. Here, we're customising Google and Facebook to be custom verified, rest all other socials will be default."]}),"\n",(0,o.jsx)(s.ZP,{})]})}function f(e={}){const{wrapper:n}={...(0,i.a)(),...e.components};return n?(0,o.jsx)(n,{...e,children:(0,o.jsx)(g,{...e})}):g(e)}},85162:(e,n,t)=>{t.d(n,{Z:()=>a});t(67294);var o=t(36905);const i={tabItem:"tabItem_Ymn6"};var r=t(85893);function a(e){let{children:n,hidden:t,className:a}=e;return(0,r.jsx)("div",{role:"tabpanel",className:(0,o.Z)(i.tabItem,a),hidden:t,children:n})}},74866:(e,n,t)=>{t.d(n,{Z:()=>y});var o=t(67294),i=t(36905),r=t(12466),a=t(16550),s=t(20469),l=t(91980),d=t(67392),c=t(50012);function h(e){return o.Children.toArray(e).filter((e=>"\n"!==e)).map((e=>{if(!e||(0,o.isValidElement)(e)&&function(e){const{props:n}=e;return!!n&&"object"==typeof n&&"value"in n}(e))return e;throw new Error(`Docusaurus error: Bad <Tabs> child <${"string"==typeof e.type?e.type:e.type.name}>: all children of the <Tabs> component should be <TabItem>, and every <TabItem> should have a unique "value" prop.`)}))?.filter(Boolean)??[]}function u(e){const{values:n,children:t}=e;return(0,o.useMemo)((()=>{const e=n??function(e){return h(e).map((e=>{let{props:{value:n,label:t,attributes:o,default:i}}=e;return{value:n,label:t,attributes:o,default:i}}))}(t);return function(e){const n=(0,d.l)(e,((e,n)=>e.value===n.value));if(n.length>0)throw new Error(`Docusaurus error: Duplicate values "${n.map((e=>e.value)).join(", ")}" found in <Tabs>. Every value needs to be unique.`)}(e),e}),[n,t])}function p(e){let{value:n,tabValues:t}=e;return t.some((e=>e.value===n))}function g(e){let{queryString:n=!1,groupId:t}=e;const i=(0,a.k6)(),r=function(e){let{queryString:n=!1,groupId:t}=e;if("string"==typeof n)return n;if(!1===n)return null;if(!0===n&&!t)throw new Error('Docusaurus error: The <Tabs> component groupId prop is required if queryString=true, because this value is used as the search param name. You can also provide an explicit value such as queryString="my-search-param".');return t??null}({queryString:n,groupId:t});return[(0,l._X)(r),(0,o.useCallback)((e=>{if(!r)return;const n=new URLSearchParams(i.location.search);n.set(r,e),i.replace({...i.location,search:n.toString()})}),[r,i])]}function f(e){const{defaultValue:n,queryString:t=!1,groupId:i}=e,r=u(e),[a,l]=(0,o.useState)((()=>function(e){let{defaultValue:n,tabValues:t}=e;if(0===t.length)throw new Error("Docusaurus error: the <Tabs> component requires at least one <TabItem> children component");if(n){if(!p({value:n,tabValues:t}))throw new Error(`Docusaurus error: The <Tabs> has a defaultValue "${n}" but none of its children has the corresponding value. Available values are: ${t.map((e=>e.value)).join(", ")}. If you intend to show no default tab, use defaultValue={null} instead.`);return n}const o=t.find((e=>e.default))??t[0];if(!o)throw new Error("Unexpected error: 0 tabValues");return o.value}({defaultValue:n,tabValues:r}))),[d,h]=g({queryString:t,groupId:i}),[f,x]=function(e){let{groupId:n}=e;const t=function(e){return e?`docusaurus.tab.${e}`:null}(n),[i,r]=(0,c.Nk)(t);return[i,(0,o.useCallback)((e=>{t&&r.set(e)}),[t,r])]}({groupId:i}),j=(()=>{const e=d??f;return p({value:e,tabValues:r})?e:null})();(0,s.Z)((()=>{j&&l(j)}),[j]);return{selectedValue:a,selectValue:(0,o.useCallback)((e=>{if(!p({value:e,tabValues:r}))throw new Error(`Can't select invalid tab value=${e}`);l(e),h(e),x(e)}),[h,x,r]),tabValues:r}}var x=t(72389);const j={tabList:"tabList__CuJ",tabItem:"tabItem_LNqP"};var b=t(85893);function m(e){let{className:n,block:t,selectedValue:o,selectValue:a,tabValues:s}=e;const l=[],{blockElementScrollPositionUntilNextRender:d}=(0,r.o5)(),c=e=>{const n=e.currentTarget,t=l.indexOf(n),i=s[t].value;i!==o&&(d(n),a(i))},h=e=>{let n=null;switch(e.key){case"Enter":c(e);break;case"ArrowRight":{const t=l.indexOf(e.currentTarget)+1;n=l[t]??l[0];break}case"ArrowLeft":{const t=l.indexOf(e.currentTarget)-1;n=l[t]??l[l.length-1];break}}n?.focus()};return(0,b.jsx)("ul",{role:"tablist","aria-orientation":"horizontal",className:(0,i.Z)("tabs",{"tabs--block":t},n),children:s.map((e=>{let{value:n,label:t,attributes:r}=e;return(0,b.jsx)("li",{role:"tab",tabIndex:o===n?0:-1,"aria-selected":o===n,ref:e=>l.push(e),onKeyDown:h,onClick:c,...r,className:(0,i.Z)("tabs__item",j.tabItem,r?.className,{"tabs__item--active":o===n}),children:t??n},n)}))})}function v(e){let{lazy:n,children:t,selectedValue:i}=e;const r=(Array.isArray(t)?t:[t]).filter(Boolean);if(n){const e=r.find((e=>e.props.value===i));return e?(0,o.cloneElement)(e,{className:"margin-top--md"}):null}return(0,b.jsx)("div",{className:"margin-top--md",children:r.map(((e,n)=>(0,o.cloneElement)(e,{key:n,hidden:e.props.value!==i})))})}function w(e){const n=f(e);return(0,b.jsxs)("div",{className:(0,i.Z)("tabs-container",j.tabList),children:[(0,b.jsx)(m,{...e,...n}),(0,b.jsx)(v,{...e,...n})]})}function y(e){const n=(0,x.Z)();return(0,b.jsx)(w,{...e,children:h(e.children)},String(n))}},11151:(e,n,t)=>{t.d(n,{Z:()=>s,a:()=>a});var o=t(67294);const i={},r=o.createContext(i);function a(e){const n=o.useContext(r);return o.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function s(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(i):e.components||i:a(e.components),o.createElement(r.Provider,{value:n},e.children)}}}]);