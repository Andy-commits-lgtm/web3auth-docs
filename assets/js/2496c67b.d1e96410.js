"use strict";(self.webpackChunkweb3auth_docs=self.webpackChunkweb3auth_docs||[]).push([[37691],{33448:(e,t,i)=>{i.r(t),i.d(t,{assets:()=>f,contentTitle:()=>u,default:()=>v,frontMatter:()=>h,metadata:()=>p,toc:()=>m});var n=i(85893),s=i(11151);const a=i.p+"assets/images/auth-network-1d81dc36217818b3d470e644e0cf41df.png";var r=i(14438);const o=i.p+"assets/images/node-architecture-e6790683a23aae469877bdb35f80a1e9.png",c=i.p+"assets/images/share-splitting-e19241ba70dd0671629d059fb84f34f7.png";var l=i(15655),d=i.n(l);const h={title:"Web3Auth Wallet Management Infrastructure",displayed_sidebar:"docs",description:"Web3Auth Wallet Management Infrastructure | Documentation - Web3Auth"},u=void 0,p={id:"infrastructure/infrastructure",title:"Web3Auth Wallet Management Infrastructure",description:"Web3Auth Wallet Management Infrastructure | Documentation - Web3Auth",source:"@site/docs/infrastructure/infrastructure.mdx",sourceDirName:"infrastructure",slug:"/infrastructure/",permalink:"/docs/infrastructure/",draft:!1,unlisted:!1,editUrl:"https://github.com/web3auth/web3auth-docs/edit/master/docs/infrastructure/infrastructure.mdx",tags:[],version:"current",frontMatter:{title:"Web3Auth Wallet Management Infrastructure",displayed_sidebar:"docs",description:"Web3Auth Wallet Management Infrastructure | Documentation - Web3Auth"},sidebar:"docs",previous:{title:"Web3Auth for dApps",permalink:"/docs/product-fit/web3auth-for-dapps"},next:{title:"MPC Architecture",permalink:"/docs/infrastructure/mpc-architecture"}},f={},m=[{value:"Overview",id:"overview",level:2},{value:"Web3Auth Infrastructure",id:"web3auth-infrastructure",level:2},{value:"t of n Distributed Model for Security and Uptime",id:"t-of-n-distributed-model-for-security-and-uptime",level:3},{value:"Regionally available services",id:"regionally-available-services",level:3},{value:"Horizonally scalable for billions",id:"horizonally-scalable-for-billions",level:3},{value:"Load expectation via Verifiers",id:"load-expectation-via-verifiers",level:3},{value:"Core Features and Benefits",id:"core-features-and-benefits",level:2},{value:"Self Custodial",id:"self-custodial",level:3},{value:"Familiar User Experience",id:"familiar-user-experience",level:3},{value:"Enhanced Key Recovery and Redundancy",id:"enhanced-key-recovery-and-redundancy",level:3},{value:"Incremental Security",id:"incremental-security",level:3},{value:"Versatility across Chains and Platforms",id:"versatility-across-chains-and-platforms",level:3},{value:"Resistance to Censorship",id:"resistance-to-censorship",level:3},{value:"Added security with Web3Auth Auth Network",id:"added-security-with-web3auth-auth-network",level:3},{value:"Privacy, User Data and Compliance",id:"privacy-user-data-and-compliance",level:2},{value:"Security Extensions",id:"security-extensions",level:2},{value:"Additional verification / checks",id:"additional-verification--checks",level:3},{value:"User defined access structures",id:"user-defined-access-structures",level:3}];function y(e){const t={a:"a",admonition:"admonition",code:"code",em:"em",h2:"h2",h3:"h3",li:"li",p:"p",strong:"strong",ul:"ul",...(0,s.a)(),...e.components};return(0,n.jsxs)(n.Fragment,{children:[(0,n.jsx)(t.p,{children:"Web3Auth's Wallet Infrastructure is designed to make managing cryptographic wallets intuitive, reducing onboarding times, increasing conversion and\nimproving security. It achieves this by distributing a user's private key across multiple key shares, forming a 'web of trust' that enables\nmulti-factor account handling. The system leverages Threshold Cryptography principles or MPC(Multi-Party Computation), where a user needs a threshold\nof 2 out of n key shares to access their private key or generate transaction signatures."}),"\n",(0,n.jsx)(t.p,{children:"One of the key advantages of this infrastructure is that it eliminates the need to store complete private keys anywhere, including databases, devices\nand participating nodes. Instead, the private key is distributed across the system in a non-custodial manner, reducing the risk of a single point of\nfailure and preventing potential losses due to device theft or loss."}),"\n",(0,n.jsx)(t.p,{children:"The design goals of Web3Auth's wallet infrastructure include:"}),"\n",(0,n.jsxs)(t.ul,{children:["\n",(0,n.jsx)(t.li,{children:"Seamless non-custodial wallet user experiences."}),"\n",(0,n.jsx)(t.li,{children:"Compatibility with existing authentication methods and blockchain ecosystems."}),"\n",(0,n.jsx)(t.li,{children:"Global performance and scalability to meet the demands of the Web3 market."}),"\n"]}),"\n",(0,n.jsx)(t.h2,{id:"overview",children:"Overview"}),"\n",(0,n.jsxs)(t.p,{children:["As we proceed further into the inner workings of Web3Auth, it's essential to take a step back and understand the understand the infrastructure that\nunderpins our entire system. Before moving forward, you may want to revisit the ",(0,n.jsx)(t.a,{href:"/how-web3auth-works",children:"How Web3Auth Works"})," section if you need a\nrefresher on the product and implementations. This section provides an overview of how our wallet management infrastructure operates. diving deeper\ninto our implementation of Shamir Secret Sharing (SSS) and Threshold Signature Scheme (TSS) based Multi-Party Computation (MPC) systems."]}),"\n",(0,n.jsx)(t.p,{children:"Here's a video explaining our SSS based Wallet Management Infrastructure."}),"\n",(0,n.jsx)(d(),{url:"https://www.youtube.com/watch?v=K8yWgtAFKNY",playing:!1,loop:!1,controls:!1,light:!0,style:{display:"block",maxHeight:"600px",margin:"10px auto"}}),"\n",(0,n.jsx)(t.admonition,{type:"note",children:(0,n.jsxs)(t.p,{children:["This video covers the basics of how Web3Auth's SSS based shallow MPC Wallet Management Infrastructure. Similar concepts apply for our TSS based full\nMPC Infrastructure as well, however, we can replace the part where key reconstructions happen with partial signature generations. The flow remains the\nsame, but the key is ",(0,n.jsx)(t.strong,{children:"never reconstructed"})]})}),"\n",(0,n.jsx)(t.p,{children:"In a typical 2 out of 3 (2/3) setup, the user is provided with three factors: OAuth Login Factor, Device Factor, and Backup/ 2FA Factor. Please note\nthat the threshold can increase for more security. It is dependent on the integrating application."}),"\n",(0,n.jsxs)(t.ul,{children:["\n",(0,n.jsxs)(t.li,{children:[(0,n.jsx)(t.strong,{children:"OAuth Login Factor"})," is managed and divided across Web3Auth's Auth Network and can be accessed through an OAuth login provider owned by the user,\nlike their Google account."]}),"\n",(0,n.jsxs)(t.li,{children:[(0,n.jsx)(t.strong,{children:"Device Factor"})," is stored on the user's device. The method of storage is specific to the device and system. For instance, on mobile devices, the\nfactor could be stored in device storage that's secured with biometrics."]}),"\n",(0,n.jsxs)(t.li,{children:[(0,n.jsx)(t.strong,{children:"Backup/ 2FA Factor"})," serves as a recovery share. It's an extra factor that the user can keep on a separate device, download, or base on user input\nwith sufficient entropy. This could include a password, security questions, or a hardware device, among other options."]}),"\n"]}),"\n",(0,n.jsx)("img",{style:{display:"block",maxHeight:"600px",margin:"20px auto"},src:r.Z,alt:"Showing How Web3Auth Key Generation works"}),"\n",(0,n.jsx)(t.h2,{id:"web3auth-infrastructure",children:"Web3Auth Infrastructure"}),"\n",(0,n.jsx)(t.p,{children:"Web3Auth Infrastucture is designed to manage a factor of a key for hundreds of millions of users. It utilizes a distributed security model that is\ninspired from Apple's iCloud and other highly performant distributed systems. The design of it revolves around achieving high guarantees for:"}),"\n",(0,n.jsxs)(t.ul,{children:["\n",(0,n.jsx)(t.li,{children:"A distributed multi-setup security model"}),"\n",(0,n.jsx)(t.li,{children:"Close to 100% uptime"}),"\n",(0,n.jsx)(t.li,{children:"Upscales and downscales to cater to spikes in load"}),"\n"]}),"\n",(0,n.jsx)(t.p,{children:"In order to meet these objectives, Web3Auth's Infra is designed to be a set of nodes."}),"\n",(0,n.jsx)("img",{style:{display:"block",maxHeight:"600px",margin:"20px auto"},src:c,alt:"Web3Auth Infrasturcture secures a factor of a users key"}),"\n",(0,n.jsx)(t.p,{children:(0,n.jsx)(t.em,{children:"Web3Auth Infrasturcture secures a factor of a users key"})}),"\n",(0,n.jsx)("img",{style:{display:"block",maxHeight:"600px",margin:"20px auto"},src:o,alt:"Architecture of a Node"}),"\n",(0,n.jsx)(t.p,{children:(0,n.jsx)(t.em,{children:"Architecture of a Node"})}),"\n",(0,n.jsx)(t.h3,{id:"t-of-n-distributed-model-for-security-and-uptime",children:"t of n Distributed Model for Security and Uptime"}),"\n",(0,n.jsx)(t.p,{children:"These nodes operate in a t of n security model, a user's factor (share) is further split into sub-shares and secured individually by each of these\nnodes. Threshold(t) number of nodes are able to sign signatures for users."}),"\n",(0,n.jsx)(t.p,{children:"In order to compromise this setup, one must compromise a total t of n setups. Similarly in order for the services to go down, n-t setups must go down\n(i.e. 2 nodes in a 3/5 setup). This is on a technical level very unlikley."}),"\n",(0,n.jsx)(t.h3,{id:"regionally-available-services",children:"Regionally available services"}),"\n",(0,n.jsx)(t.p,{children:"Signatures and login services are often expected to be low-latency sub 1.5s interactions from the user. To achieve that level of latency, each node\noperates clusters of instances in regions across the world. This includes operations in US-east, west, Singapore, South America, Africa, Europe east\nand west and ultimately is flexible."}),"\n",(0,n.jsx)(t.h3,{id:"horizonally-scalable-for-billions",children:"Horizonally scalable for billions"}),"\n",(0,n.jsx)(t.p,{children:"In each node, in each regional cluster, there runs an orchestration layer that operates multiple services. Services are spun up and down in different\nregions to cater to the load necessary for global applications."}),"\n",(0,n.jsx)(t.p,{children:"These clusters is orchistracted via a master coordinator that communicates with different nodes to understand the load that they should be receiving\nand coordinate on a distributed level."}),"\n",(0,n.jsx)(t.h3,{id:"load-expectation-via-verifiers",children:"Load expectation via Verifiers"}),"\n",(0,n.jsx)(t.p,{children:"Verifier contracts define the relationship between infrastructure and applications. It contain information about authentication parameters, as well as\nsupported methods for users. It acts as a long standing agreement between the application and nodes, and serves as a central point of reference for\nwallet front-ends that implement the user transaction functionality. It is also in charge of the submission and validation of user transactions (which\nis dependent on the authentication protocol parameters)."}),"\n",(0,n.jsx)(t.h2,{id:"core-features-and-benefits",children:"Core Features and Benefits"}),"\n",(0,n.jsx)(t.h3,{id:"self-custodial",children:"Self Custodial"}),"\n",(0,n.jsx)(t.p,{children:"With Web3Auth, the power to access and control their cryptographic key pair always remains in the hands of the user. Despite login services having\naccess to one share, they can never retrieve the user's private key independently."}),"\n",(0,n.jsx)(t.h3,{id:"familiar-user-experience",children:"Familiar User Experience"}),"\n",(0,n.jsx)(t.p,{children:"Web3Auth has been designed to closely mirror traditional Web 2.0 login flows, ensuring a seamless and user-friendly experience. This familiarity\nsignificantly enhances the user's experience and eases the onboarding process."}),"\n",(0,n.jsx)(t.h3,{id:"enhanced-key-recovery-and-redundancy",children:"Enhanced Key Recovery and Redundancy"}),"\n",(0,n.jsx)(t.p,{children:"Web3Auth incorporates a built-in redundancy feature for key recovery in the event of a lost device or share. Users can also refresh shares to revoke\nany lost shares. This approach is more secure than relying on a written-down seed phrase, where its loss leads to complete access to the private key.\nWith Web3Auth, losing a share is manageable as long as the user doesn't lose more than one share without refreshing the existing ones."}),"\n",(0,n.jsx)(t.h3,{id:"incremental-security",children:"Incremental Security"}),"\n",(0,n.jsx)(t.p,{children:"Users have the ability to incrementally enhance the security of their key by increasing the share threshold. For instance, the threshold can be raised\nfrom 2/3 to 3/4, with the addition of an extra authentication factor like a hardware device. This additional security layer might be crucial for users\nwho have large amounts of cryptocurrency linked to their private key."}),"\n",(0,n.jsx)(t.h3,{id:"versatility-across-chains-and-platforms",children:"Versatility across Chains and Platforms"}),"\n",(0,n.jsx)(t.p,{children:"Web3Auth interfaces seamlessly with a native cryptographic key pair, making it compatible with a wide range of cryptographic constructs across\ndifferent platforms and elliptic curves. The off-chain secret sharing and share refresh processes make Web3Auth a viable option for blockchains with\nlimited smart contract functionality."}),"\n",(0,n.jsx)(t.h3,{id:"resistance-to-censorship",children:"Resistance to Censorship"}),"\n",(0,n.jsx)(t.p,{children:"The 2/3 share threshold feature of Web3Auth safeguards against censorship by Torus nodes. Even if the nodes decline to return the user's private key\nshare after successful authentication, the user can still reconstruct their private key using their device share and recovery share."}),"\n",(0,n.jsx)(t.h3,{id:"added-security-with-web3auth-auth-network",children:"Added security with Web3Auth Auth Network"}),"\n",(0,n.jsx)(t.p,{children:"Web3Auth's social logins are backed by the Auth Network, an open-source wallet management network that safely splits and secures user wallets.\nComprised of validator nodes from geographically diverse businesses and institutions, the Torus Network aims to make blockchain technology accessible\nto billions of people."}),"\n",(0,n.jsxs)("div",{className:"text-image-column",children:[(0,n.jsxs)("div",{style:{flex:"1"},children:[(0,n.jsx)(t.p,{children:"Current node operators include"}),(0,n.jsxs)("ul",{children:[(0,n.jsx)("li",{children:"Binance"}),(0,n.jsx)("li",{children:"Ethereum Name Service"}),(0,n.jsx)("li",{children:"Etherscan"}),(0,n.jsx)("li",{children:"Polygon (MATIC)"}),(0,n.jsx)("li",{children:"Zilliqa"}),(0,n.jsx)("li",{children:"Tendermint"}),(0,n.jsx)("li",{children:"Ontology"}),(0,n.jsx)("li",{children:"SKALE"}),(0,n.jsx)("li",{children:"Web3Auth (Torus)"})]})]}),(0,n.jsx)("div",{children:(0,n.jsx)("img",{alt:"Web3Auth Auth Network",style:{height:"500px",flex:"1"},src:a})})]}),"\n",(0,n.jsx)(t.h2,{id:"privacy-user-data-and-compliance",children:"Privacy, User Data and Compliance"}),"\n",(0,n.jsx)(t.p,{children:"Web3Auth's takes a conservative approach to data collection. The only required stored data is a relationship of an anonymised identifier from the\nOAuth or JWT that is pegged up into the infrastucture."}),"\n",(0,n.jsxs)(t.p,{children:["This is often the required ",(0,n.jsx)(t.code,{children:"sub"})," field on the JWT RFC, which applications have the option of storing outright or storing a Hashed value of ",(0,n.jsx)(t.code,{children:"sub"}),". This\nrelationship is first created on initial key generation/assignment and later utilized to authenicate the specific public key and session token to the\nuser's end device."]}),"\n",(0,n.jsx)(t.h2,{id:"security-extensions",children:"Security Extensions"}),"\n",(0,n.jsx)(t.p,{children:"By limiting the base transaction types and functionality we can limit the complexity of the system and thus provide better guarantees on safety and\nliveness. The aforementioned functionality is sufficient for generic threshold cryptography operations."}),"\n",(0,n.jsx)(t.p,{children:'However, we fully intend to extend the capabilities of our system to support other interesting use cases. We make provisions for these types of\nextended functionality using "extensions" that reuse the existing interfaces that have already been defined.'}),"\n",(0,n.jsx)(t.h3,{id:"additional-verification--checks",children:"Additional verification / checks"}),"\n",(0,n.jsx)(t.p,{children:"Additional dynamic transaction verification / message validation can be done during the SessionRequest or SignRequest phase by each one of the nodes\nto reduce the impact of phishing attacks or scams. Smart contract wallet rules like spending limits can also be implemented in this way."}),"\n",(0,n.jsx)(t.h3,{id:"user-defined-access-structures",children:"User defined access structures"}),"\n",(0,n.jsx)(t.p,{children:"Although the default nodeset is defined by the application, the user may want to control this access. One way we can provide this functionality is by\nimplementing a proxy contract in front of the parameter lookups that happen at the start of SessionRequest, with this proxy contract being\nuser-controlled."})]})}function v(e={}){const{wrapper:t}={...(0,s.a)(),...e.components};return t?(0,n.jsx)(t,{...e,children:(0,n.jsx)(y,{...e})}):y(e)}},14438:(e,t,i)=>{i.d(t,{Z:()=>n});const n=i.p+"assets/images/key-management-f9daa363b42ea39692411c92766251cc.png"}}]);