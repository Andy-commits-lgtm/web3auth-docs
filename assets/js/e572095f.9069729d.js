"use strict";(self.webpackChunkweb3auth_docs=self.webpackChunkweb3auth_docs||[]).push([[46001],{9860:(e,t,s)=>{s.r(t),s.d(t,{assets:()=>h,contentTitle:()=>o,default:()=>c,frontMatter:()=>r,metadata:()=>a,toc:()=>l});var i=s(85893),n=s(11151);const r={title:"User Flows with Web3Auth",image:"images/docs-meta-cards/documentation-card.png",displayed_sidebar:"docs",description:"User Flows with Web3Auth | Documentation - Web3Auth"},o=void 0,a={id:"user-flow",title:"User Flows with Web3Auth",description:"User Flows with Web3Auth | Documentation - Web3Auth",source:"@site/docs/user-flow.mdx",sourceDirName:".",slug:"/user-flow",permalink:"/docs/user-flow",draft:!1,unlisted:!1,editUrl:"https://github.com/web3auth/web3auth-docs/edit/master/docs/user-flow.mdx",tags:[],version:"current",frontMatter:{title:"User Flows with Web3Auth",image:"images/docs-meta-cards/documentation-card.png",displayed_sidebar:"docs",description:"User Flows with Web3Auth | Documentation - Web3Auth"},sidebar:"docs",previous:{title:"How Web3Auth Works?",permalink:"/docs/how-web3auth-works"},next:{title:"Choosing the Correct Web3Auth Product",permalink:"/docs/product-fit/"}},h={},l=[{value:"One-Click Login",id:"one-click-login",level:2},{value:"Adding a Multi-Factor Authentication (Recommended)",id:"adding-a-multi-factor-authentication-recommended",level:2},{value:"Types of MFA Flows",id:"types-of-mfa-flows",level:3},{value:"Setting up the Threshold for MFA",id:"setting-up-the-threshold-for-mfa",level:3},{value:"Ideal time to trigger MFA according to the user flow",id:"ideal-time-to-trigger-mfa-according-to-the-user-flow",level:3},{value:"MFA Levels in Plug and Play SDKs",id:"mfa-levels-in-plug-and-play-sdks",level:4},{value:"Web3Auth&#39;s Approach Towards User Onboarding",id:"web3auths-approach-towards-user-onboarding",level:2},{value:"User Experience",id:"user-experience",level:3},{value:"Accessibility",id:"accessibility",level:3},{value:"Non-Custodial",id:"non-custodial",level:3},{value:"Interoperability",id:"interoperability",level:3}];function d(e){const t={a:"a",admonition:"admonition",code:"code",em:"em",h2:"h2",h3:"h3",h4:"h4",li:"li",ol:"ol",p:"p",strong:"strong",table:"table",tbody:"tbody",td:"td",th:"th",thead:"thead",tr:"tr",ul:"ul",...(0,n.a)(),...e.components};return(0,i.jsxs)(i.Fragment,{children:[(0,i.jsxs)(t.p,{children:["Web3Auth enables simple Web2 flows for Web3 onboarding. However, as good as that sounds, this process has a few moving parts for the developers to\nunderstand and implement. The major reason behind this is to ensure that the user information is secure and they're in control of their wallets. In\nall, our goal is that the process is transparent to the users and developers and they can choose the best flows according to their needs. Before\nstarting, make sure you understand ",(0,i.jsx)(t.a,{href:"/how-web3auth-works",children:"how web3auth works"}),", so that you can understand the different available flows mentioned here."]}),"\n",(0,i.jsx)(t.h2,{id:"one-click-login",children:"One-Click Login"}),"\n",(0,i.jsx)(t.p,{children:"This is the simplest flow for a user to onboard with Web3Auth. The user just needs to click on the login button, connect to their favorite social\naccount (OAuth) or any passwordless flow, like email passwordless, biometric authentication etc., and a wallet is generated for them. This flow has a\n1/1 Key Share setup and the whole key via Web3Auth Auth Network key shares in the openlogin.com frontend. This flow is still non-custodial since the\nnodes in the Web3Auth network have a 5/9 consensus mechanism to generate the key shares."}),"\n",(0,i.jsx)(t.admonition,{type:"warning",children:(0,i.jsxs)(t.p,{children:["While analyzing, one can claim that this flow is custodial to the OAuth Login provider, since this is directly generated using credentials provided by\nthem. Also, since the Web3Auth Network handles this flow independently, even while being decentralized, ",(0,i.jsx)(t.strong,{children:"we can call this flow a semi-custodial\nflow."})]})}),"\n",(0,i.jsx)(t.admonition,{type:"info",children:(0,i.jsxs)(t.p,{children:["In our One Click Flow, we add a ",(0,i.jsx)(t.code,{children:"nonce"})," value to the social login share to keep the threshold 2/2. while it feels like 1/1. This is done to ensure\nthat the application has the flexibility to move to a 2/n MFA flow in the future if they want to. As the application triggers the creation of MFA\nFactors the nonce is automatically deleted."]})}),"\n",(0,i.jsx)(t.admonition,{type:"tip",children:(0,i.jsxs)(t.ul,{children:["\n",(0,i.jsxs)(t.li,{children:["\n",(0,i.jsx)(t.p,{children:"The Single Factor SDKs help you directly achieve this flow."}),"\n"]}),"\n",(0,i.jsxs)(t.li,{children:["\n",(0,i.jsxs)(t.p,{children:["For Plug and Play SDKs, this flow can be achieved by setting the ",(0,i.jsx)(t.code,{children:"MFALevel"})," to ",(0,i.jsx)(t.code,{children:"'none'"})," within the Web3Auth Login while logging a user in."]}),"\n"]}),"\n"]})}),"\n",(0,i.jsx)(t.h2,{id:"adding-a-multi-factor-authentication-recommended",children:"Adding a Multi-Factor Authentication (Recommended)"}),"\n",(0,i.jsxs)(t.p,{children:["The Multi-Factor Authentication (MFA) feature refers to the ability of the user to create a backup share (recovery factor). This feature plays a key\nrole in the Wallet Infrastructure of Web3Auth and a developer needs to properly understand it to be able to onboard users safely and effectively. The\nmost interesting feature of adding a multi-factor authentication is that it makes the keys ",(0,i.jsx)(t.strong,{children:"self-custodial"})," to the user. This is achieved by\nassociating a key share alongside the factor that the user chooses to create, hence making sure the key is further distributed and not just associated\nwith the user's social account or the Web3Auth Network."]}),"\n",(0,i.jsx)(t.h3,{id:"types-of-mfa-flows",children:"Types of MFA Flows"}),"\n",(0,i.jsx)(t.p,{children:"With both Core Kit and Plug and Play SDKs, you have the choice to use multiple types of multi-factor flows according to your needs. With Plug and\nPlay, we expose various logins out of the box. For Core Kit SDKs, the developers can determine which flow suits them the most, with total freedom of\nmanaging key storage and access. For Plug and Play, we have some predefined configurations that can be used."}),"\n",(0,i.jsxs)(t.table,{children:[(0,i.jsx)(t.thead,{children:(0,i.jsxs)(t.tr,{children:[(0,i.jsx)(t.th,{children:"MFA Type"}),(0,i.jsx)(t.th,{children:"Custodiality of MFA"}),(0,i.jsx)(t.th,{children:"Ease of Access"}),(0,i.jsx)(t.th,{children:"Setup Custodiality"}),(0,i.jsx)(t.th,{children:"Availability in Plug and Play SDKs"})]})}),(0,i.jsxs)(t.tbody,{children:[(0,i.jsxs)(t.tr,{children:[(0,i.jsx)(t.td,{children:"**Recovery Mnemonic Phrase **"}),(0,i.jsx)(t.td,{children:"Self Custodial to User"}),(0,i.jsx)(t.td,{children:"Difficult"}),(0,i.jsx)(t.td,{children:"Fully Non-Custodial"}),(0,i.jsx)(t.td,{children:"Yes"})]}),(0,i.jsxs)(t.tr,{children:[(0,i.jsx)(t.td,{children:(0,i.jsx)(t.strong,{children:"Email Backup Share"})}),(0,i.jsx)(t.td,{children:"Potentially Custodial to Email Provider"}),(0,i.jsx)(t.td,{children:"Medium"}),(0,i.jsxs)(t.td,{children:["Non-Custodial ",(0,i.jsx)("br",{})," Semi-Custodial ",(0,i.jsx)(t.em,{children:"(if same email as first factor social login)"})]}),(0,i.jsx)(t.td,{children:"Yes, SMTP server for email can be customized for Enterprise Customers."})]}),(0,i.jsxs)(t.tr,{children:[(0,i.jsx)(t.td,{children:(0,i.jsx)(t.strong,{children:"Backup Password"})}),(0,i.jsx)(t.td,{children:"Semi Custodial to the Encrypted Metadata Server"}),(0,i.jsx)(t.td,{children:"Medium"}),(0,i.jsx)(t.td,{children:"Non-Custodial"}),(0,i.jsx)(t.td,{children:"Yes"})]}),(0,i.jsxs)(t.tr,{children:[(0,i.jsx)(t.td,{children:(0,i.jsx)(t.strong,{children:"Secondary Social Login"})}),(0,i.jsx)(t.td,{children:"Semi Custodial to Social Provider, using Distributed Web3Auth Network"}),(0,i.jsx)(t.td,{children:"Easy"}),(0,i.jsxs)(t.td,{children:["Non-Custodial ",(0,i.jsx)("br",{})," Semi-Custodial ",(0,i.jsx)(t.em,{children:"(if same social login provider for first factor)"})]}),(0,i.jsx)(t.td,{children:"Yes, however, custom authentication cannot be used for the second factor"})]}),(0,i.jsxs)(t.tr,{children:[(0,i.jsx)(t.td,{children:(0,i.jsx)(t.strong,{children:"SMS Passwordless"})}),(0,i.jsx)(t.td,{children:"Semi Custodial to SMS Service using Distributed Web3Auth Network"}),(0,i.jsx)(t.td,{children:"Easy"}),(0,i.jsx)(t.td,{children:"Non-Custodial"}),(0,i.jsx)(t.td,{children:"Yes, however, custom authentication cannot be used for the second factor"})]}),(0,i.jsxs)(t.tr,{children:[(0,i.jsx)(t.td,{children:(0,i.jsx)(t.strong,{children:"Email Passwordless"})}),(0,i.jsx)(t.td,{children:"Semi Custodial to Email Provider using Distributed Web3Auth Network"}),(0,i.jsx)(t.td,{children:"Easy"}),(0,i.jsxs)(t.td,{children:["Non-Custodial ",(0,i.jsx)("br",{})," Semi-Custodial ",(0,i.jsx)(t.em,{children:"(if same email as first factor social login)"})]}),(0,i.jsx)(t.td,{children:"Yes, however, custom authentication cannot be used for the second factor"})]}),(0,i.jsxs)(t.tr,{children:[(0,i.jsx)(t.td,{children:(0,i.jsx)(t.strong,{children:"Passkeys"})}),(0,i.jsx)(t.td,{children:"Semi Custodial using Distributed Web3Auth Network"}),(0,i.jsx)(t.td,{children:"Easy"}),(0,i.jsx)(t.td,{children:"Non-Custodial"}),(0,i.jsx)(t.td,{children:"No"})]})]})]}),"\n",(0,i.jsx)(t.h3,{id:"setting-up-the-threshold-for-mfa",children:"Setting up the Threshold for MFA"}),"\n",(0,i.jsx)(t.p,{children:"The threshold for MFA is the number of shares required to access the user's wallet. This is a very important factor to consider while onboarding your\nonboarding flow. As we have seen the ideal threshold is 2/n, where the first is the social login share, alongside multiple recovery device shares.\nThis gives the user a flow that they're used to alongside ease of access on their trusted devices."}),"\n",(0,i.jsx)(t.p,{children:"That being said, the threshold can be set to any number as per the security requirements of the integrating application. However, this can be done\nonly using the Core Kit SDKs. The Plug and Play SDKs come with a default threshold of 2/n."}),"\n",(0,i.jsxs)(t.table,{children:[(0,i.jsx)(t.thead,{children:(0,i.jsxs)(t.tr,{children:[(0,i.jsx)(t.th,{children:"Parameter"}),(0,i.jsx)(t.th,{children:"restricting to 2/2 shares"}),(0,i.jsx)(t.th,{children:"allowing \u2265 2/3 shares"})]})}),(0,i.jsxs)(t.tbody,{children:[(0,i.jsxs)(t.tr,{children:[(0,i.jsxs)(t.td,{children:[(0,i.jsx)(t.strong,{children:"Non-Custodiality:"})," Ownership/access to a user key and/or Ability to grief?"]}),(0,i.jsx)(t.td,{children:"\u201cSemi-custodial\u201d - Never has access but nodes/ network always can grieve in this setup, as they always own one of the only factors."}),(0,i.jsx)(t.td,{children:"More fully non-custodial, can\u2019t grief, a user can ALWAYS reconstruct their key pair"})]}),(0,i.jsxs)(t.tr,{children:[(0,i.jsxs)(t.td,{children:[(0,i.jsx)(t.strong,{children:"Redundancy:"})," The ability to ensure that users never lose their key. Conversely the likelihood of a user\u2019s key being lost, due to a loss of factors."]}),(0,i.jsx)(t.td,{children:"In a 2/2 setup, the nodes become even more important. If nodes go down/lose factor due to issues users lose their keys. Users get redundancy on their side by copying the factor/share that they have across their devices."}),(0,i.jsx)(t.td,{children:"In a \u2265 2/3 setup, users can get redundancy in the same way as 2/2 (by copying the same factors) or by increasing the threshold 2/4, 2/5."})]}),(0,i.jsxs)(t.tr,{children:[(0,i.jsxs)(t.td,{children:[(0,i.jsx)(t.strong,{children:"Control vs Security:"})," Restricted access means greater practical security from the network/cloud provider"]}),(0,i.jsx)(t.td,{children:"When we restrict things to the 2/2 flow, we can be certain that the user cannot transact without the node network. While it acts as a sword towards non-custodial, it can be a strong shield. For example, we can not allow a tx that withdraws all the user's money from the user (unless they do extra validation with us)"}),(0,i.jsx)(t.td,{children:"in the 2/3 flow, the user always has full access to the key. We can still do the same restrictions, but we don\u2019t have the guarantee that the user won\u2019t transact without us cause they can always reconstruct the key."})]}),(0,i.jsxs)(t.tr,{children:[(0,i.jsxs)(t.td,{children:[(0,i.jsx)(t.strong,{children:"Exportability vs Security:"})," Exporting keys from the system"]}),(0,i.jsx)(t.td,{children:"To have a restricted 2/2 flow is to restrict exportability. Still can be done with extra validation."}),(0,i.jsx)(t.td,{children:"Always exportable all the time. This could be a detriment as, if we give the ability to transport and reshare the key out (without extra validation/restriction) it's as good as v1 technically as a hacker can always reshare the user keys."})]})]})]}),"\n",(0,i.jsx)(t.h3,{id:"ideal-time-to-trigger-mfa-according-to-the-user-flow",children:"Ideal time to trigger MFA according to the user flow"}),"\n",(0,i.jsxs)(t.p,{children:["The ideal time to trigger MFA is when the user is comfortable with the application and is ready to take the next step towards securing their account.\nMost users try to lurk around the application to know the gist of it before they're ready to commit to it. This is the ideal time to trigger MFA for\nthe user. However, this is not a hard and fast rule and the dApp can choose to trigger MFA at any point in time. With all our SDKs, you can decide\nwhen to trigger your MFA flow. This has to be done manually in the Core Kit SDKs and using the ",(0,i.jsx)(t.code,{children:"MFALevel"})," parameter in the Plug and Play SDKs."]}),"\n",(0,i.jsx)(t.h4,{id:"mfa-levels-in-plug-and-play-sdks",children:"MFA Levels in Plug and Play SDKs"}),"\n",(0,i.jsxs)(t.ul,{children:["\n",(0,i.jsxs)(t.li,{children:["\n",(0,i.jsxs)(t.p,{children:[(0,i.jsx)(t.strong,{children:"Default MFA:"})," During the first login, the user is onboarded using the one-click login flow and allowed to experience the application. However, to\neventually, enhance security, they're prompted to create a backup share (recovery phrase) ",(0,i.jsx)(t.strong,{children:"every third login"}),", which is optional for the user to\ncreate."]}),"\n",(0,i.jsx)(t.admonition,{type:"info",children:(0,i.jsxs)(t.p,{children:["This can be achieved by setting the ",(0,i.jsx)(t.code,{children:"MFALevel"})," to ",(0,i.jsx)(t.code,{children:"'default'"})," within the Web3Auth Login while logging a user in."]})}),"\n"]}),"\n",(0,i.jsxs)(t.li,{children:["\n",(0,i.jsxs)(t.p,{children:[(0,i.jsx)(t.strong,{children:"Optional MFA:"})," This is similar to the default MFA, except that the user is prompted to create a backup share at every login and is optional for\nthem to create."]}),"\n",(0,i.jsx)(t.admonition,{type:"info",children:(0,i.jsxs)(t.p,{children:["This can be achieved by setting the ",(0,i.jsx)(t.code,{children:"MFALevel"})," to ",(0,i.jsx)(t.code,{children:"'optional'"})," within the Web3Auth Login while logging a user in."]})}),"\n"]}),"\n",(0,i.jsxs)(t.li,{children:["\n",(0,i.jsxs)(t.p,{children:[(0,i.jsx)(t.strong,{children:"Mandatory MFA:"})," During the first login, the user is asked to create a backup share (recovery phrase) and it is a mandatory requirement for the\nuser to create it."]}),"\n",(0,i.jsx)(t.admonition,{type:"info",children:(0,i.jsxs)(t.p,{children:["This can be achieved by setting the ",(0,i.jsx)(t.code,{children:"MFALevel"})," to ",(0,i.jsx)(t.code,{children:"'mandatory'"})," within the Web3Auth Login while logging a user in."]})}),"\n"]}),"\n"]}),"\n",(0,i.jsx)(t.h2,{id:"web3auths-approach-towards-user-onboarding",children:"Web3Auth's Approach Towards User Onboarding"}),"\n",(0,i.jsxs)(t.p,{children:["Web3Auth approaches user onboarding via ",(0,i.jsx)(t.strong,{children:"Progressive Discoverability"}),". This means that we are not forcing users to create a backup share right away.\nInstead, we want them to be able to use the application in the traditional ways they're familiar with and once they're comfortable with the\napplication, we can then introduce the concept of Multi-Factor Authentication to them. However, it highly depends on the dApps how they want to\napproach this within their user flows. Below mentioned are the 4 pillars for Progressive Discoverability with Web3Auth:"]}),"\n",(0,i.jsx)(t.h3,{id:"user-experience",children:"User Experience"}),"\n",(0,i.jsx)(t.p,{children:"This constitutes the user experience of the dApp. The dApp should be able to provide a seamless experience for the user to onboard. The focus here\nincludes:"}),"\n",(0,i.jsxs)(t.ol,{children:["\n",(0,i.jsx)(t.li,{children:"Onboard with a single click"}),"\n",(0,i.jsx)(t.li,{children:"Provide a familiar Web2 user experience"}),"\n"]}),"\n",(0,i.jsx)(t.h3,{id:"accessibility",children:"Accessibility"}),"\n",(0,i.jsx)(t.p,{children:"These are the different flows that the dApp can use to onboard users, according to the security and privacy needs of the dApp. There are multiple\ntypes of flows:"}),"\n",(0,i.jsxs)(t.ul,{children:["\n",(0,i.jsxs)(t.li,{children:["\n",(0,i.jsxs)(t.p,{children:[(0,i.jsx)(t.strong,{children:"One-click login"})," - only 1/1 Key Share required to login"]}),"\n"]}),"\n",(0,i.jsxs)(t.li,{children:["\n",(0,i.jsxs)(t.p,{children:[(0,i.jsx)(t.strong,{children:"Enhanced security login"})," - 2/3 Key Shares required to login"]}),"\n"]}),"\n",(0,i.jsxs)(t.li,{children:["\n",(0,i.jsx)(t.p,{children:(0,i.jsx)(t.strong,{children:"Types of Shares"})}),"\n",(0,i.jsxs)(t.ul,{children:["\n",(0,i.jsxs)(t.li,{children:["\n",(0,i.jsxs)(t.p,{children:[(0,i.jsx)(t.strong,{children:"Social Login Share"})," - Share attached with the user's social media account via the Web3Auth Auth Network. Please note that this share is also\nnot custodial to any social network, rather the Web3Auth Network generates it with a 5/9 consensus mechanism."]}),"\n"]}),"\n",(0,i.jsxs)(t.li,{children:["\n",(0,i.jsxs)(t.p,{children:[(0,i.jsx)(t.strong,{children:"Trusted Device Share"})," - Share attached with the user's device. This share is stored within the browser's local storage or as a dApp Share\nwithin the particular application's local context."]}),"\n"]}),"\n",(0,i.jsxs)(t.li,{children:["\n",(0,i.jsxs)(t.p,{children:[(0,i.jsx)(t.strong,{children:"Recovery Share"})," - Share attached with the user's recovery phrase. This share is generally shown to the user while creating an MFA and the user\nhas the flexibility to choose their recovery method. From social logins and passwordless to password-based and manual key input, the user can\nchoose any method to recover their account."]}),"\n",(0,i.jsx)(t.admonition,{type:"info",children:(0,i.jsx)(t.p,{children:"Please note that all these shares represent just 1/2 of the private key and on their own are not enough to log in. However, the user can\nreconstruct them using Web3Auth, if they provide any 2 of these shares while logging in."})}),"\n"]}),"\n"]}),"\n"]}),"\n"]}),"\n",(0,i.jsx)(t.h3,{id:"non-custodial",children:"Non-Custodial"}),"\n",(0,i.jsx)(t.p,{children:"This is the major pillar that supports all the processes of Web3Auth. Being a non-custodial solution, Web3Auth does not store any user data, or any\nkeys on its servers. This means that the user is in full control of their data and wallets. This also means that the user can lose their account if\nthey are not able to provide the correct shares to reconstruct their private key. This is major information that the user needs to be made aware of\nbeyond the integrating application. A dApp can achieve this by:"}),"\n",(0,i.jsxs)(t.ul,{children:["\n",(0,i.jsx)(t.li,{children:"Making users aware of openlogin.com and how Web3Auth manages their wallets."}),"\n",(0,i.jsx)(t.li,{children:"Making users aware of the different types of shares and how they can be used to reconstruct their private keys."}),"\n",(0,i.jsx)(t.li,{children:"Making users aware of the importance of keeping their recovery phrases safe."}),"\n",(0,i.jsx)(t.li,{children:"Occasional check if the user has a recovery phrase or not."}),"\n"]}),"\n",(0,i.jsx)(t.h3,{id:"interoperability",children:"Interoperability"}),"\n",(0,i.jsxs)(t.p,{children:["Interoperability, or the ability to use the same account across multiple applications, is a key feature of Web3Auth. This is achieved by the multiple\nflows as mentioned in the ",(0,i.jsx)(t.a,{href:"/pnp/features/interoperability",children:"Interoperability"})," section of the documentation."]})]})}function c(e={}){const{wrapper:t}={...(0,n.a)(),...e.components};return t?(0,i.jsx)(t,{...e,children:(0,i.jsx)(d,{...e})}):d(e)}},11151:(e,t,s)=>{s.d(t,{Z:()=>a,a:()=>o});var i=s(67294);const n={},r=i.createContext(n);function o(e){const t=i.useContext(r);return i.useMemo((function(){return"function"==typeof e?e(t):{...t,...e}}),[t,e])}function a(e){let t;return t=e.disableParentContext?"function"==typeof e.components?e.components(n):e.components||n:o(e.components),i.createElement(r.Provider,{value:t},e.children)}}}]);