"use strict";(self.webpackChunkweb3auth_docs=self.webpackChunkweb3auth_docs||[]).push([[1056],{7962:(e,i,t)=>{t.r(i),t.d(i,{assets:()=>d,contentTitle:()=>s,default:()=>c,frontMatter:()=>a,metadata:()=>o,toc:()=>h});var r=t(85893),n=t(11151);const a={title:"Creating Aggregate Verifier on the Web3Auth Dashboard",sidebar_label:"Aggregate Verifier",displayed_sidebar:"docs",description:"Creating Aggregate Verifier on the Web3Auth Dashboard | Documentation - Web3Auth",image:"images/docs-meta-cards/documentation-card.png"},s=void 0,o={id:"auth-provider-setup/aggregate-verifier",title:"Creating Aggregate Verifier on the Web3Auth Dashboard",description:"Creating Aggregate Verifier on the Web3Auth Dashboard | Documentation - Web3Auth",source:"@site/docs/auth-provider-setup/aggregate-verifier.mdx",sourceDirName:"auth-provider-setup",slug:"/auth-provider-setup/aggregate-verifier",permalink:"/docs/auth-provider-setup/aggregate-verifier",draft:!1,unlisted:!1,editUrl:"https://github.com/web3auth/web3auth-docs/edit/master/docs/auth-provider-setup/aggregate-verifier.mdx",tags:[],version:"current",frontMatter:{title:"Creating Aggregate Verifier on the Web3Auth Dashboard",sidebar_label:"Aggregate Verifier",displayed_sidebar:"docs",description:"Creating Aggregate Verifier on the Web3Auth Dashboard | Documentation - Web3Auth",image:"images/docs-meta-cards/documentation-card.png"},sidebar:"docs",previous:{title:"Create Verifiers",permalink:"/docs/auth-provider-setup/verifiers"},next:{title:"Social Providers",permalink:"/docs/auth-provider-setup/social-providers/"}},d={},h=[{value:"Set up an Aggregate Verifier",id:"set-up-an-aggregate-verifier",level:3},{value:"Example",id:"example",level:3}];function l(e){const i={a:"a",admonition:"admonition",code:"code",h3:"h3",img:"img",li:"li",ol:"ol",p:"p",pre:"pre",strong:"strong",...(0,n.a)(),...e.components};return(0,r.jsxs)(r.Fragment,{children:[(0,r.jsxs)(i.p,{children:["Developers can create ",(0,r.jsx)(i.code,{children:"Aggregate Multiple Provider"})," from the Web3Auth Dashboard by combining multiple login methods to create a verifier to get the\nsame address for their user regardless of their login providers. For example, combining a ",(0,r.jsx)(i.code,{children:"Google"})," and ",(0,r.jsx)(i.code,{children:"Email Passwordless"})," login or ",(0,r.jsx)(i.code,{children:"Google"})," and\n",(0,r.jsx)(i.code,{children:"GitHub"})," via Auth0 to access the same address for your user. These login methods should share the same Verifier ID, e.g., ",(0,r.jsx)(i.code,{children:"email"}),"; Such verifiers are\ncalled ",(0,r.jsx)(i.code,{children:"Single ID Verifiers"}),"."]}),"\n",(0,r.jsx)(i.h3,{id:"set-up-an-aggregate-verifier",children:"Set up an Aggregate Verifier"}),"\n",(0,r.jsxs)(i.ol,{children:["\n",(0,r.jsxs)(i.li,{children:["\n",(0,r.jsxs)(i.p,{children:["Create an aggregate verifier for your application by selecting ",(0,r.jsx)(i.code,{children:"Aggregate Multiple Providers"})," as the Login provider from the login providers.\n",(0,r.jsx)(i.img,{alt:"Login Providers list on Web3Auth Dashboard",src:t(2173).Z+"",width:"1840",height:"1191"})]}),"\n"]}),"\n",(0,r.jsxs)(i.li,{children:["\n",(0,r.jsxs)(i.p,{children:["Click on ",(0,r.jsx)(i.code,{children:"Add Sub Verifiers"})," to add a new sub-verifier.\n",(0,r.jsx)(i.img,{alt:"Add first sub-verifier on Web3Auth Dashboard",src:t(20405).Z+"",width:"2624",height:"1902"})]}),"\n"]}),"\n",(0,r.jsxs)(i.li,{children:["\n",(0,r.jsxs)(i.p,{children:["Select any social login provider from the list to start with. Here we're selecting ",(0,r.jsx)(i.code,{children:"Google"}),". Paste the ",(0,r.jsx)(i.strong,{children:"Client ID"})," from the Google App to the\n",(0,r.jsx)(i.code,{children:"Client ID"})," field and click on ",(0,r.jsx)(i.code,{children:"Add Sub Verifiers"}),".\n",(0,r.jsx)(i.img,{alt:"Select Google from Login Providers list on Web3Auth Dashboard",src:t(77894).Z+"",width:"1840",height:"1191"})]}),"\n"]}),"\n",(0,r.jsxs)(i.li,{children:["\n",(0,r.jsxs)(i.p,{children:["Next, create the second sub-verifier. Click on ",(0,r.jsx)(i.code,{children:"Add Sub Verifiers"})," to add a new sub-verifier."]}),"\n"]}),"\n",(0,r.jsxs)(i.li,{children:["\n",(0,r.jsxs)(i.p,{children:["Select ",(0,r.jsx)(i.code,{children:"Auth0"})," on the dropdown or choose ",(0,r.jsx)(i.code,{children:"Custom Providers"})," from the radio buttons. We're selecting ",(0,r.jsx)(i.code,{children:"Auth0"})," in this example.\n",(0,r.jsx)(i.img,{alt:"Auth0 as sub verifier on Web3Auth Dashboard",src:t(5090).Z+"",width:"2766",height:"1902"})]}),"\n"]}),"\n",(0,r.jsxs)(i.li,{children:["\n",(0,r.jsxs)(i.p,{children:["Select the ",(0,r.jsx)(i.code,{children:"Authentication Type"})," based on your application need on the dropdown. We're selecting ",(0,r.jsx)(i.code,{children:"GitHub"})," in this example.\n",(0,r.jsx)(i.img,{alt:"Create Aggregate Verifiier on Web3Auth Dashboard",src:t(91507).Z+"",width:"1840",height:"1191"})]}),"\n"]}),"\n",(0,r.jsxs)(i.li,{children:["\n",(0,r.jsxs)(i.p,{children:["Select ",(0,r.jsx)(i.code,{children:"Email"})," as the ",(0,r.jsx)(i.strong,{children:"JWT Verifier ID"})," and enter the ",(0,r.jsx)(i.code,{children:"Auth0 Client ID"})," and ",(0,r.jsx)(i.code,{children:"Auth0 Domain"})," from your Auth0 application. See how to create a new\nAuth0 application ",(0,r.jsx)(i.a,{href:"https://auth0.com/docs/quickstart/webapp/",children:"here"}),"."]}),"\n",(0,r.jsxs)(i.p,{children:[(0,r.jsx)(i.img,{alt:"Create GitHub Sub Verifiier on Web3Auth Dashboard",src:t(67673).Z+"",width:"1840",height:"1191"}),"\n",(0,r.jsx)(i.img,{alt:"Domain and Client ID from Auth0 Dashboard",src:t(37330).Z+"",width:"4112",height:"1796"})]}),"\n",(0,r.jsx)(i.admonition,{title:"NOTE",type:"info",children:(0,r.jsxs)(i.ol,{children:["\n",(0,r.jsxs)(i.li,{children:["Add the ",(0,r.jsx)(i.a,{href:"https://marketplace.auth0.com/integrations/github-social-connection",children:"GitHub Social Connection"})," to your Auth0 application."]}),"\n",(0,r.jsxs)(i.li,{children:["One has to request an email from the user while setting up the GitHub Social Connection on the Auth0 Dashboard.\n",(0,r.jsx)(i.img,{alt:"Request Email address for GitHub Social connection",src:t(47937).Z+"",width:"4172",height:"3052"})]}),"\n"]})}),"\n"]}),"\n",(0,r.jsxs)(i.li,{children:["\n",(0,r.jsxs)(i.p,{children:["Similarly, create a third sub-verifier for ",(0,r.jsx)(i.code,{children:"Email Passwordless"})," via Auth0. Follow the above steps from 5 to 8, and select ",(0,r.jsx)(i.code,{children:"Email Passwordless"})," in\nplace of ",(0,r.jsx)(i.code,{children:"GitHub"}),".\n",(0,r.jsx)(i.img,{alt:"Create Email Passwordless Sub Verifiier on Web3Auth Dashboard",src:t(26519).Z+"",width:"1840",height:"1191"})]}),"\n"]}),"\n",(0,r.jsxs)(i.li,{children:["\n",(0,r.jsxs)(i.p,{children:["Finally, click on ",(0,r.jsx)(i.code,{children:"Create"})," to deploy the verifier."]}),"\n"]}),"\n"]}),"\n",(0,r.jsx)(i.admonition,{title:"NOTE",type:"note",children:(0,r.jsx)(i.p,{children:"You can aggregate two or more verifiers."})}),"\n",(0,r.jsx)(i.h3,{id:"example",children:"Example"}),"\n",(0,r.jsx)(i.pre,{children:(0,r.jsx)(i.code,{className:"language-tsx",children:'import { Web3AuthNoModal } from "@web3auth/no-modal";\nimport { OpenloginAdapter } from "@web3auth/openlogin-adapter";\nimport { EthereumPrivateKeyProvider } from "@web3auth/ethereum-provider";\n\nconst clientId = "BPi5PB_UiIZ-cPz1GtV5i1I2iOSOHuimiXBI0e-Oe_u6X3oVAbCiAZOTEBtTXw4tsluTITPqA8zMsfxIKMjiqNQ";\n// get it from https://dashboard.web3auth.io by creating a Plug n Play project.\n\n\nconst chainConfig = {\n  chainNamespace: "eip155",\n  chainId: "0x1",\n  rpcTarget: "https://rpc.ankr.com/eth",\n  displayName: "Ethereum Mainnet",\n  blockExplorerUrl: "https://etherscan.io",\n  ticker: "ETH",\n  tickerName: "Ethereum",\n  logo: "https://images.toruswallet.io/ethereum.svg"\n};\n\nconst privateKeyProvider = new EthereumPrivateKeyProvider({ config: { chainConfig } });\n\nconst web3auth = new Web3AuthNoModal({\n  clientId,\n  web3AuthNetwork: "sapphire_mainnet",\n  privateKeyProvider: privateKeyProvider,\n});\n\nconst openloginAdapter = new OpenloginAdapter({\n  adapterSettings: {\n    loginConfig: {\n      // Google login\n      google: {\n        verifier: "aggregate-sapphire", // Pass the Verifier name here. eg. w3a-agg-example\n        verifierSubIdentifier: "w3a-google", // Pass the Sub-Verifier here. eg w3a-google\n        typeOfLogin: "google", // Pass the type of login provider.\n        clientId: "519228911939-cri01h55lsjbsia1k7ll6qpalrus75ps.apps.googleusercontent.com", // Pass the Google `Client ID` here.\n      },\n      // GitHub Login via Auth0\n      github: {\n        verifier: "aggregate-sapphire", // Pass the Verifier name here. eg. w3a-agg-example\n        verifierSubIdentifier: "w3a-a0-github", // Pass the Sub-Verifier here. eg w3a-a0-github\n        typeOfLogin: "jwt", // Pass the type of login provider. For Auth0, it\'s jwt and not Auth0.\n        clientId: "hiLqaop0amgzCC0AXo4w0rrG9abuJTdu", // Pass the Auth0 `Client ID` here.\n      },\n      // Email Password Login via Auth0\n      emailpasswordless: {\n        verifier: "aggregate-sapphire", // Pass the Verifier name here. eg. w3a-agg-example\n        verifierSubIdentifier: "w3a-a0-email-passwordless", // Pass the Sub-Verifier here. eg w3a-a0-email-passwordless\n        typeOfLogin: "jwt", // Pass the type of login provider. For Auth0, it\'s jwt and not Auth0.\n        clientId: "QiEf8qZ9IoasbZsbHvjKZku4LdnRC1Ct", // Pass the `Client ID` of your Auth0 Application.\n      },\n    },\n  },\n  privateKeyProvider,\n});\n\nweb3auth.configureAdapter(openloginAdapter);\n\n// Initialize\nawait web3auth.init();\n\n// When user clicks Google button, use this to Login with Google\nconst web3authProvider = await web3auth.connectTo("openlogin", {\n  loginProvider: "google",\n});\n\n// When user clicks Email Passwordless button, use this to Login with Email Passwordless via Auth0\nconst web3authProvider = await web3auth.connectTo("openlogin", {\n  loginProvider: "emailpasswordless",\n  extraLoginOptions: {\n    domain: "https://web3auth.au.auth0.com", // Pass the Auth0 Domain here, eg. https://web3auth.au.auth0.com\n    // This corresponds to the field inside jwt which must be used to uniquely identify the user.\n    verifierIdField: "email", // This is mapped b/w google and github logins.\n    isVerifierIdCaseSensitive: false,\n  },\n});\n\n// When user clicks GitHub button, use this to Login with GitHub via Auth0\nconst web3authProvider = await web3auth.connectTo("openlogin", {\n  loginProvider: "github",\n  extraLoginOptions: {\n    domain: "https://web3auth.au.auth0.com", // Pass the Auth0 Domain here, eg. https://web3auth.au.auth0.com\n    // This corresponds to the field inside jwt which must be used to uniquely identify the user.\n    verifierIdField: "email", // This is mapped b/w google and github logins.\n    isVerifierIdCaseSensitive: false,\n  },\n});\n'})}),"\n",(0,r.jsx)(i.admonition,{title:"Example app",type:"info",children:(0,r.jsxs)(i.p,{children:["Check out the\n",(0,r.jsx)(i.a,{href:"https://github.com/Web3Auth/web3auth-pnp-examples/tree/main/web-no-modal-sdk/custom-authentication/aggregate-verifier-examples/auth0-google-aggregate-no-modal-example",children:(0,r.jsx)(i.strong,{children:"full example on GitHub"})}),"."]})})]})}function c(e={}){const{wrapper:i}={...(0,n.a)(),...e.components};return i?(0,r.jsx)(i,{...e,children:(0,r.jsx)(l,{...e})}):l(e)}},47937:(e,i,t)=>{t.d(i,{Z:()=>r});const r=t.p+"assets/images/av-a0-github-email-6f725e6fcf9df6cb706424816bc29a87.png"},37330:(e,i,t)=>{t.d(i,{Z:()=>r});const r=t.p+"assets/images/av-a0-github-bee90925fc729fe0c79bf2dc1f23897f.png"},5090:(e,i,t)=>{t.d(i,{Z:()=>r});const r=t.p+"assets/images/create-verifier-aggregate-add-second-sub-ffb5042aebecfcfdab1c60a2d2b7a90e.png"},20405:(e,i,t)=>{t.d(i,{Z:()=>r});const r=t.p+"assets/images/create-verifier-aggregate-add-sub-ad49856ee62f5512470c969611f1d01b.png"},26519:(e,i,t)=>{t.d(i,{Z:()=>r});const r=t.p+"assets/images/create-verifier-aggregate-auth0-email-passwordless-filled-afa4bc131460aaacd7f453c11e2627a3.png"},67673:(e,i,t)=>{t.d(i,{Z:()=>r});const r=t.p+"assets/images/create-verifier-aggregate-auth0-github-filled-c5f13a5d5dfe78959fb1f50c353187d4.png"},91507:(e,i,t)=>{t.d(i,{Z:()=>r});const r=t.p+"assets/images/create-verifier-aggregate-auth0-github-2d779ae05934e484d7b34c8230b8b2d7.png"},77894:(e,i,t)=>{t.d(i,{Z:()=>r});const r=t.p+"assets/images/create-verifier-aggregate-google-c6773552b7a1fef67415101533ad900a.png"},2173:(e,i,t)=>{t.d(i,{Z:()=>r});const r=t.p+"assets/images/create-verifier-aggregate-bc961cd761b0ce0dbbcc6d1c5e3e3752.png"},11151:(e,i,t)=>{t.d(i,{Z:()=>o,a:()=>s});var r=t(67294);const n={},a=r.createContext(n);function s(e){const i=r.useContext(a);return r.useMemo((function(){return"function"==typeof e?e(i):{...i,...e}}),[i,e])}function o(e){let i;return i=e.disableParentContext?"function"==typeof e.components?e.components(n):e.components||n:s(e.components),r.createElement(a.Provider,{value:i},e.children)}}}]);